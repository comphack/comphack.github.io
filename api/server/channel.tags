<?xml version='1.0' encoding='UTF-8' standalone='yes' ?>
<tagfile>
  <compound kind="file">
    <name>AccountLogin.cpp</name>
    <path>C:/projects/comp-hack/server/channel/src/packets/internal/</path>
    <filename>AccountLogin_8cpp</filename>
    <includes id="AccountManager_8h" name="AccountManager.h" local="yes" imported="no">AccountManager.h</includes>
    <includes id="ChannelServer_8h" name="ChannelServer.h" local="yes" imported="no">ChannelServer.h</includes>
    <includes id="ManagerConnection_8h" name="ManagerConnection.h" local="yes" imported="no">ManagerConnection.h</includes>
    <member kind="function">
      <type>void</type>
      <name>HandleLoginResponse</name>
      <anchorfile>AccountLogin_8cpp.html</anchorfile>
      <anchor>afbed0e021c8c8b741774697301704585</anchor>
      <arglist>(AccountManager *accountManager, const std::shared_ptr&lt; channel::ChannelClientConnection &gt; client)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>AccountLogout.cpp</name>
    <path>C:/projects/comp-hack/server/channel/src/packets/internal/</path>
    <filename>AccountLogout_8cpp</filename>
    <includes id="AccountManager_8h" name="AccountManager.h" local="yes" imported="no">AccountManager.h</includes>
    <includes id="ChannelServer_8h" name="ChannelServer.h" local="yes" imported="no">ChannelServer.h</includes>
    <includes id="ManagerConnection_8h" name="ManagerConnection.h" local="yes" imported="no">ManagerConnection.h</includes>
  </compound>
  <compound kind="file">
    <name>AccountManager.cpp</name>
    <path>C:/projects/comp-hack/server/channel/src/</path>
    <filename>AccountManager_8cpp</filename>
    <includes id="AccountManager_8h" name="AccountManager.h" local="yes" imported="no">AccountManager.h</includes>
    <includes id="ChannelServer_8h" name="ChannelServer.h" local="yes" imported="no">ChannelServer.h</includes>
    <includes id="ChannelSyncManager_8h" name="ChannelSyncManager.h" local="yes" imported="no">ChannelSyncManager.h</includes>
    <includes id="CharacterManager_8h" name="CharacterManager.h" local="yes" imported="no">CharacterManager.h</includes>
    <includes id="EventManager_8h" name="EventManager.h" local="yes" imported="no">EventManager.h</includes>
    <includes id="ManagerConnection_8h" name="ManagerConnection.h" local="yes" imported="no">ManagerConnection.h</includes>
    <includes id="TokuseiManager_8h" name="TokuseiManager.h" local="yes" imported="no">TokuseiManager.h</includes>
    <includes id="ZoneManager_8h" name="ZoneManager.h" local="yes" imported="no">ZoneManager.h</includes>
  </compound>
  <compound kind="file">
    <name>AccountManager.h</name>
    <path>C:/projects/comp-hack/server/channel/src/</path>
    <filename>AccountManager_8h</filename>
    <includes id="ChannelClientConnection_8h" name="ChannelClientConnection.h" local="yes" imported="no">ChannelClientConnection.h</includes>
    <class kind="class">channel::AccountManager</class>
    <namespace>channel</namespace>
    <namespace>libcomp</namespace>
    <namespace>objects</namespace>
    <member kind="enumeration">
      <type></type>
      <name>LogoutCode_t</name>
      <anchorfile>namespacechannel.html</anchorfile>
      <anchor>ade16ce877e5df692030e3543d76b1e75</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>LOGOUT_CODE_UNKNOWN_MIN</name>
      <anchorfile>namespacechannel.html</anchorfile>
      <anchor>ade16ce877e5df692030e3543d76b1e75a7055f4b2966e4f6dcbc57779e90378a1</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>LOGOUT_CODE_QUIT</name>
      <anchorfile>namespacechannel.html</anchorfile>
      <anchor>ade16ce877e5df692030e3543d76b1e75a84cfc137ccb674488bbd8ccf3b28406c</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>LOGOUT_CODE_CANCEL</name>
      <anchorfile>namespacechannel.html</anchorfile>
      <anchor>ade16ce877e5df692030e3543d76b1e75af898e5700a13e40bbfb99f168a7ff76b</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>LOGOUT_CODE_SWITCH</name>
      <anchorfile>namespacechannel.html</anchorfile>
      <anchor>ade16ce877e5df692030e3543d76b1e75a9116879a6c9cf80094a48e39cb27d965</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>LOGOUT_CODE_UNKNOWN_MAX</name>
      <anchorfile>namespacechannel.html</anchorfile>
      <anchor>ade16ce877e5df692030e3543d76b1e75a1c949a28a2766bd9f780ae3f48f02b9a</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>ActionManager.cpp</name>
    <path>C:/projects/comp-hack/server/channel/src/</path>
    <filename>ActionManager_8cpp</filename>
    <includes id="ActionManager_8h" name="ActionManager.h" local="yes" imported="no">ActionManager.h</includes>
    <includes id="AccountManager_8h" name="AccountManager.h" local="yes" imported="no">AccountManager.h</includes>
    <includes id="ChannelServer_8h" name="ChannelServer.h" local="yes" imported="no">ChannelServer.h</includes>
    <includes id="CharacterManager_8h" name="CharacterManager.h" local="yes" imported="no">CharacterManager.h</includes>
    <includes id="EventManager_8h" name="EventManager.h" local="yes" imported="no">EventManager.h</includes>
    <includes id="ManagerConnection_8h" name="ManagerConnection.h" local="yes" imported="no">ManagerConnection.h</includes>
    <includes id="TokuseiManager_8h" name="TokuseiManager.h" local="yes" imported="no">TokuseiManager.h</includes>
    <includes id="ZoneManager_8h" name="ZoneManager.h" local="yes" imported="no">ZoneManager.h</includes>
    <class kind="struct">channel::ActionContext</class>
  </compound>
  <compound kind="file">
    <name>ActionManager.h</name>
    <path>C:/projects/comp-hack/server/channel/src/</path>
    <filename>ActionManager_8h</filename>
    <includes id="ChannelClientConnection_8h" name="ChannelClientConnection.h" local="yes" imported="no">ChannelClientConnection.h</includes>
    <class kind="class">channel::ActionManager</class>
    <namespace>channel</namespace>
  </compound>
  <compound kind="file">
    <name>ActiveEntityState.cpp</name>
    <path>C:/projects/comp-hack/server/channel/src/</path>
    <filename>ActiveEntityState_8cpp</filename>
    <includes id="ActiveEntityState_8h" name="ActiveEntityState.h" local="yes" imported="no">ActiveEntityState.h</includes>
    <includes id="AIState_8h" name="AIState.h" local="yes" imported="no">AIState.h</includes>
    <includes id="ChannelServer_8h" name="ChannelServer.h" local="yes" imported="no">ChannelServer.h</includes>
    <includes id="CharacterManager_8h" name="CharacterManager.h" local="yes" imported="no">CharacterManager.h</includes>
    <includes id="TokuseiManager_8h" name="TokuseiManager.h" local="yes" imported="no">TokuseiManager.h</includes>
    <includes id="Zone_8h" name="Zone.h" local="yes" imported="no">Zone.h</includes>
    <namespace>channel</namespace>
    <namespace>libcomp</namespace>
    <member kind="variable">
      <type>const std::set&lt; CorrectTbl &gt;</type>
      <name>BASE_STATS</name>
      <anchorfile>ActiveEntityState_8cpp.html</anchorfile>
      <anchor>ac6145c3a22f4db3d5e0a9cf90eef8889</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const std::set&lt; CorrectTbl &gt;</type>
      <name>VISIBLE_STATS</name>
      <anchorfile>ActiveEntityState_8cpp.html</anchorfile>
      <anchor>afc129608a7f2cd5d04c1ffb9994778ab</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>ActiveEntityState.h</name>
    <path>C:/projects/comp-hack/server/channel/src/</path>
    <filename>ActiveEntityState_8h</filename>
    <class kind="class">channel::ActiveEntityState</class>
    <class kind="class">channel::ActiveEntityStateImp</class>
    <namespace>channel</namespace>
    <namespace>libcomp</namespace>
    <member kind="typedef">
      <type>std::unordered_map&lt; uint32_t, std::pair&lt; uint8_t, bool &gt; &gt;</type>
      <name>AddStatusEffectMap</name>
      <anchorfile>ActiveEntityState_8h.html</anchorfile>
      <anchor>a8c121a6e760a339634841ced705f0616</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>objects::MiCorrectTbl::ID_t</type>
      <name>CorrectTbl</name>
      <anchorfile>ActiveEntityState_8h.html</anchorfile>
      <anchor>ae5e46bc20c247425b6c26aa4d9636868</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const uint8_t</type>
      <name>EFFECT_CANCEL_DAMAGE</name>
      <anchorfile>ActiveEntityState_8h.html</anchorfile>
      <anchor>a1bb5c0c0ade2c08463672c0b2d10f6b0</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const uint8_t</type>
      <name>EFFECT_CANCEL_DEATH</name>
      <anchorfile>ActiveEntityState_8h.html</anchorfile>
      <anchor>a4a7cf288ce31d5da66fe4c0e8bf64254</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const uint8_t</type>
      <name>EFFECT_CANCEL_HIT</name>
      <anchorfile>ActiveEntityState_8h.html</anchorfile>
      <anchor>a9a17bcddac46a78462fe1147d7e641eb</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const uint8_t</type>
      <name>EFFECT_CANCEL_KNOCKBACK</name>
      <anchorfile>ActiveEntityState_8h.html</anchorfile>
      <anchor>a2b892eb2e4b94733a609cc2a5304bfbc</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const uint8_t</type>
      <name>EFFECT_CANCEL_LOGOUT</name>
      <anchorfile>ActiveEntityState_8h.html</anchorfile>
      <anchor>a7e87949df3090889646e6d48936dfb49</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const uint8_t</type>
      <name>EFFECT_CANCEL_SKILL</name>
      <anchorfile>ActiveEntityState_8h.html</anchorfile>
      <anchor>a131cc9f4a3b696935201293c043ae3eb</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const uint8_t</type>
      <name>EFFECT_CANCEL_ZONEOUT</name>
      <anchorfile>ActiveEntityState_8h.html</anchorfile>
      <anchor>ace280ee30d918a88a3bca9a77da643fc</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const uint8_t</type>
      <name>ENTITY_CALC_MOVE_SPEED</name>
      <anchorfile>ActiveEntityState_8h.html</anchorfile>
      <anchor>a78e6ca97c0b1704894da400f32590465</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const uint8_t</type>
      <name>ENTITY_CALC_SKILL</name>
      <anchorfile>ActiveEntityState_8h.html</anchorfile>
      <anchor>aa40ba62b3a2552eccd2182226a33e9ce</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const uint8_t</type>
      <name>ENTITY_CALC_STAT_LOCAL</name>
      <anchorfile>ActiveEntityState_8h.html</anchorfile>
      <anchor>a9e8f75b057ad2655c669eef5c6c6da1b</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const uint8_t</type>
      <name>ENTITY_CALC_STAT_WORLD</name>
      <anchorfile>ActiveEntityState_8h.html</anchorfile>
      <anchor>aa4f41c3b5c4cfeada75897f02e084dd9</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const uint8_t</type>
      <name>STATUS_CHARGING</name>
      <anchorfile>ActiveEntityState_8h.html</anchorfile>
      <anchor>ab3f87a6c9c37f221e176dbdda21afcb6</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const uint8_t</type>
      <name>STATUS_HIT_STUN</name>
      <anchorfile>ActiveEntityState_8h.html</anchorfile>
      <anchor>a532de644e701f70f49fc23b4e5b3da6c</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const uint8_t</type>
      <name>STATUS_IMMOBILE</name>
      <anchorfile>ActiveEntityState_8h.html</anchorfile>
      <anchor>a434f92324724130b58f3de1d85f001b4</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const uint8_t</type>
      <name>STATUS_KNOCKBACK</name>
      <anchorfile>ActiveEntityState_8h.html</anchorfile>
      <anchor>ae2e5657f94c1486a34bc9ec39e2b45f9</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const uint8_t</type>
      <name>STATUS_RESTING</name>
      <anchorfile>ActiveEntityState_8h.html</anchorfile>
      <anchor>a411f472122829e12d52b929cbaf47aa3</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const uint8_t</type>
      <name>STATUS_WAITING</name>
      <anchorfile>ActiveEntityState_8h.html</anchorfile>
      <anchor>acbbdd172fcdb08aebd30e9bdc65531c9</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>AICommand.cpp</name>
    <path>C:/projects/comp-hack/server/channel/src/</path>
    <filename>AICommand_8cpp</filename>
    <includes id="AICommand_8h" name="AICommand.h" local="yes" imported="no">AICommand.h</includes>
  </compound>
  <compound kind="file">
    <name>AICommand.h</name>
    <path>C:/projects/comp-hack/server/channel/src/</path>
    <filename>AICommand_8h</filename>
    <class kind="class">channel::AICommand</class>
    <class kind="class">channel::AIMoveCommand</class>
    <class kind="class">channel::AIScriptedCommand</class>
    <class kind="class">channel::AIUseSkillCommand</class>
    <namespace>channel</namespace>
    <namespace>objects</namespace>
    <member kind="enumeration">
      <type></type>
      <name>AICommandType_t</name>
      <anchorfile>namespacechannel.html</anchorfile>
      <anchor>aaf2e50152d91fa2bd5167b1df358468f</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>NONE</name>
      <anchorfile>namespacechannel.html</anchorfile>
      <anchor>aaf2e50152d91fa2bd5167b1df358468fa3cbbfe48a743c27c3a903bbaa680b2a2</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>MOVE</name>
      <anchorfile>namespacechannel.html</anchorfile>
      <anchor>aaf2e50152d91fa2bd5167b1df358468fa0daed1c5edc9cd69fcfc61996b752e1f</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>USE_SKILL</name>
      <anchorfile>namespacechannel.html</anchorfile>
      <anchor>aaf2e50152d91fa2bd5167b1df358468fa86d23c33f6945848066094d158b39a41</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SCRIPTED</name>
      <anchorfile>namespacechannel.html</anchorfile>
      <anchor>aaf2e50152d91fa2bd5167b1df358468fad632772b6e465e1d09aa4adeae03773d</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>AIManager.cpp</name>
    <path>C:/projects/comp-hack/server/channel/src/</path>
    <filename>AIManager_8cpp</filename>
    <includes id="AIManager_8h" name="AIManager.h" local="yes" imported="no">AIManager.h</includes>
    <includes id="AICommand_8h" name="AICommand.h" local="yes" imported="no">AICommand.h</includes>
    <includes id="ChannelServer_8h" name="ChannelServer.h" local="yes" imported="no">ChannelServer.h</includes>
    <includes id="CharacterManager_8h" name="CharacterManager.h" local="yes" imported="no">CharacterManager.h</includes>
    <includes id="SkillManager_8h" name="SkillManager.h" local="yes" imported="no">SkillManager.h</includes>
    <includes id="ZoneManager_8h" name="ZoneManager.h" local="yes" imported="no">ZoneManager.h</includes>
    <namespace>libcomp</namespace>
  </compound>
  <compound kind="file">
    <name>AIManager.h</name>
    <path>C:/projects/comp-hack/server/channel/src/</path>
    <filename>AIManager_8h</filename>
    <includes id="ActiveEntityState_8h" name="ActiveEntityState.h" local="yes" imported="no">ActiveEntityState.h</includes>
    <includes id="AIState_8h" name="AIState.h" local="yes" imported="no">AIState.h</includes>
    <includes id="ClientState_8h" name="ClientState.h" local="yes" imported="no">ClientState.h</includes>
    <class kind="class">channel::AIManager</class>
    <namespace>channel</namespace>
    <namespace>libcomp</namespace>
  </compound>
  <compound kind="file">
    <name>AIState.cpp</name>
    <path>C:/projects/comp-hack/server/channel/src/</path>
    <filename>AIState_8cpp</filename>
    <includes id="AIState_8h" name="AIState.h" local="yes" imported="no">AIState.h</includes>
    <namespace>libcomp</namespace>
  </compound>
  <compound kind="file">
    <name>AIState.h</name>
    <path>C:/projects/comp-hack/server/channel/src/</path>
    <filename>AIState_8h</filename>
    <includes id="AICommand_8h" name="AICommand.h" local="yes" imported="no">AICommand.h</includes>
    <class kind="class">channel::AIState</class>
    <namespace>channel</namespace>
    <namespace>objects</namespace>
    <member kind="enumeration">
      <type></type>
      <name>AIStatus_t</name>
      <anchorfile>namespacechannel.html</anchorfile>
      <anchor>a4a9fbe80b5390309b933949e4db1da48</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>IDLE</name>
      <anchorfile>namespacechannel.html</anchorfile>
      <anchor>a4a9fbe80b5390309b933949e4db1da48a44d90ba02e1b0b1214d3e834149db70e</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>WANDERING</name>
      <anchorfile>namespacechannel.html</anchorfile>
      <anchor>a4a9fbe80b5390309b933949e4db1da48aee1e8c3c6c353d111d46e0fd98152994</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>AGGRO</name>
      <anchorfile>namespacechannel.html</anchorfile>
      <anchor>a4a9fbe80b5390309b933949e4db1da48aa45df7b2a577d15d8622433de2361e03</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>COMBAT</name>
      <anchorfile>namespacechannel.html</anchorfile>
      <anchor>a4a9fbe80b5390309b933949e4db1da48a0b012e49498d31e33191354e1020e034</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const uint16_t</type>
      <name>AI_SKILL_TYPE_CLSR</name>
      <anchorfile>namespacechannel.html</anchorfile>
      <anchor>a005fd53a19ebdfe9647c6ccb62c9dcf5</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const uint16_t</type>
      <name>AI_SKILL_TYPE_DEF</name>
      <anchorfile>namespacechannel.html</anchorfile>
      <anchor>a9fe2a79932e028999c53e3721c21d9e5</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const uint16_t</type>
      <name>AI_SKILL_TYPE_HEAL</name>
      <anchorfile>namespacechannel.html</anchorfile>
      <anchor>aee6a4d7340f3831b51324b4c71d46f2d</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const uint16_t</type>
      <name>AI_SKILL_TYPE_LNGR</name>
      <anchorfile>namespacechannel.html</anchorfile>
      <anchor>abebe3753457294da24c83239351a90e9</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const uint16_t</type>
      <name>AI_SKILL_TYPE_SUPPORT</name>
      <anchorfile>namespacechannel.html</anchorfile>
      <anchor>a31b0f61262412a3c18b17a9033033d23</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const uint16_t</type>
      <name>AI_SKILL_TYPES_ALL</name>
      <anchorfile>namespacechannel.html</anchorfile>
      <anchor>a7f9a8919790b4152a424ad64cefc2c8d</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const uint16_t</type>
      <name>AI_SKILL_TYPES_ALLY</name>
      <anchorfile>namespacechannel.html</anchorfile>
      <anchor>aeb94b90bc217b70b7aafe63080c8da98</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const uint16_t</type>
      <name>AI_SKILL_TYPES_ENEMY</name>
      <anchorfile>namespacechannel.html</anchorfile>
      <anchor>ab142235686532c75b9b5c0a6c343a2cc</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>AllocateSkillPoint.cpp</name>
    <path>C:/projects/comp-hack/server/channel/src/packets/game/</path>
    <filename>AllocateSkillPoint_8cpp</filename>
    <includes id="ChannelServer_8h" name="ChannelServer.h" local="yes" imported="no">ChannelServer.h</includes>
    <includes id="CharacterManager_8h" name="CharacterManager.h" local="yes" imported="no">CharacterManager.h</includes>
    <includes id="TokuseiManager_8h" name="TokuseiManager.h" local="yes" imported="no">TokuseiManager.h</includes>
    <member kind="function">
      <type>void</type>
      <name>AllocatePoint</name>
      <anchorfile>AllocateSkillPoint_8cpp.html</anchorfile>
      <anchor>ad4cf99e5a577ea8531af91cc5e546b9c</anchor>
      <arglist>(const std::shared_ptr&lt; ChannelServer &gt; server, const std::shared_ptr&lt; ChannelClientConnection &gt; client, int8_t correctStatOffset)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>Analyze.cpp</name>
    <path>C:/projects/comp-hack/server/channel/src/packets/game/</path>
    <filename>Analyze_8cpp</filename>
    <includes id="ChannelServer_8h" name="ChannelServer.h" local="yes" imported="no">ChannelServer.h</includes>
    <includes id="CharacterManager_8h" name="CharacterManager.h" local="yes" imported="no">CharacterManager.h</includes>
  </compound>
  <compound kind="file">
    <name>AppearanceAlter.cpp</name>
    <path>C:/projects/comp-hack/server/channel/src/packets/game/</path>
    <filename>AppearanceAlter_8cpp</filename>
    <includes id="ChannelServer_8h" name="ChannelServer.h" local="yes" imported="no">ChannelServer.h</includes>
    <includes id="CharacterManager_8h" name="CharacterManager.h" local="yes" imported="no">CharacterManager.h</includes>
    <includes id="ZoneManager_8h" name="ZoneManager.h" local="yes" imported="no">ZoneManager.h</includes>
  </compound>
  <compound kind="file">
    <name>Auth.cpp</name>
    <path>C:/projects/comp-hack/server/channel/src/packets/game/</path>
    <filename>Auth_8cpp</filename>
    <includes id="AccountManager_8h" name="AccountManager.h" local="yes" imported="no">AccountManager.h</includes>
    <includes id="ChannelServer_8h" name="ChannelServer.h" local="yes" imported="no">ChannelServer.h</includes>
    <member kind="function">
      <type>void</type>
      <name>AuthenticateAccount</name>
      <anchorfile>Auth_8cpp.html</anchorfile>
      <anchor>acbbba865acc13c52a61960316106fdbe</anchor>
      <arglist>(AccountManager *accountManager, const std::shared_ptr&lt; ChannelClientConnection &gt; client)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>Barter.cpp</name>
    <path>C:/projects/comp-hack/server/channel/src/packets/game/</path>
    <filename>Barter_8cpp</filename>
    <includes id="ChannelServer_8h" name="ChannelServer.h" local="yes" imported="no">ChannelServer.h</includes>
    <includes id="CharacterManager_8h" name="CharacterManager.h" local="yes" imported="no">CharacterManager.h</includes>
    <includes id="EventManager_8h" name="EventManager.h" local="yes" imported="no">EventManager.h</includes>
    <member kind="function">
      <type>void</type>
      <name>HandleBarter</name>
      <anchorfile>Barter_8cpp.html</anchorfile>
      <anchor>ae0c15ea6e49c0a8f7d206c69dc56bd73</anchor>
      <arglist>(const std::shared_ptr&lt; ChannelServer &gt; server, const std::shared_ptr&lt; ChannelClientConnection &gt; client, uint16_t barterID)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>BazaarClerkSet.cpp</name>
    <path>C:/projects/comp-hack/server/channel/src/packets/game/</path>
    <filename>BazaarClerkSet_8cpp</filename>
    <includes id="ChannelServer_8h" name="ChannelServer.h" local="yes" imported="no">ChannelServer.h</includes>
    <includes id="ZoneManager_8h" name="ZoneManager.h" local="yes" imported="no">ZoneManager.h</includes>
  </compound>
  <compound kind="file">
    <name>BazaarInteract.cpp</name>
    <path>C:/projects/comp-hack/server/channel/src/packets/game/</path>
    <filename>BazaarInteract_8cpp</filename>
    <includes id="ChannelServer_8h" name="ChannelServer.h" local="yes" imported="no">ChannelServer.h</includes>
    <includes id="EventManager_8h" name="EventManager.h" local="yes" imported="no">EventManager.h</includes>
  </compound>
  <compound kind="file">
    <name>BazaarItemAdd.cpp</name>
    <path>C:/projects/comp-hack/server/channel/src/packets/game/</path>
    <filename>BazaarItemAdd_8cpp</filename>
    <includes id="ChannelServer_8h" name="ChannelServer.h" local="yes" imported="no">ChannelServer.h</includes>
    <includes id="CharacterManager_8h" name="CharacterManager.h" local="yes" imported="no">CharacterManager.h</includes>
  </compound>
  <compound kind="file">
    <name>BazaarItemBuy.cpp</name>
    <path>C:/projects/comp-hack/server/channel/src/packets/game/</path>
    <filename>BazaarItemBuy_8cpp</filename>
    <includes id="ChannelServer_8h" name="ChannelServer.h" local="yes" imported="no">ChannelServer.h</includes>
    <includes id="CharacterManager_8h" name="CharacterManager.h" local="yes" imported="no">CharacterManager.h</includes>
    <includes id="ManagerConnection_8h" name="ManagerConnection.h" local="yes" imported="no">ManagerConnection.h</includes>
  </compound>
  <compound kind="file">
    <name>BazaarItemDrop.cpp</name>
    <path>C:/projects/comp-hack/server/channel/src/packets/game/</path>
    <filename>BazaarItemDrop_8cpp</filename>
    <includes id="ChannelServer_8h" name="ChannelServer.h" local="yes" imported="no">ChannelServer.h</includes>
    <includes id="CharacterManager_8h" name="CharacterManager.h" local="yes" imported="no">CharacterManager.h</includes>
  </compound>
  <compound kind="file">
    <name>BazaarItemUpdate.cpp</name>
    <path>C:/projects/comp-hack/server/channel/src/packets/game/</path>
    <filename>BazaarItemUpdate_8cpp</filename>
    <includes id="ChannelServer_8h" name="ChannelServer.h" local="yes" imported="no">ChannelServer.h</includes>
  </compound>
  <compound kind="file">
    <name>BazaarMarketClose.cpp</name>
    <path>C:/projects/comp-hack/server/channel/src/packets/game/</path>
    <filename>BazaarMarketClose_8cpp</filename>
    <includes id="BazaarState_8h" name="BazaarState.h" local="yes" imported="no">BazaarState.h</includes>
    <includes id="ChannelServer_8h" name="ChannelServer.h" local="yes" imported="no">ChannelServer.h</includes>
    <includes id="ZoneManager_8h" name="ZoneManager.h" local="yes" imported="no">ZoneManager.h</includes>
  </compound>
  <compound kind="file">
    <name>BazaarMarketComment.cpp</name>
    <path>C:/projects/comp-hack/server/channel/src/packets/game/</path>
    <filename>BazaarMarketComment_8cpp</filename>
    <includes id="ChannelServer_8h" name="ChannelServer.h" local="yes" imported="no">ChannelServer.h</includes>
    <includes id="ZoneManager_8h" name="ZoneManager.h" local="yes" imported="no">ZoneManager.h</includes>
  </compound>
  <compound kind="file">
    <name>BazaarMarketEnd.cpp</name>
    <path>C:/projects/comp-hack/server/channel/src/packets/game/</path>
    <filename>BazaarMarketEnd_8cpp</filename>
    <includes id="ChannelServer_8h" name="ChannelServer.h" local="yes" imported="no">ChannelServer.h</includes>
    <includes id="EventManager_8h" name="EventManager.h" local="yes" imported="no">EventManager.h</includes>
    <includes id="ZoneManager_8h" name="ZoneManager.h" local="yes" imported="no">ZoneManager.h</includes>
  </compound>
  <compound kind="file">
    <name>BazaarMarketInfo.cpp</name>
    <path>C:/projects/comp-hack/server/channel/src/packets/game/</path>
    <filename>BazaarMarketInfo_8cpp</filename>
    <includes id="BazaarState_8h" name="BazaarState.h" local="yes" imported="no">BazaarState.h</includes>
    <includes id="ChannelServer_8h" name="ChannelServer.h" local="yes" imported="no">ChannelServer.h</includes>
    <includes id="CharacterManager_8h" name="CharacterManager.h" local="yes" imported="no">CharacterManager.h</includes>
  </compound>
  <compound kind="file">
    <name>BazaarMarketInfoSelf.cpp</name>
    <path>C:/projects/comp-hack/server/channel/src/packets/game/</path>
    <filename>BazaarMarketInfoSelf_8cpp</filename>
    <includes id="BazaarState_8h" name="BazaarState.h" local="yes" imported="no">BazaarState.h</includes>
    <includes id="ChannelServer_8h" name="ChannelServer.h" local="yes" imported="no">ChannelServer.h</includes>
    <includes id="CharacterManager_8h" name="CharacterManager.h" local="yes" imported="no">CharacterManager.h</includes>
  </compound>
  <compound kind="file">
    <name>BazaarMarketOpen.cpp</name>
    <path>C:/projects/comp-hack/server/channel/src/packets/game/</path>
    <filename>BazaarMarketOpen_8cpp</filename>
    <includes id="ChannelServer_8h" name="ChannelServer.h" local="yes" imported="no">ChannelServer.h</includes>
    <includes id="CharacterManager_8h" name="CharacterManager.h" local="yes" imported="no">CharacterManager.h</includes>
    <includes id="Zone_8h" name="Zone.h" local="yes" imported="no">Zone.h</includes>
    <includes id="ZoneManager_8h" name="ZoneManager.h" local="yes" imported="no">ZoneManager.h</includes>
  </compound>
  <compound kind="file">
    <name>BazaarMarketSales.cpp</name>
    <path>C:/projects/comp-hack/server/channel/src/packets/game/</path>
    <filename>BazaarMarketSales_8cpp</filename>
    <includes id="ChannelServer_8h" name="ChannelServer.h" local="yes" imported="no">ChannelServer.h</includes>
    <includes id="CharacterManager_8h" name="CharacterManager.h" local="yes" imported="no">CharacterManager.h</includes>
  </compound>
  <compound kind="file">
    <name>BazaarPrice.cpp</name>
    <path>C:/projects/comp-hack/server/channel/src/packets/game/</path>
    <filename>BazaarPrice_8cpp</filename>
    <includes id="ChannelServer_8h" name="ChannelServer.h" local="yes" imported="no">ChannelServer.h</includes>
  </compound>
  <compound kind="file">
    <name>BazaarState.cpp</name>
    <path>C:/projects/comp-hack/server/channel/src/</path>
    <filename>BazaarState_8cpp</filename>
    <includes id="BazaarState_8h" name="BazaarState.h" local="yes" imported="no">BazaarState.h</includes>
    <includes id="ClientState_8h" name="ClientState.h" local="yes" imported="no">ClientState.h</includes>
    <includes id="Zone_8h" name="Zone.h" local="yes" imported="no">Zone.h</includes>
  </compound>
  <compound kind="file">
    <name>packets/game/BazaarState.cpp</name>
    <path>C:/projects/comp-hack/server/channel/src/packets/game/</path>
    <filename>packets_2game_2BazaarState_8cpp</filename>
    <includes id="ChannelServer_8h" name="ChannelServer.h" local="yes" imported="no">ChannelServer.h</includes>
    <includes id="Zone_8h" name="Zone.h" local="yes" imported="no">Zone.h</includes>
  </compound>
  <compound kind="file">
    <name>BazaarState.h</name>
    <path>C:/projects/comp-hack/server/channel/src/</path>
    <filename>BazaarState_8h</filename>
    <includes id="EntityState_8h" name="EntityState.h" local="no" imported="no">EntityState.h</includes>
    <class kind="class">channel::BazaarState</class>
    <namespace>channel</namespace>
    <namespace>libcomp</namespace>
  </compound>
  <compound kind="file">
    <name>Blacklist.cpp</name>
    <path>C:/projects/comp-hack/server/channel/src/packets/game/</path>
    <filename>Blacklist_8cpp</filename>
    <includes id="ChannelClientConnection_8h" name="ChannelClientConnection.h" local="yes" imported="no">ChannelClientConnection.h</includes>
  </compound>
  <compound kind="file">
    <name>CashBalance.cpp</name>
    <path>C:/projects/comp-hack/server/channel/src/packets/game/</path>
    <filename>CashBalance_8cpp</filename>
    <includes id="AccountManager_8h" name="AccountManager.h" local="yes" imported="no">AccountManager.h</includes>
    <includes id="ChannelServer_8h" name="ChannelServer.h" local="yes" imported="no">ChannelServer.h</includes>
  </compound>
  <compound kind="file">
    <name>CasinoCoinTotal.cpp</name>
    <path>C:/projects/comp-hack/server/channel/src/packets/game/</path>
    <filename>CasinoCoinTotal_8cpp</filename>
    <includes id="ChannelClientConnection_8h" name="ChannelClientConnection.h" local="yes" imported="no">ChannelClientConnection.h</includes>
  </compound>
  <compound kind="file">
    <name>ChannelClientConnection.cpp</name>
    <path>C:/projects/comp-hack/server/channel/src/</path>
    <filename>ChannelClientConnection_8cpp</filename>
    <includes id="ChannelClientConnection_8h" name="ChannelClientConnection.h" local="yes" imported="no">ChannelClientConnection.h</includes>
    <includes id="ChannelServer_8h" name="ChannelServer.h" local="yes" imported="no">ChannelServer.h</includes>
  </compound>
  <compound kind="file">
    <name>ChannelClientConnection.h</name>
    <path>C:/projects/comp-hack/server/channel/src/</path>
    <filename>ChannelClientConnection_8h</filename>
    <includes id="ClientState_8h" name="ClientState.h" local="yes" imported="no">ClientState.h</includes>
    <class kind="class">channel::ChannelClientConnection</class>
    <namespace>channel</namespace>
    <member kind="typedef">
      <type>std::unordered_map&lt; uint32_t, uint64_t &gt;</type>
      <name>RelativeTimeMap</name>
      <anchorfile>namespacechannel.html</anchorfile>
      <anchor>a14eef5d98e622aebad487c9f0a2c25ee</anchor>
      <arglist></arglist>
    </member>
    <member kind="function" static="yes">
      <type>static ClientState *</type>
      <name>state</name>
      <anchorfile>namespacechannel.html</anchorfile>
      <anchor>a42a66bec35cf06d954702b2d0e1ecca3</anchor>
      <arglist>(const std::shared_ptr&lt; libcomp::TcpConnection &gt; &amp;connection)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>ChannelList.cpp</name>
    <path>C:/projects/comp-hack/server/channel/src/packets/game/</path>
    <filename>ChannelList_8cpp</filename>
    <includes id="ChannelClientConnection_8h" name="ChannelClientConnection.h" local="yes" imported="no">ChannelClientConnection.h</includes>
    <includes id="ChannelServer_8h" name="ChannelServer.h" local="yes" imported="no">ChannelServer.h</includes>
  </compound>
  <compound kind="file">
    <name>ChannelServer.cpp</name>
    <path>C:/projects/comp-hack/server/channel/src/</path>
    <filename>ChannelServer_8cpp</filename>
    <includes id="ChannelServer_8h" name="ChannelServer.h" local="yes" imported="no">ChannelServer.h</includes>
    <includes id="ManagerSystem_8h" name="ManagerSystem.h" local="no" imported="no">ManagerSystem.h</includes>
    <includes id="AccountManager_8h" name="AccountManager.h" local="yes" imported="no">AccountManager.h</includes>
    <includes id="ActionManager_8h" name="ActionManager.h" local="yes" imported="no">ActionManager.h</includes>
    <includes id="AIManager_8h" name="AIManager.h" local="yes" imported="no">AIManager.h</includes>
    <includes id="ChannelClientConnection_8h" name="ChannelClientConnection.h" local="yes" imported="no">ChannelClientConnection.h</includes>
    <includes id="ChannelSyncManager_8h" name="ChannelSyncManager.h" local="yes" imported="no">ChannelSyncManager.h</includes>
    <includes id="CharacterManager_8h" name="CharacterManager.h" local="yes" imported="no">CharacterManager.h</includes>
    <includes id="ChatManager_8h" name="ChatManager.h" local="yes" imported="no">ChatManager.h</includes>
    <includes id="EventManager_8h" name="EventManager.h" local="yes" imported="no">EventManager.h</includes>
    <includes id="FusionManager_8h" name="FusionManager.h" local="yes" imported="no">FusionManager.h</includes>
    <includes id="ManagerClientPacket_8h" name="ManagerClientPacket.h" local="yes" imported="no">ManagerClientPacket.h</includes>
    <includes id="ManagerConnection_8h" name="ManagerConnection.h" local="yes" imported="no">ManagerConnection.h</includes>
    <includes id="Packets_8h" name="Packets.h" local="yes" imported="no">Packets.h</includes>
    <includes id="SkillManager_8h" name="SkillManager.h" local="yes" imported="no">SkillManager.h</includes>
    <includes id="TokuseiManager_8h" name="TokuseiManager.h" local="yes" imported="no">TokuseiManager.h</includes>
    <includes id="ZoneManager_8h" name="ZoneManager.h" local="yes" imported="no">ZoneManager.h</includes>
  </compound>
  <compound kind="file">
    <name>ChannelServer.h</name>
    <path>C:/projects/comp-hack/server/channel/src/</path>
    <filename>ChannelServer_8h</filename>
    <includes id="ManagerConnection_8h" name="ManagerConnection.h" local="no" imported="no">ManagerConnection.h</includes>
    <includes id="WorldClock_8h" name="WorldClock.h" local="yes" imported="no">WorldClock.h</includes>
    <class kind="class">channel::ChannelServer</class>
    <namespace>channel</namespace>
    <namespace>libcomp</namespace>
    <namespace>objects</namespace>
    <member kind="typedef">
      <type>ServerTime(*</type>
      <name>GET_SERVER_TIME</name>
      <anchorfile>namespacechannel.html</anchorfile>
      <anchor>ab27a841c8bc25a162bac4115e2089307</anchor>
      <arglist>)()</arglist>
    </member>
    <member kind="typedef">
      <type>uint64_t</type>
      <name>ServerTime</name>
      <anchorfile>namespacechannel.html</anchorfile>
      <anchor>a3645d2f2639d292478c3287540fc9052</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>ChannelSyncManager.cpp</name>
    <path>C:/projects/comp-hack/server/channel/src/</path>
    <filename>ChannelSyncManager_8cpp</filename>
    <includes id="ChannelSyncManager_8h" name="ChannelSyncManager.h" local="yes" imported="no">ChannelSyncManager.h</includes>
    <includes id="ChannelServer_8h" name="ChannelServer.h" local="yes" imported="no">ChannelServer.h</includes>
    <includes id="ManagerConnection_8h" name="ManagerConnection.h" local="yes" imported="no">ManagerConnection.h</includes>
    <namespace>channel</namespace>
    <member kind="function">
      <type>int8_t</type>
      <name>ChannelSyncManager::Update&lt; objects::SearchEntry &gt;</name>
      <anchorfile>namespacechannel.html</anchorfile>
      <anchor>a8c43c37ab7136499fbb877011f2ee5db</anchor>
      <arglist>(const libcomp::String &amp;type, const std::shared_ptr&lt; libcomp::Object &gt; &amp;obj, bool isRemove, const libcomp::String &amp;source)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>ChannelSyncManager.h</name>
    <path>C:/projects/comp-hack/server/channel/src/</path>
    <filename>ChannelSyncManager_8h</filename>
    <class kind="class">channel::ChannelSyncManager</class>
    <namespace>channel</namespace>
  </compound>
  <compound kind="file">
    <name>CharacterLogin.cpp</name>
    <path>C:/projects/comp-hack/server/channel/src/packets/internal/</path>
    <filename>CharacterLogin_8cpp</filename>
    <includes id="ChannelServer_8h" name="ChannelServer.h" local="yes" imported="no">ChannelServer.h</includes>
    <includes id="ManagerConnection_8h" name="ManagerConnection.h" local="yes" imported="no">ManagerConnection.h</includes>
  </compound>
  <compound kind="file">
    <name>CharacterManager.cpp</name>
    <path>C:/projects/comp-hack/server/channel/src/</path>
    <filename>CharacterManager_8cpp</filename>
    <includes id="CharacterManager_8h" name="CharacterManager.h" local="yes" imported="no">CharacterManager.h</includes>
    <includes id="AIState_8h" name="AIState.h" local="yes" imported="no">AIState.h</includes>
    <includes id="ChannelServer_8h" name="ChannelServer.h" local="yes" imported="no">ChannelServer.h</includes>
    <includes id="FusionManager_8h" name="FusionManager.h" local="yes" imported="no">FusionManager.h</includes>
    <includes id="ManagerConnection_8h" name="ManagerConnection.h" local="yes" imported="no">ManagerConnection.h</includes>
    <includes id="TokuseiManager_8h" name="TokuseiManager.h" local="yes" imported="no">TokuseiManager.h</includes>
    <includes id="ZoneManager_8h" name="ZoneManager.h" local="yes" imported="no">ZoneManager.h</includes>
  </compound>
  <compound kind="file">
    <name>CharacterManager.h</name>
    <path>C:/projects/comp-hack/server/channel/src/</path>
    <filename>CharacterManager_8h</filename>
    <includes id="ChannelClientConnection_8h" name="ChannelClientConnection.h" local="yes" imported="no">ChannelClientConnection.h</includes>
    <includes id="Zone_8h" name="Zone.h" local="yes" imported="no">Zone.h</includes>
    <class kind="class">channel::CharacterManager</class>
    <namespace>channel</namespace>
    <namespace>libcomp</namespace>
    <namespace>objects</namespace>
    <member kind="typedef">
      <type>objects::MiCorrectTbl::ID_t</type>
      <name>CorrectTbl</name>
      <anchorfile>CharacterManager_8h.html</anchorfile>
      <anchor>ae5e46bc20c247425b6c26aa4d9636868</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>CharacterState.cpp</name>
    <path>C:/projects/comp-hack/server/channel/src/</path>
    <filename>CharacterState_8cpp</filename>
    <includes id="CharacterState_8h" name="CharacterState.h" local="yes" imported="no">CharacterState.h</includes>
    <namespace>libcomp</namespace>
  </compound>
  <compound kind="file">
    <name>CharacterState.h</name>
    <path>C:/projects/comp-hack/server/channel/src/</path>
    <filename>CharacterState_8h</filename>
    <includes id="ActiveEntityState_8h" name="ActiveEntityState.h" local="no" imported="no">ActiveEntityState.h</includes>
    <class kind="class">channel::CharacterState</class>
    <namespace>channel</namespace>
    <namespace>libcomp</namespace>
    <namespace>objects</namespace>
  </compound>
  <compound kind="file">
    <name>Chat.cpp</name>
    <path>C:/projects/comp-hack/server/channel/src/packets/game/</path>
    <filename>Chat_8cpp</filename>
    <includes id="ClientState_8h" name="ClientState.h" local="no" imported="no">ClientState.h</includes>
    <includes id="ChannelClientConnection_8h" name="ChannelClientConnection.h" local="yes" imported="no">ChannelClientConnection.h</includes>
    <includes id="ChannelServer_8h" name="ChannelServer.h" local="yes" imported="no">ChannelServer.h</includes>
    <includes id="ChatManager_8h" name="ChatManager.h" local="yes" imported="no">ChatManager.h</includes>
  </compound>
  <compound kind="file">
    <name>ChatManager.cpp</name>
    <path>C:/projects/comp-hack/server/channel/src/</path>
    <filename>ChatManager_8cpp</filename>
    <includes id="ChatManager_8h" name="ChatManager.h" local="yes" imported="no">ChatManager.h</includes>
    <includes id="AccountManager_8h" name="AccountManager.h" local="yes" imported="no">AccountManager.h</includes>
    <includes id="ChannelServer_8h" name="ChannelServer.h" local="yes" imported="no">ChannelServer.h</includes>
    <includes id="CharacterManager_8h" name="CharacterManager.h" local="yes" imported="no">CharacterManager.h</includes>
    <includes id="ClientState_8h" name="ClientState.h" local="yes" imported="no">ClientState.h</includes>
    <includes id="EventManager_8h" name="EventManager.h" local="yes" imported="no">EventManager.h</includes>
    <includes id="ManagerConnection_8h" name="ManagerConnection.h" local="yes" imported="no">ManagerConnection.h</includes>
    <includes id="TokuseiManager_8h" name="TokuseiManager.h" local="yes" imported="no">TokuseiManager.h</includes>
    <includes id="ZoneManager_8h" name="ZoneManager.h" local="yes" imported="no">ZoneManager.h</includes>
  </compound>
  <compound kind="file">
    <name>ChatManager.h</name>
    <path>C:/projects/comp-hack/server/channel/src/</path>
    <filename>ChatManager_8h</filename>
    <includes id="ChannelClientConnection_8h" name="ChannelClientConnection.h" local="yes" imported="no">ChannelClientConnection.h</includes>
    <class kind="class">channel::ChatManager</class>
    <namespace>channel</namespace>
    <namespace>objects</namespace>
    <member kind="enumeration">
      <type></type>
      <name>ChatType_t</name>
      <anchorfile>namespacechannel.html</anchorfile>
      <anchor>ab585df32ef6d9dac69fb84f8918dcca7</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>CHAT_PARTY</name>
      <anchorfile>namespacechannel.html</anchorfile>
      <anchor>ab585df32ef6d9dac69fb84f8918dcca7aabc483a46f7e8c2c6465d55bb1c47ab1</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>CHAT_SHOUT</name>
      <anchorfile>namespacechannel.html</anchorfile>
      <anchor>ab585df32ef6d9dac69fb84f8918dcca7a4f0d1b4f1e893948234a38d4c4f07c15</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>CHAT_SAY</name>
      <anchorfile>namespacechannel.html</anchorfile>
      <anchor>ab585df32ef6d9dac69fb84f8918dcca7af2066ae1b9873fba3e8cfc46b5523dec</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>CHAT_TELL</name>
      <anchorfile>namespacechannel.html</anchorfile>
      <anchor>ab585df32ef6d9dac69fb84f8918dcca7a7d4675d40aba1c3e22cea4d5151eb266</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>CHAT_SELF</name>
      <anchorfile>namespacechannel.html</anchorfile>
      <anchor>ab585df32ef6d9dac69fb84f8918dcca7a8c3084a385c113f0400e3a018d556ef3</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>CHAT_CLAN</name>
      <anchorfile>namespacechannel.html</anchorfile>
      <anchor>ab585df32ef6d9dac69fb84f8918dcca7a1aa29a8b9681a75558585fea165de4f2</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>CHAT_TEAM</name>
      <anchorfile>namespacechannel.html</anchorfile>
      <anchor>ab585df32ef6d9dac69fb84f8918dcca7abf54b99490933a41fdb1ed10efaa44de</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>ChatVis_t</name>
      <anchorfile>namespacechannel.html</anchorfile>
      <anchor>a9de073bb847525edca0e9977a12da07c</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>CHAT_VIS_SELF</name>
      <anchorfile>namespacechannel.html</anchorfile>
      <anchor>a9de073bb847525edca0e9977a12da07caf75a0a2e246d071f72e7c8c23c7c4534</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>CHAT_VIS_PARTY</name>
      <anchorfile>namespacechannel.html</anchorfile>
      <anchor>a9de073bb847525edca0e9977a12da07cae84bb27897e6bbbc4678e4fe178b361c</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>CHAT_VIS_ZONE</name>
      <anchorfile>namespacechannel.html</anchorfile>
      <anchor>a9de073bb847525edca0e9977a12da07ca311137d932ffb116ae40e05015daf1c6</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>CHAT_VIS_RANGE</name>
      <anchorfile>namespacechannel.html</anchorfile>
      <anchor>a9de073bb847525edca0e9977a12da07cacf7fc04483bb3eee8459b28699d439a9</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>CHAT_VIS_CLAN</name>
      <anchorfile>namespacechannel.html</anchorfile>
      <anchor>a9de073bb847525edca0e9977a12da07ca8355e6beb612304df2d1e194146b3619</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>CHAT_VIS_TEAM</name>
      <anchorfile>namespacechannel.html</anchorfile>
      <anchor>a9de073bb847525edca0e9977a12da07ca8a78a82766d988523d12552f86886851</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>ClanCancel.cpp</name>
    <path>C:/projects/comp-hack/server/channel/src/packets/game/</path>
    <filename>ClanCancel_8cpp</filename>
    <includes id="ChannelClientConnection_8h" name="ChannelClientConnection.h" local="yes" imported="no">ChannelClientConnection.h</includes>
    <includes id="ChannelServer_8h" name="ChannelServer.h" local="yes" imported="no">ChannelServer.h</includes>
  </compound>
  <compound kind="file">
    <name>ClanChat.cpp</name>
    <path>C:/projects/comp-hack/server/channel/src/packets/game/</path>
    <filename>ClanChat_8cpp</filename>
    <includes id="ChannelServer_8h" name="ChannelServer.h" local="yes" imported="no">ChannelServer.h</includes>
    <includes id="ChatManager_8h" name="ChatManager.h" local="yes" imported="no">ChatManager.h</includes>
  </compound>
  <compound kind="file">
    <name>ClanData.cpp</name>
    <path>C:/projects/comp-hack/server/channel/src/packets/game/</path>
    <filename>ClanData_8cpp</filename>
    <includes id="ChannelServer_8h" name="ChannelServer.h" local="yes" imported="no">ChannelServer.h</includes>
    <includes id="ManagerConnection_8h" name="ManagerConnection.h" local="yes" imported="no">ManagerConnection.h</includes>
  </compound>
  <compound kind="file">
    <name>ClanDisband.cpp</name>
    <path>C:/projects/comp-hack/server/channel/src/packets/game/</path>
    <filename>ClanDisband_8cpp</filename>
    <includes id="ChannelClientConnection_8h" name="ChannelClientConnection.h" local="yes" imported="no">ChannelClientConnection.h</includes>
    <includes id="ChannelServer_8h" name="ChannelServer.h" local="yes" imported="no">ChannelServer.h</includes>
    <includes id="ManagerConnection_8h" name="ManagerConnection.h" local="yes" imported="no">ManagerConnection.h</includes>
  </compound>
  <compound kind="file">
    <name>ClanEmblemUpdate.cpp</name>
    <path>C:/projects/comp-hack/server/channel/src/packets/game/</path>
    <filename>ClanEmblemUpdate_8cpp</filename>
    <includes id="ChannelServer_8h" name="ChannelServer.h" local="yes" imported="no">ChannelServer.h</includes>
    <includes id="ManagerConnection_8h" name="ManagerConnection.h" local="yes" imported="no">ManagerConnection.h</includes>
  </compound>
  <compound kind="file">
    <name>ClanForm.cpp</name>
    <path>C:/projects/comp-hack/server/channel/src/packets/game/</path>
    <filename>ClanForm_8cpp</filename>
    <includes id="ChannelServer_8h" name="ChannelServer.h" local="yes" imported="no">ChannelServer.h</includes>
    <includes id="ManagerConnection_8h" name="ManagerConnection.h" local="yes" imported="no">ManagerConnection.h</includes>
    <includes id="SkillManager_8h" name="SkillManager.h" local="yes" imported="no">SkillManager.h</includes>
  </compound>
  <compound kind="file">
    <name>ClanInfo.cpp</name>
    <path>C:/projects/comp-hack/server/channel/src/packets/game/</path>
    <filename>ClanInfo_8cpp</filename>
    <includes id="ChannelClientConnection_8h" name="ChannelClientConnection.h" local="yes" imported="no">ChannelClientConnection.h</includes>
    <includes id="ChannelServer_8h" name="ChannelServer.h" local="yes" imported="no">ChannelServer.h</includes>
    <includes id="ManagerConnection_8h" name="ManagerConnection.h" local="yes" imported="no">ManagerConnection.h</includes>
  </compound>
  <compound kind="file">
    <name>ClanInvite.cpp</name>
    <path>C:/projects/comp-hack/server/channel/src/packets/game/</path>
    <filename>ClanInvite_8cpp</filename>
    <includes id="ChannelClientConnection_8h" name="ChannelClientConnection.h" local="yes" imported="no">ChannelClientConnection.h</includes>
    <includes id="ChannelServer_8h" name="ChannelServer.h" local="yes" imported="no">ChannelServer.h</includes>
    <includes id="ManagerConnection_8h" name="ManagerConnection.h" local="yes" imported="no">ManagerConnection.h</includes>
  </compound>
  <compound kind="file">
    <name>ClanJoin.cpp</name>
    <path>C:/projects/comp-hack/server/channel/src/packets/game/</path>
    <filename>ClanJoin_8cpp</filename>
    <includes id="ChannelClientConnection_8h" name="ChannelClientConnection.h" local="yes" imported="no">ChannelClientConnection.h</includes>
    <includes id="ChannelServer_8h" name="ChannelServer.h" local="yes" imported="no">ChannelServer.h</includes>
    <includes id="ManagerConnection_8h" name="ManagerConnection.h" local="yes" imported="no">ManagerConnection.h</includes>
  </compound>
  <compound kind="file">
    <name>ClanKick.cpp</name>
    <path>C:/projects/comp-hack/server/channel/src/packets/game/</path>
    <filename>ClanKick_8cpp</filename>
    <includes id="ChannelClientConnection_8h" name="ChannelClientConnection.h" local="yes" imported="no">ChannelClientConnection.h</includes>
    <includes id="ChannelServer_8h" name="ChannelServer.h" local="yes" imported="no">ChannelServer.h</includes>
    <includes id="ManagerConnection_8h" name="ManagerConnection.h" local="yes" imported="no">ManagerConnection.h</includes>
  </compound>
  <compound kind="file">
    <name>ClanLeave.cpp</name>
    <path>C:/projects/comp-hack/server/channel/src/packets/game/</path>
    <filename>ClanLeave_8cpp</filename>
    <includes id="ChannelClientConnection_8h" name="ChannelClientConnection.h" local="yes" imported="no">ChannelClientConnection.h</includes>
    <includes id="ChannelServer_8h" name="ChannelServer.h" local="yes" imported="no">ChannelServer.h</includes>
    <includes id="ManagerConnection_8h" name="ManagerConnection.h" local="yes" imported="no">ManagerConnection.h</includes>
  </compound>
  <compound kind="file">
    <name>ClanList.cpp</name>
    <path>C:/projects/comp-hack/server/channel/src/packets/game/</path>
    <filename>ClanList_8cpp</filename>
    <includes id="ChannelServer_8h" name="ChannelServer.h" local="yes" imported="no">ChannelServer.h</includes>
    <includes id="ManagerConnection_8h" name="ManagerConnection.h" local="yes" imported="no">ManagerConnection.h</includes>
  </compound>
  <compound kind="file">
    <name>ClanMasterUpdate.cpp</name>
    <path>C:/projects/comp-hack/server/channel/src/packets/game/</path>
    <filename>ClanMasterUpdate_8cpp</filename>
    <includes id="ChannelServer_8h" name="ChannelServer.h" local="yes" imported="no">ChannelServer.h</includes>
    <includes id="ManagerConnection_8h" name="ManagerConnection.h" local="yes" imported="no">ManagerConnection.h</includes>
  </compound>
  <compound kind="file">
    <name>ClanSubMasterUpdate.cpp</name>
    <path>C:/projects/comp-hack/server/channel/src/packets/game/</path>
    <filename>ClanSubMasterUpdate_8cpp</filename>
    <includes id="ChannelServer_8h" name="ChannelServer.h" local="yes" imported="no">ChannelServer.h</includes>
    <includes id="ManagerConnection_8h" name="ManagerConnection.h" local="yes" imported="no">ManagerConnection.h</includes>
  </compound>
  <compound kind="file">
    <name>ClanUpdate.cpp</name>
    <path>C:/projects/comp-hack/server/channel/src/packets/internal/</path>
    <filename>ClanUpdate_8cpp</filename>
    <includes id="ChannelServer_8h" name="ChannelServer.h" local="yes" imported="no">ChannelServer.h</includes>
    <includes id="CharacterManager_8h" name="CharacterManager.h" local="yes" imported="no">CharacterManager.h</includes>
    <includes id="ManagerConnection_8h" name="ManagerConnection.h" local="yes" imported="no">ManagerConnection.h</includes>
    <includes id="SkillManager_8h" name="SkillManager.h" local="yes" imported="no">SkillManager.h</includes>
    <includes id="TokuseiManager_8h" name="TokuseiManager.h" local="yes" imported="no">TokuseiManager.h</includes>
    <includes id="ZoneManager_8h" name="ZoneManager.h" local="yes" imported="no">ZoneManager.h</includes>
  </compound>
  <compound kind="file">
    <name>ClientState.cpp</name>
    <path>C:/projects/comp-hack/server/channel/src/</path>
    <filename>ClientState_8cpp</filename>
    <includes id="ClientState_8h" name="ClientState.h" local="yes" imported="no">ClientState.h</includes>
    <includes id="ChannelServer_8h" name="ChannelServer.h" local="yes" imported="no">ChannelServer.h</includes>
    <includes id="Zone_8h" name="Zone.h" local="yes" imported="no">Zone.h</includes>
  </compound>
  <compound kind="file">
    <name>ClientState.h</name>
    <path>C:/projects/comp-hack/server/channel/src/</path>
    <filename>ClientState_8h</filename>
    <includes id="ActiveEntityState_8h" name="ActiveEntityState.h" local="yes" imported="no">ActiveEntityState.h</includes>
    <includes id="CharacterState_8h" name="CharacterState.h" local="yes" imported="no">CharacterState.h</includes>
    <includes id="DemonState_8h" name="DemonState.h" local="yes" imported="no">DemonState.h</includes>
    <class kind="class">channel::ClientState</class>
    <namespace>channel</namespace>
    <namespace>libcomp</namespace>
    <namespace>objects</namespace>
    <member kind="typedef">
      <type>float</type>
      <name>ClientTime</name>
      <anchorfile>namespacechannel.html</anchorfile>
      <anchor>a48830c9521c432b7478cc266bd57b172</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>CMakeLists.txt</name>
    <path>C:/projects/comp-hack/server/channel/</path>
    <filename>CMakeLists_8txt</filename>
    <member kind="function">
      <type></type>
      <name>ADD_CUSTOM_TARGET</name>
      <anchorfile>CMakeLists_8txt.html</anchorfile>
      <anchor>a4d26af06bb65f6c57b9bab37326b2dee</anchor>
      <arglist>(git-version ${CMAKE_COMMAND}-D&quot;SRC=${CMAKE_CURRENT_SOURCE_DIR}/src/Git.h.in&quot;-D&quot;DST=${CMAKE_CURRENT_BINARY_DIR}/Git.h&quot;-P ${CMAKE_SOURCE_DIR}/cmake/git-version.cmake) SET($</arglist>
    </member>
    <member kind="function">
      <type>_PACKETS src packets game Unsupported cpp src packets game Login cpp src packets game Auth cpp src packets game SendData cpp src packets game Logout cpp src packets game PopulateZone cpp src packets game Move cpp src packets game Pivot cpp src packets game Chat cpp src packets game Tell cpp src packets game SkillActivate cpp src packets game SkillExecute cpp src packets game SkillCancel cpp src packets game ExpertiseDown cpp src packets game AllocateSkillPoint cpp src packets game ToggleExpertise cpp src packets game LearnSkill cpp src packets game UpdateDemonSkill cpp src packets game KeepAlive cpp src packets game FixObjectPosition cpp src packets game State cpp src packets game PartnerDemonData cpp src packets game DemonBox cpp src packets game DemonBoxData cpp src packets game ChannelList cpp src packets game ReviveCharacter cpp src packets game StopMovement cpp src packets game SpotTriggered cpp src packets game WorldTime cpp src packets game ItemBox cpp src packets game ItemMove cpp src packets game ItemDrop cpp src packets game ItemStack cpp src packets game EquipmentList cpp src packets game TradeRequest cpp src packets game TradeAccept cpp src packets game TradeAddItem cpp src packets game TradeLock cpp src packets game TradeFinish cpp src packets game TradeCancel cpp src packets game LootItem cpp src packets game CashBalance cpp src packets game ShopData cpp src packets game ShopBuy cpp src packets game ShopSell cpp src packets game DemonBoxMove cpp src packets game DismissDemon cpp src packets game PostList cpp src packets game PostItem cpp src packets game HotbarData cpp src packets game HotbarSave cpp src packets game EventResponse cpp src packets game ValuableList cpp src packets game ObjectInteraction cpp src packets game FriendInfo cpp src packets game FriendRequest cpp src packets game FriendAddRemove cpp src packets game FriendData cpp src packets game PartyInvite cpp src packets game PartyJoin cpp src packets game PartyCancel cpp src packets game PartyLeave cpp src packets game PartyDisband cpp src packets game PartyLeaderUpdate cpp src packets game PartyDropRule cpp src packets game PartyKick cpp src packets game DemonFusion cpp src packets game LootDemonEggData cpp src packets game Sync cpp src packets game ShopRepair cpp src packets game Rotate cpp src packets game LootBossBox cpp src packets game UnionFlag cpp src packets game ItemDepoList cpp src packets game DepoRent cpp src packets game LootTreasureBox cpp src packets game QuestActiveList cpp src packets game QuestCompletedList cpp src packets game BazaarMarketOpen cpp src packets game BazaarMarketClose cpp src packets game BazaarMarketInfo cpp src packets game BazaarItemAdd cpp src packets game BazaarItemDrop cpp src packets game BazaarItemUpdate cpp src packets game BazaarItemBuy cpp src packets game BazaarMarketSales cpp src packets game SearchEntrySelf cpp src packets game SearchList cpp src packets game SearchEntryData cpp src packets game SearchEntryRegister cpp src packets game SearchEntryUpdate cpp src packets game SearchEntryRemove cpp src packets game SearchAppReply cpp src packets game ClanDisband cpp src packets game ClanInvite cpp src packets game ClanJoin cpp src packets game ClanCancel cpp src packets game ClanKick cpp src packets game ClanMasterUpdate cpp src packets game ClanSubMasterUpdate cpp src packets game ClanLeave cpp src packets game ClanChat cpp src packets game ClanInfo cpp src packets game ClanList cpp src packets game ClanData cpp src packets game ClanForm cpp src packets game ItemPrice cpp src packets game BazaarState cpp src packets game BazaarClerkSet cpp src packets game BazaarPrice cpp src packets game BazaarMarketInfoSelf cpp src packets game Warp cpp src packets game SkillExecuteInstant cpp src packets game SyncCharacter cpp src packets game BazaarInteract cpp src packets game SkillForget cpp src packets game BazaarMarketEnd cpp src packets game BazaarMarketComment cpp src packets game PartnerDemonAISet cpp src packets game MapFlag cpp src packets game DemonCompendium cpp src packets game ItemRepairMax cpp src packets game AppearanceAlter cpp src packets game EntrustRequest cpp src packets game EntrustAccept cpp src packets game EntrustRewardUpdate cpp src packets game EntrustRewardFinish cpp src packets game EntrustRewardAccept cpp src packets game EntrustFinish cpp src packets game DemonCrystallizeItem cpp src packets game DemonCrystallize cpp src packets game EnchantItem cpp src packets game Enchant cpp src packets game DungeonRecords cpp src packets game TriFusionJoin cpp src packets game TriFusionDemonUpdate cpp src packets game TriFusionRewardUpdate cpp src packets game TriFusionRewardAccept cpp src packets game TriFusionAccept cpp src packets game TriFusionLeave cpp src packets game ClanEmblemUpdate cpp src packets game DemonFamiliarity cpp src packets game PlasmaStart cpp src packets game PlasmaResult cpp src packets game PlasmaEnd cpp src packets game PlasmaItemData cpp src packets game PlasmaItem cpp src packets game ItemDisassemble cpp src packets game EquipmentMod cpp src packets game MaterialBox cpp src packets game Analyze cpp src packets game MaterialExtract cpp src packets game MaterialInsert cpp src packets game ItemExchange cpp src packets game CompShopOpen cpp src packets game CompShopList cpp src packets game FusionGauge cpp src packets game TitleList cpp src packets game PartnerDemonQuestList cpp src packets game LockDemon cpp src packets game PvPCharacterInfo cpp src packets game TeamInfo cpp src packets game PartnerDemonQuestTemp cpp src packets game ItemDepoRemote cpp src packets game DemonDepoRemote cpp src packets game CommonSwitchInfo cpp src packets game CasinoCoinTotal cpp src packets game TriFusionSolo cpp src packets game SearchEntryInfo cpp src packets game HouraiData cpp src packets game CultureData cpp src packets game EquipmentModEdit cpp src packets game PAttributeDeadline cpp src packets game DemonDepoList cpp src packets game Barter cpp src packets game Blacklist cpp src packets game DigitalizePoints cpp src packets game DigitalizeAssist cpp src packets game VABox cpp src packets game VABoxAdd cpp src packets game VABoxRemove cpp src packets game VAChange cpp src packets game VABoxMove cpp src packets internal SetWorldInfo cpp src packets internal SetOtherChannelInfo cpp src packets internal AccountLogin cpp src packets internal AccountLogout cpp src packets internal Relay cpp src packets internal DataSync cpp src packets internal CharacterLogin cpp src packets internal FriendsUpdate cpp src packets internal PartyUpdate cpp src packets internal ClanUpdate cpp</type>
      <name>COVERALLS_SOURCES</name>
      <anchorfile>CMakeLists_8txt.html</anchorfile>
      <anchor>ab96ef612f015528247c48d55d727c244</anchor>
      <arglist>(${${PROJECT_NAME}_SRCS}${${PROJECT_NAME}_PACKETS}) ADD_EXECUTABLE($</arglist>
    </member>
    <member kind="function">
      <type>_SCHEMA schema channelconfig xml schema clientstate xml schema entitystate xml schema loot xml</type>
      <name>OBJGEN_XML</name>
      <anchorfile>CMakeLists_8txt.html</anchorfile>
      <anchor>ac5b247237c6bf66bcca03258f145e149</anchor>
      <arglist>(${PROJECT_NAME}_STRUCTS schema/master.xml ${${PROJECT_NAME}_SCHEMA}schema../../libcomp/schema EntityStateObject.h EntityStateObject.cpp ActivatedAbility.h ActivatedAbility.cpp CalculatedEntityState.h CalculatedEntityState.cpp ActiveEntityStateObject.h ActiveEntityStateObject.cpp ChannelConfig.h ChannelConfig.cpp ClientCostAdjustment.h ClientCostAdjustment.cpp ClientStateObject.h ClientStateObject.cpp EventInstance.h EventInstance.cpp EventState.h EventState.cpp Loot.h Loot.cpp LootBox.h LootBox.cpp PlayerExchangeSession.h PlayerExchangeSession.cpp TriFusionHostSession.h TriFusionHostSession.cpp) SET($</arglist>
    </member>
    <member kind="function">
      <type>_SRCS src AccountManager cpp src ActionManager cpp src ActiveEntityState cpp src AICommand cpp src AIManager cpp src AIState cpp src BazaarState cpp src ChannelClientConnection cpp src ChannelServer cpp src ChannelSyncManager cpp src CharacterManager cpp src ChatManager cpp src CharacterState cpp src ClientState cpp src DemonState cpp src EnemyState cpp src EntityState cpp src EventManager cpp src FusionManager cpp src FusionTables cpp src ManagerClientPacket cpp src ManagerConnection cpp src ManagerSystem cpp src PlasmaState cpp src SkillManager cpp src TokuseiManager cpp src WorldClock cpp src Zone cpp src ZoneInstance cpp src ZoneGeometry cpp src ZoneManager cpp src main cpp</type>
      <name>SET</name>
      <anchorfile>CMakeLists_8txt.html</anchorfile>
      <anchor>ae34d1b4c8620e9d20449785b146e5c13</anchor>
      <arglist>(${PROJECT_NAME}_HDRS src/AccountManager.h src/ActionManager.h src/ActiveEntityState.h src/AICommand.h src/AIManager.h src/AIState.h src/BazaarState.h src/ChannelClientConnection.h src/ChannelServer.h src/ChannelSyncManager.h src/CharacterManager.h src/ChatManager.h src/CharacterState.h src/ClientState.h src/DemonState.h src/EnemyState.h src/EntityState.h src/EventManager.h src/FusionManager.h src/FusionTables.h src/ManagerClientPacket.h src/ManagerConnection.h src/ManagerSystem.h src/Packets.h src/PlasmaState.h src/SkillManager.h src/TokuseiManager.h src/WorldClock.h src/Zone.h src/ZoneInstance.h src/ZoneGeometry.h src/ZoneManager.h) SET($</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>CommonSwitchInfo.cpp</name>
    <path>C:/projects/comp-hack/server/channel/src/packets/game/</path>
    <filename>CommonSwitchInfo_8cpp</filename>
    <includes id="ChannelClientConnection_8h" name="ChannelClientConnection.h" local="yes" imported="no">ChannelClientConnection.h</includes>
  </compound>
  <compound kind="file">
    <name>CompShopList.cpp</name>
    <path>C:/projects/comp-hack/server/channel/src/packets/game/</path>
    <filename>CompShopList_8cpp</filename>
    <includes id="ChannelServer_8h" name="ChannelServer.h" local="yes" imported="no">ChannelServer.h</includes>
  </compound>
  <compound kind="file">
    <name>CompShopOpen.cpp</name>
    <path>C:/projects/comp-hack/server/channel/src/packets/game/</path>
    <filename>CompShopOpen_8cpp</filename>
    <includes id="AccountManager_8h" name="AccountManager.h" local="yes" imported="no">AccountManager.h</includes>
    <includes id="ChannelServer_8h" name="ChannelServer.h" local="yes" imported="no">ChannelServer.h</includes>
    <includes id="ChannelClientConnection_8h" name="ChannelClientConnection.h" local="yes" imported="no">ChannelClientConnection.h</includes>
    <includes id="EventManager_8h" name="EventManager.h" local="yes" imported="no">EventManager.h</includes>
  </compound>
  <compound kind="file">
    <name>CultureData.cpp</name>
    <path>C:/projects/comp-hack/server/channel/src/packets/game/</path>
    <filename>CultureData_8cpp</filename>
    <includes id="ChannelClientConnection_8h" name="ChannelClientConnection.h" local="yes" imported="no">ChannelClientConnection.h</includes>
  </compound>
  <compound kind="file">
    <name>DataSync.cpp</name>
    <path>C:/projects/comp-hack/server/channel/src/packets/internal/</path>
    <filename>DataSync_8cpp</filename>
    <includes id="ChannelServer_8h" name="ChannelServer.h" local="yes" imported="no">ChannelServer.h</includes>
    <includes id="ChannelSyncManager_8h" name="ChannelSyncManager.h" local="yes" imported="no">ChannelSyncManager.h</includes>
  </compound>
  <compound kind="file">
    <name>DemonBox.cpp</name>
    <path>C:/projects/comp-hack/server/channel/src/packets/game/</path>
    <filename>DemonBox_8cpp</filename>
    <includes id="ChannelServer_8h" name="ChannelServer.h" local="yes" imported="no">ChannelServer.h</includes>
    <includes id="ChannelClientConnection_8h" name="ChannelClientConnection.h" local="yes" imported="no">ChannelClientConnection.h</includes>
    <includes id="CharacterManager_8h" name="CharacterManager.h" local="yes" imported="no">CharacterManager.h</includes>
  </compound>
  <compound kind="file">
    <name>DemonBoxData.cpp</name>
    <path>C:/projects/comp-hack/server/channel/src/packets/game/</path>
    <filename>DemonBoxData_8cpp</filename>
    <includes id="ChannelServer_8h" name="ChannelServer.h" local="yes" imported="no">ChannelServer.h</includes>
    <includes id="ChannelClientConnection_8h" name="ChannelClientConnection.h" local="yes" imported="no">ChannelClientConnection.h</includes>
    <includes id="CharacterManager_8h" name="CharacterManager.h" local="yes" imported="no">CharacterManager.h</includes>
  </compound>
  <compound kind="file">
    <name>DemonBoxMove.cpp</name>
    <path>C:/projects/comp-hack/server/channel/src/packets/game/</path>
    <filename>DemonBoxMove_8cpp</filename>
    <includes id="ChannelServer_8h" name="ChannelServer.h" local="yes" imported="no">ChannelServer.h</includes>
    <includes id="CharacterManager_8h" name="CharacterManager.h" local="yes" imported="no">CharacterManager.h</includes>
  </compound>
  <compound kind="file">
    <name>DemonCompendium.cpp</name>
    <path>C:/projects/comp-hack/server/channel/src/packets/game/</path>
    <filename>DemonCompendium_8cpp</filename>
    <includes id="ChannelServer_8h" name="ChannelServer.h" local="yes" imported="no">ChannelServer.h</includes>
    <includes id="CharacterManager_8h" name="CharacterManager.h" local="yes" imported="no">CharacterManager.h</includes>
  </compound>
  <compound kind="file">
    <name>DemonCrystallize.cpp</name>
    <path>C:/projects/comp-hack/server/channel/src/packets/game/</path>
    <filename>DemonCrystallize_8cpp</filename>
    <includes id="ChannelServer_8h" name="ChannelServer.h" local="yes" imported="no">ChannelServer.h</includes>
    <includes id="CharacterManager_8h" name="CharacterManager.h" local="yes" imported="no">CharacterManager.h</includes>
    <includes id="ManagerConnection_8h" name="ManagerConnection.h" local="yes" imported="no">ManagerConnection.h</includes>
  </compound>
  <compound kind="file">
    <name>DemonCrystallizeItem.cpp</name>
    <path>C:/projects/comp-hack/server/channel/src/packets/game/</path>
    <filename>DemonCrystallizeItem_8cpp</filename>
    <includes id="ChannelServer_8h" name="ChannelServer.h" local="yes" imported="no">ChannelServer.h</includes>
    <includes id="CharacterManager_8h" name="CharacterManager.h" local="yes" imported="no">CharacterManager.h</includes>
    <includes id="ManagerConnection_8h" name="ManagerConnection.h" local="yes" imported="no">ManagerConnection.h</includes>
  </compound>
  <compound kind="file">
    <name>DemonDepoList.cpp</name>
    <path>C:/projects/comp-hack/server/channel/src/packets/game/</path>
    <filename>DemonDepoList_8cpp</filename>
    <includes id="ChannelServer_8h" name="ChannelServer.h" local="yes" imported="no">ChannelServer.h</includes>
  </compound>
  <compound kind="file">
    <name>DemonDepoRemote.cpp</name>
    <path>C:/projects/comp-hack/server/channel/src/packets/game/</path>
    <filename>DemonDepoRemote_8cpp</filename>
    <includes id="ChannelServer_8h" name="ChannelServer.h" local="yes" imported="no">ChannelServer.h</includes>
    <includes id="ChannelClientConnection_8h" name="ChannelClientConnection.h" local="yes" imported="no">ChannelClientConnection.h</includes>
    <includes id="EventManager_8h" name="EventManager.h" local="yes" imported="no">EventManager.h</includes>
  </compound>
  <compound kind="file">
    <name>DemonFamiliarity.cpp</name>
    <path>C:/projects/comp-hack/server/channel/src/packets/game/</path>
    <filename>DemonFamiliarity_8cpp</filename>
    <includes id="ChannelServer_8h" name="ChannelServer.h" local="yes" imported="no">ChannelServer.h</includes>
  </compound>
  <compound kind="file">
    <name>DemonFusion.cpp</name>
    <path>C:/projects/comp-hack/server/channel/src/packets/game/</path>
    <filename>DemonFusion_8cpp</filename>
    <includes id="ChannelServer_8h" name="ChannelServer.h" local="yes" imported="no">ChannelServer.h</includes>
    <includes id="FusionManager_8h" name="FusionManager.h" local="yes" imported="no">FusionManager.h</includes>
  </compound>
  <compound kind="file">
    <name>DemonState.cpp</name>
    <path>C:/projects/comp-hack/server/channel/src/</path>
    <filename>DemonState_8cpp</filename>
    <includes id="DemonState_8h" name="DemonState.h" local="yes" imported="no">DemonState.h</includes>
    <namespace>libcomp</namespace>
  </compound>
  <compound kind="file">
    <name>DemonState.h</name>
    <path>C:/projects/comp-hack/server/channel/src/</path>
    <filename>DemonState_8h</filename>
    <includes id="ActiveEntityState_8h" name="ActiveEntityState.h" local="no" imported="no">ActiveEntityState.h</includes>
    <class kind="class">channel::DemonState</class>
    <namespace>channel</namespace>
    <namespace>objects</namespace>
  </compound>
  <compound kind="file">
    <name>DepoRent.cpp</name>
    <path>C:/projects/comp-hack/server/channel/src/packets/game/</path>
    <filename>DepoRent_8cpp</filename>
    <includes id="ChannelServer_8h" name="ChannelServer.h" local="yes" imported="no">ChannelServer.h</includes>
    <includes id="CharacterManager_8h" name="CharacterManager.h" local="yes" imported="no">CharacterManager.h</includes>
    <includes id="ClientState_8h" name="ClientState.h" local="yes" imported="no">ClientState.h</includes>
  </compound>
  <compound kind="file">
    <name>DigitalizeAssist.cpp</name>
    <path>C:/projects/comp-hack/server/channel/src/packets/game/</path>
    <filename>DigitalizeAssist_8cpp</filename>
    <includes id="ChannelClientConnection_8h" name="ChannelClientConnection.h" local="yes" imported="no">ChannelClientConnection.h</includes>
  </compound>
  <compound kind="file">
    <name>DigitalizePoints.cpp</name>
    <path>C:/projects/comp-hack/server/channel/src/packets/game/</path>
    <filename>DigitalizePoints_8cpp</filename>
    <includes id="ChannelClientConnection_8h" name="ChannelClientConnection.h" local="yes" imported="no">ChannelClientConnection.h</includes>
  </compound>
  <compound kind="file">
    <name>DismissDemon.cpp</name>
    <path>C:/projects/comp-hack/server/channel/src/packets/game/</path>
    <filename>DismissDemon_8cpp</filename>
    <includes id="ChannelServer_8h" name="ChannelServer.h" local="yes" imported="no">ChannelServer.h</includes>
    <includes id="CharacterManager_8h" name="CharacterManager.h" local="yes" imported="no">CharacterManager.h</includes>
    <member kind="function">
      <type>void</type>
      <name>DemonDismiss</name>
      <anchorfile>DismissDemon_8cpp.html</anchorfile>
      <anchor>a46a050384ae3d543321e19f8e16bc9f8</anchor>
      <arglist>(const std::shared_ptr&lt; ChannelServer &gt; server, const std::shared_ptr&lt; ChannelClientConnection &gt; client, int64_t demonID)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>DungeonRecords.cpp</name>
    <path>C:/projects/comp-hack/server/channel/src/packets/game/</path>
    <filename>DungeonRecords_8cpp</filename>
    <includes id="ChannelClientConnection_8h" name="ChannelClientConnection.h" local="yes" imported="no">ChannelClientConnection.h</includes>
  </compound>
  <compound kind="file">
    <name>Enchant.cpp</name>
    <path>C:/projects/comp-hack/server/channel/src/packets/game/</path>
    <filename>Enchant_8cpp</filename>
    <includes id="ChannelServer_8h" name="ChannelServer.h" local="yes" imported="no">ChannelServer.h</includes>
    <includes id="CharacterManager_8h" name="CharacterManager.h" local="yes" imported="no">CharacterManager.h</includes>
    <includes id="ManagerConnection_8h" name="ManagerConnection.h" local="yes" imported="no">ManagerConnection.h</includes>
  </compound>
  <compound kind="file">
    <name>EnchantItem.cpp</name>
    <path>C:/projects/comp-hack/server/channel/src/packets/game/</path>
    <filename>EnchantItem_8cpp</filename>
    <includes id="ChannelServer_8h" name="ChannelServer.h" local="yes" imported="no">ChannelServer.h</includes>
    <includes id="CharacterManager_8h" name="CharacterManager.h" local="yes" imported="no">CharacterManager.h</includes>
    <includes id="ManagerConnection_8h" name="ManagerConnection.h" local="yes" imported="no">ManagerConnection.h</includes>
  </compound>
  <compound kind="file">
    <name>EnemyState.cpp</name>
    <path>C:/projects/comp-hack/server/channel/src/</path>
    <filename>EnemyState_8cpp</filename>
    <includes id="EnemyState_8h" name="EnemyState.h" local="yes" imported="no">EnemyState.h</includes>
    <namespace>libcomp</namespace>
  </compound>
  <compound kind="file">
    <name>EnemyState.h</name>
    <path>C:/projects/comp-hack/server/channel/src/</path>
    <filename>EnemyState_8h</filename>
    <includes id="ActiveEntityState_8h" name="ActiveEntityState.h" local="no" imported="no">ActiveEntityState.h</includes>
    <class kind="class">channel::EnemyState</class>
    <namespace>channel</namespace>
  </compound>
  <compound kind="file">
    <name>EntityState.cpp</name>
    <path>C:/projects/comp-hack/server/channel/src/</path>
    <filename>EntityState_8cpp</filename>
    <includes id="EntityState_8h" name="EntityState.h" local="yes" imported="no">EntityState.h</includes>
    <namespace>channel</namespace>
  </compound>
  <compound kind="file">
    <name>EntityState.h</name>
    <path>C:/projects/comp-hack/server/channel/src/</path>
    <filename>EntityState_8h</filename>
    <class kind="class">channel::EntityState</class>
    <namespace>channel</namespace>
  </compound>
  <compound kind="file">
    <name>EntrustAccept.cpp</name>
    <path>C:/projects/comp-hack/server/channel/src/packets/game/</path>
    <filename>EntrustAccept_8cpp</filename>
    <includes id="ChannelServer_8h" name="ChannelServer.h" local="yes" imported="no">ChannelServer.h</includes>
    <includes id="CharacterManager_8h" name="CharacterManager.h" local="yes" imported="no">CharacterManager.h</includes>
    <includes id="ManagerConnection_8h" name="ManagerConnection.h" local="yes" imported="no">ManagerConnection.h</includes>
  </compound>
  <compound kind="file">
    <name>EntrustFinish.cpp</name>
    <path>C:/projects/comp-hack/server/channel/src/packets/game/</path>
    <filename>EntrustFinish_8cpp</filename>
    <includes id="ChannelServer_8h" name="ChannelServer.h" local="yes" imported="no">ChannelServer.h</includes>
    <includes id="CharacterManager_8h" name="CharacterManager.h" local="yes" imported="no">CharacterManager.h</includes>
    <includes id="ManagerConnection_8h" name="ManagerConnection.h" local="yes" imported="no">ManagerConnection.h</includes>
  </compound>
  <compound kind="file">
    <name>EntrustRequest.cpp</name>
    <path>C:/projects/comp-hack/server/channel/src/packets/game/</path>
    <filename>EntrustRequest_8cpp</filename>
    <includes id="ChannelServer_8h" name="ChannelServer.h" local="yes" imported="no">ChannelServer.h</includes>
    <includes id="CharacterManager_8h" name="CharacterManager.h" local="yes" imported="no">CharacterManager.h</includes>
    <includes id="ManagerConnection_8h" name="ManagerConnection.h" local="yes" imported="no">ManagerConnection.h</includes>
  </compound>
  <compound kind="file">
    <name>EntrustRewardAccept.cpp</name>
    <path>C:/projects/comp-hack/server/channel/src/packets/game/</path>
    <filename>EntrustRewardAccept_8cpp</filename>
    <includes id="ChannelServer_8h" name="ChannelServer.h" local="yes" imported="no">ChannelServer.h</includes>
    <includes id="CharacterManager_8h" name="CharacterManager.h" local="yes" imported="no">CharacterManager.h</includes>
    <includes id="ManagerConnection_8h" name="ManagerConnection.h" local="yes" imported="no">ManagerConnection.h</includes>
  </compound>
  <compound kind="file">
    <name>EntrustRewardFinish.cpp</name>
    <path>C:/projects/comp-hack/server/channel/src/packets/game/</path>
    <filename>EntrustRewardFinish_8cpp</filename>
    <includes id="ChannelServer_8h" name="ChannelServer.h" local="yes" imported="no">ChannelServer.h</includes>
    <includes id="CharacterManager_8h" name="CharacterManager.h" local="yes" imported="no">CharacterManager.h</includes>
    <includes id="ManagerConnection_8h" name="ManagerConnection.h" local="yes" imported="no">ManagerConnection.h</includes>
  </compound>
  <compound kind="file">
    <name>EntrustRewardUpdate.cpp</name>
    <path>C:/projects/comp-hack/server/channel/src/packets/game/</path>
    <filename>EntrustRewardUpdate_8cpp</filename>
    <includes id="ChannelServer_8h" name="ChannelServer.h" local="yes" imported="no">ChannelServer.h</includes>
    <includes id="CharacterManager_8h" name="CharacterManager.h" local="yes" imported="no">CharacterManager.h</includes>
    <includes id="ManagerConnection_8h" name="ManagerConnection.h" local="yes" imported="no">ManagerConnection.h</includes>
  </compound>
  <compound kind="file">
    <name>EquipmentList.cpp</name>
    <path>C:/projects/comp-hack/server/channel/src/packets/game/</path>
    <filename>EquipmentList_8cpp</filename>
    <includes id="ChannelServer_8h" name="ChannelServer.h" local="yes" imported="no">ChannelServer.h</includes>
    <includes id="ChannelClientConnection_8h" name="ChannelClientConnection.h" local="yes" imported="no">ChannelClientConnection.h</includes>
    <member kind="function">
      <type>void</type>
      <name>SendEquipmentList</name>
      <anchorfile>EquipmentList_8cpp.html</anchorfile>
      <anchor>afd6aaba003dc40f029037fb74db565b3</anchor>
      <arglist>(const std::shared_ptr&lt; ChannelClientConnection &gt; &amp;client)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>EquipmentMod.cpp</name>
    <path>C:/projects/comp-hack/server/channel/src/packets/game/</path>
    <filename>EquipmentMod_8cpp</filename>
    <includes id="ChannelServer_8h" name="ChannelServer.h" local="yes" imported="no">ChannelServer.h</includes>
    <includes id="CharacterManager_8h" name="CharacterManager.h" local="yes" imported="no">CharacterManager.h</includes>
  </compound>
  <compound kind="file">
    <name>EquipmentModEdit.cpp</name>
    <path>C:/projects/comp-hack/server/channel/src/packets/game/</path>
    <filename>EquipmentModEdit_8cpp</filename>
    <includes id="ChannelServer_8h" name="ChannelServer.h" local="yes" imported="no">ChannelServer.h</includes>
    <includes id="CharacterManager_8h" name="CharacterManager.h" local="yes" imported="no">CharacterManager.h</includes>
    <includes id="SkillManager_8h" name="SkillManager.h" local="yes" imported="no">SkillManager.h</includes>
  </compound>
  <compound kind="file">
    <name>EventManager.cpp</name>
    <path>C:/projects/comp-hack/server/channel/src/</path>
    <filename>EventManager_8cpp</filename>
    <includes id="EventManager_8h" name="EventManager.h" local="yes" imported="no">EventManager.h</includes>
    <includes id="ActionManager_8h" name="ActionManager.h" local="yes" imported="no">ActionManager.h</includes>
    <includes id="ChannelServer_8h" name="ChannelServer.h" local="yes" imported="no">ChannelServer.h</includes>
    <includes id="CharacterManager_8h" name="CharacterManager.h" local="yes" imported="no">CharacterManager.h</includes>
    <includes id="CharacterState_8h" name="CharacterState.h" local="yes" imported="no">CharacterState.h</includes>
    <includes id="ManagerConnection_8h" name="ManagerConnection.h" local="yes" imported="no">ManagerConnection.h</includes>
    <includes id="ZoneInstance_8h" name="ZoneInstance.h" local="yes" imported="no">ZoneInstance.h</includes>
    <includes id="ZoneManager_8h" name="ZoneManager.h" local="yes" imported="no">ZoneManager.h</includes>
    <class kind="struct">channel::EventContext</class>
    <member kind="variable">
      <type>const uint16_t</type>
      <name>EVENT_COMPARE_NUMERIC</name>
      <anchorfile>EventManager_8cpp.html</anchorfile>
      <anchor>a1ce4d2b03d1ee04eff1a1b68f2cd3160</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const uint16_t</type>
      <name>EVENT_COMPARE_NUMERIC2</name>
      <anchorfile>EventManager_8cpp.html</anchorfile>
      <anchor>aa7e0d05f8d981c062746e1de81667357</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>EventManager.h</name>
    <path>C:/projects/comp-hack/server/channel/src/</path>
    <filename>EventManager_8h</filename>
    <includes id="ChannelClientConnection_8h" name="ChannelClientConnection.h" local="yes" imported="no">ChannelClientConnection.h</includes>
    <class kind="class">channel::EventManager</class>
    <namespace>channel</namespace>
    <namespace>objects</namespace>
    <member kind="typedef">
      <type>objects::EventCondition::CompareMode_t</type>
      <name>EventCompareMode</name>
      <anchorfile>EventManager_8h.html</anchorfile>
      <anchor>a82224bae604284567c8ac6eae2113af5</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>EventResponse.cpp</name>
    <path>C:/projects/comp-hack/server/channel/src/packets/game/</path>
    <filename>EventResponse_8cpp</filename>
    <includes id="ChannelServer_8h" name="ChannelServer.h" local="yes" imported="no">ChannelServer.h</includes>
    <includes id="EventManager_8h" name="EventManager.h" local="yes" imported="no">EventManager.h</includes>
  </compound>
  <compound kind="file">
    <name>ExpertiseDown.cpp</name>
    <path>C:/projects/comp-hack/server/channel/src/packets/game/</path>
    <filename>ExpertiseDown_8cpp</filename>
    <includes id="ChannelServer_8h" name="ChannelServer.h" local="yes" imported="no">ChannelServer.h</includes>
    <includes id="CharacterManager_8h" name="CharacterManager.h" local="yes" imported="no">CharacterManager.h</includes>
    <includes id="SkillManager_8h" name="SkillManager.h" local="yes" imported="no">SkillManager.h</includes>
    <includes id="TokuseiManager_8h" name="TokuseiManager.h" local="yes" imported="no">TokuseiManager.h</includes>
    <includes id="ZoneManager_8h" name="ZoneManager.h" local="yes" imported="no">ZoneManager.h</includes>
  </compound>
  <compound kind="file">
    <name>FixObjectPosition.cpp</name>
    <path>C:/projects/comp-hack/server/channel/src/packets/game/</path>
    <filename>FixObjectPosition_8cpp</filename>
    <includes id="ChannelClientConnection_8h" name="ChannelClientConnection.h" local="yes" imported="no">ChannelClientConnection.h</includes>
    <includes id="ChannelServer_8h" name="ChannelServer.h" local="yes" imported="no">ChannelServer.h</includes>
    <includes id="CharacterManager_8h" name="CharacterManager.h" local="yes" imported="no">CharacterManager.h</includes>
    <includes id="TokuseiManager_8h" name="TokuseiManager.h" local="yes" imported="no">TokuseiManager.h</includes>
    <includes id="ZoneManager_8h" name="ZoneManager.h" local="yes" imported="no">ZoneManager.h</includes>
  </compound>
  <compound kind="file">
    <name>FriendAddRemove.cpp</name>
    <path>C:/projects/comp-hack/server/channel/src/packets/game/</path>
    <filename>FriendAddRemove_8cpp</filename>
    <includes id="ChannelServer_8h" name="ChannelServer.h" local="yes" imported="no">ChannelServer.h</includes>
    <includes id="ManagerConnection_8h" name="ManagerConnection.h" local="yes" imported="no">ManagerConnection.h</includes>
  </compound>
  <compound kind="file">
    <name>FriendData.cpp</name>
    <path>C:/projects/comp-hack/server/channel/src/packets/game/</path>
    <filename>FriendData_8cpp</filename>
    <includes id="ChannelServer_8h" name="ChannelServer.h" local="yes" imported="no">ChannelServer.h</includes>
    <includes id="ManagerConnection_8h" name="ManagerConnection.h" local="yes" imported="no">ManagerConnection.h</includes>
  </compound>
  <compound kind="file">
    <name>FriendInfo.cpp</name>
    <path>C:/projects/comp-hack/server/channel/src/packets/game/</path>
    <filename>FriendInfo_8cpp</filename>
    <includes id="ChannelServer_8h" name="ChannelServer.h" local="yes" imported="no">ChannelServer.h</includes>
    <includes id="ManagerConnection_8h" name="ManagerConnection.h" local="yes" imported="no">ManagerConnection.h</includes>
  </compound>
  <compound kind="file">
    <name>FriendRequest.cpp</name>
    <path>C:/projects/comp-hack/server/channel/src/packets/game/</path>
    <filename>FriendRequest_8cpp</filename>
    <includes id="ChannelServer_8h" name="ChannelServer.h" local="yes" imported="no">ChannelServer.h</includes>
    <includes id="ManagerConnection_8h" name="ManagerConnection.h" local="yes" imported="no">ManagerConnection.h</includes>
  </compound>
  <compound kind="file">
    <name>FriendsUpdate.cpp</name>
    <path>C:/projects/comp-hack/server/channel/src/packets/internal/</path>
    <filename>FriendsUpdate_8cpp</filename>
    <includes id="ChannelServer_8h" name="ChannelServer.h" local="yes" imported="no">ChannelServer.h</includes>
    <includes id="ManagerConnection_8h" name="ManagerConnection.h" local="yes" imported="no">ManagerConnection.h</includes>
    <member kind="function">
      <type>void</type>
      <name>SendFriendInfo</name>
      <anchorfile>FriendsUpdate_8cpp.html</anchorfile>
      <anchor>a7cbc88b1b80b6d570b80db0ed53dbbc4</anchor>
      <arglist>(std::shared_ptr&lt; ChannelServer &gt; server, std::shared_ptr&lt; ChannelClientConnection &gt; client, std::vector&lt; std::shared_ptr&lt; objects::CharacterLogin &gt;&gt; friendLogins, ChannelToClientPacketCode_t packetCode)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>FusionGauge.cpp</name>
    <path>C:/projects/comp-hack/server/channel/src/packets/game/</path>
    <filename>FusionGauge_8cpp</filename>
    <includes id="ChannelClientConnection_8h" name="ChannelClientConnection.h" local="yes" imported="no">ChannelClientConnection.h</includes>
  </compound>
  <compound kind="file">
    <name>FusionManager.cpp</name>
    <path>C:/projects/comp-hack/server/channel/src/</path>
    <filename>FusionManager_8cpp</filename>
    <includes id="FusionManager_8h" name="FusionManager.h" local="yes" imported="no">FusionManager.h</includes>
    <includes id="ChannelServer_8h" name="ChannelServer.h" local="yes" imported="no">ChannelServer.h</includes>
    <includes id="CharacterManager_8h" name="CharacterManager.h" local="yes" imported="no">CharacterManager.h</includes>
    <includes id="FusionTables_8h" name="FusionTables.h" local="yes" imported="no">FusionTables.h</includes>
  </compound>
  <compound kind="file">
    <name>FusionManager.h</name>
    <path>C:/projects/comp-hack/server/channel/src/</path>
    <filename>FusionManager_8h</filename>
    <includes id="ChannelClientConnection_8h" name="ChannelClientConnection.h" local="yes" imported="no">ChannelClientConnection.h</includes>
    <class kind="class">channel::FusionManager</class>
    <namespace>channel</namespace>
    <namespace>objects</namespace>
  </compound>
  <compound kind="file">
    <name>FusionTables.cpp</name>
    <path>C:/projects/comp-hack/server/channel/src/</path>
    <filename>FusionTables_8cpp</filename>
    <includes id="FusionTables_8h" name="FusionTables.h" local="yes" imported="no">FusionTables.h</includes>
    <member kind="typedef">
      <type>objects::MiDCategoryData::Race_t</type>
      <name>RaceID</name>
      <anchorfile>FusionTables_8cpp.html</anchorfile>
      <anchor>a6dc920bf2781a9b0bb578b92c83492de</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int8_t</type>
      <name>FUSION_ELEMENTAL_ADJUST</name>
      <anchorfile>FusionTables_8cpp.html</anchorfile>
      <anchor>a930ed54df4d4788b342d06717857eb0a</anchor>
      <arglist>[34][4]</arglist>
    </member>
    <member kind="variable">
      <type>uint8_t</type>
      <name>FUSION_FAMILIARITY_BONUS</name>
      <anchorfile>FusionTables_8cpp.html</anchorfile>
      <anchor>afdd9ba40ab12aa4f9d44268a212ff04e</anchor>
      <arglist>[5][5]</arglist>
    </member>
    <member kind="variable">
      <type>uint8_t</type>
      <name>FUSION_RACE_MAP</name>
      <anchorfile>FusionTables_8cpp.html</anchorfile>
      <anchor>a746f158b6a227b719eb17494631cd273</anchor>
      <arglist>[35][34]</arglist>
    </member>
    <member kind="variable">
      <type>uint8_t</type>
      <name>INHERITENCE_SKILL_MAP</name>
      <anchorfile>FusionTables_8cpp.html</anchorfile>
      <anchor>a506d6f827fce1c0804627c24544abf88</anchor>
      <arglist>[21][21]</arglist>
    </member>
    <member kind="variable">
      <type>uint8_t</type>
      <name>TRIFUSION_FAMILY_MAP</name>
      <anchorfile>FusionTables_8cpp.html</anchorfile>
      <anchor>a3d3aacd06afb82001ac053ab6de7d4a6</anchor>
      <arglist>[7][7][8]</arglist>
    </member>
    <member kind="variable">
      <type>uint8_t</type>
      <name>TRIFUSION_RACE_PRIORITY</name>
      <anchorfile>FusionTables_8cpp.html</anchorfile>
      <anchor>a9e06e2b8eb073f71e095a384ff8eb2a6</anchor>
      <arglist>[34]</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>FusionTables.h</name>
    <path>C:/projects/comp-hack/server/channel/src/</path>
    <filename>FusionTables_8h</filename>
    <member kind="variable">
      <type>int8_t</type>
      <name>FUSION_ELEMENTAL_ADJUST</name>
      <anchorfile>FusionTables_8h.html</anchorfile>
      <anchor>a930ed54df4d4788b342d06717857eb0a</anchor>
      <arglist>[34][4]</arglist>
    </member>
    <member kind="variable">
      <type>uint8_t</type>
      <name>FUSION_FAMILIARITY_BONUS</name>
      <anchorfile>FusionTables_8h.html</anchorfile>
      <anchor>afdd9ba40ab12aa4f9d44268a212ff04e</anchor>
      <arglist>[5][5]</arglist>
    </member>
    <member kind="variable">
      <type>uint8_t</type>
      <name>FUSION_RACE_MAP</name>
      <anchorfile>FusionTables_8h.html</anchorfile>
      <anchor>a746f158b6a227b719eb17494631cd273</anchor>
      <arglist>[35][34]</arglist>
    </member>
    <member kind="variable">
      <type>uint8_t</type>
      <name>INHERITENCE_SKILL_MAP</name>
      <anchorfile>FusionTables_8h.html</anchorfile>
      <anchor>a506d6f827fce1c0804627c24544abf88</anchor>
      <arglist>[21][21]</arglist>
    </member>
    <member kind="variable">
      <type>uint8_t</type>
      <name>TRIFUSION_FAMILY_MAP</name>
      <anchorfile>FusionTables_8h.html</anchorfile>
      <anchor>a3d3aacd06afb82001ac053ab6de7d4a6</anchor>
      <arglist>[7][7][8]</arglist>
    </member>
    <member kind="variable">
      <type>uint8_t</type>
      <name>TRIFUSION_RACE_PRIORITY</name>
      <anchorfile>FusionTables_8h.html</anchorfile>
      <anchor>a9e06e2b8eb073f71e095a384ff8eb2a6</anchor>
      <arglist>[34]</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>HotbarData.cpp</name>
    <path>C:/projects/comp-hack/server/channel/src/packets/game/</path>
    <filename>HotbarData_8cpp</filename>
    <includes id="ChannelServer_8h" name="ChannelServer.h" local="yes" imported="no">ChannelServer.h</includes>
    <includes id="ChannelClientConnection_8h" name="ChannelClientConnection.h" local="yes" imported="no">ChannelClientConnection.h</includes>
    <member kind="function">
      <type>void</type>
      <name>SendHotbarData</name>
      <anchorfile>HotbarData_8cpp.html</anchorfile>
      <anchor>a807b4457fdcd0fe6eb2962cee576f72c</anchor>
      <arglist>(const std::shared_ptr&lt; ChannelClientConnection &gt; client, size_t page)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>HotbarSave.cpp</name>
    <path>C:/projects/comp-hack/server/channel/src/packets/game/</path>
    <filename>HotbarSave_8cpp</filename>
    <includes id="ChannelServer_8h" name="ChannelServer.h" local="yes" imported="no">ChannelServer.h</includes>
    <includes id="ChannelClientConnection_8h" name="ChannelClientConnection.h" local="yes" imported="no">ChannelClientConnection.h</includes>
    <class kind="struct">HotbarItemRequest</class>
    <member kind="function">
      <type>void</type>
      <name>SaveHotbarItems</name>
      <anchorfile>HotbarSave_8cpp.html</anchorfile>
      <anchor>a2f8eed8e8988b9a4c93094defbfd0eb6</anchor>
      <arglist>(const std::shared_ptr&lt; ChannelServer &gt; server, const std::shared_ptr&lt; ChannelClientConnection &gt; client, size_t page, std::vector&lt; HotbarItemRequest &gt; items)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>HouraiData.cpp</name>
    <path>C:/projects/comp-hack/server/channel/src/packets/game/</path>
    <filename>HouraiData_8cpp</filename>
    <includes id="ChannelClientConnection_8h" name="ChannelClientConnection.h" local="yes" imported="no">ChannelClientConnection.h</includes>
  </compound>
  <compound kind="file">
    <name>ItemBox.cpp</name>
    <path>C:/projects/comp-hack/server/channel/src/packets/game/</path>
    <filename>ItemBox_8cpp</filename>
    <includes id="ChannelServer_8h" name="ChannelServer.h" local="yes" imported="no">ChannelServer.h</includes>
    <includes id="ChannelClientConnection_8h" name="ChannelClientConnection.h" local="yes" imported="no">ChannelClientConnection.h</includes>
    <includes id="CharacterManager_8h" name="CharacterManager.h" local="yes" imported="no">CharacterManager.h</includes>
  </compound>
  <compound kind="file">
    <name>ItemDepoList.cpp</name>
    <path>C:/projects/comp-hack/server/channel/src/packets/game/</path>
    <filename>ItemDepoList_8cpp</filename>
    <includes id="ChannelServer_8h" name="ChannelServer.h" local="yes" imported="no">ChannelServer.h</includes>
  </compound>
  <compound kind="file">
    <name>ItemDepoRemote.cpp</name>
    <path>C:/projects/comp-hack/server/channel/src/packets/game/</path>
    <filename>ItemDepoRemote_8cpp</filename>
    <includes id="ChannelServer_8h" name="ChannelServer.h" local="yes" imported="no">ChannelServer.h</includes>
    <includes id="ChannelClientConnection_8h" name="ChannelClientConnection.h" local="yes" imported="no">ChannelClientConnection.h</includes>
    <includes id="EventManager_8h" name="EventManager.h" local="yes" imported="no">EventManager.h</includes>
  </compound>
  <compound kind="file">
    <name>ItemDisassemble.cpp</name>
    <path>C:/projects/comp-hack/server/channel/src/packets/game/</path>
    <filename>ItemDisassemble_8cpp</filename>
    <includes id="ChannelServer_8h" name="ChannelServer.h" local="yes" imported="no">ChannelServer.h</includes>
    <includes id="CharacterManager_8h" name="CharacterManager.h" local="yes" imported="no">CharacterManager.h</includes>
  </compound>
  <compound kind="file">
    <name>ItemDrop.cpp</name>
    <path>C:/projects/comp-hack/server/channel/src/packets/game/</path>
    <filename>ItemDrop_8cpp</filename>
    <includes id="ChannelServer_8h" name="ChannelServer.h" local="yes" imported="no">ChannelServer.h</includes>
    <includes id="ChannelClientConnection_8h" name="ChannelClientConnection.h" local="yes" imported="no">ChannelClientConnection.h</includes>
    <includes id="CharacterManager_8h" name="CharacterManager.h" local="yes" imported="no">CharacterManager.h</includes>
    <member kind="function">
      <type>void</type>
      <name>DropItem</name>
      <anchorfile>ItemDrop_8cpp.html</anchorfile>
      <anchor>afa128412ca19b64d49dc9c41972f3342</anchor>
      <arglist>(const std::shared_ptr&lt; ChannelServer &gt; server, const std::shared_ptr&lt; ChannelClientConnection &gt; &amp;client, int64_t itemID)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>ItemExchange.cpp</name>
    <path>C:/projects/comp-hack/server/channel/src/packets/game/</path>
    <filename>ItemExchange_8cpp</filename>
    <includes id="ChannelServer_8h" name="ChannelServer.h" local="yes" imported="no">ChannelServer.h</includes>
    <includes id="CharacterManager_8h" name="CharacterManager.h" local="yes" imported="no">CharacterManager.h</includes>
  </compound>
  <compound kind="file">
    <name>ItemMove.cpp</name>
    <path>C:/projects/comp-hack/server/channel/src/packets/game/</path>
    <filename>ItemMove_8cpp</filename>
    <includes id="ChannelServer_8h" name="ChannelServer.h" local="yes" imported="no">ChannelServer.h</includes>
    <includes id="ChannelClientConnection_8h" name="ChannelClientConnection.h" local="yes" imported="no">ChannelClientConnection.h</includes>
    <includes id="CharacterManager_8h" name="CharacterManager.h" local="yes" imported="no">CharacterManager.h</includes>
  </compound>
  <compound kind="file">
    <name>ItemPrice.cpp</name>
    <path>C:/projects/comp-hack/server/channel/src/packets/game/</path>
    <filename>ItemPrice_8cpp</filename>
    <includes id="ChannelServer_8h" name="ChannelServer.h" local="yes" imported="no">ChannelServer.h</includes>
  </compound>
  <compound kind="file">
    <name>ItemRepairMax.cpp</name>
    <path>C:/projects/comp-hack/server/channel/src/packets/game/</path>
    <filename>ItemRepairMax_8cpp</filename>
    <includes id="ChannelServer_8h" name="ChannelServer.h" local="yes" imported="no">ChannelServer.h</includes>
    <includes id="CharacterManager_8h" name="CharacterManager.h" local="yes" imported="no">CharacterManager.h</includes>
    <includes id="SkillManager_8h" name="SkillManager.h" local="yes" imported="no">SkillManager.h</includes>
  </compound>
  <compound kind="file">
    <name>ItemStack.cpp</name>
    <path>C:/projects/comp-hack/server/channel/src/packets/game/</path>
    <filename>ItemStack_8cpp</filename>
    <includes id="ChannelServer_8h" name="ChannelServer.h" local="yes" imported="no">ChannelServer.h</includes>
    <includes id="ChannelClientConnection_8h" name="ChannelClientConnection.h" local="yes" imported="no">ChannelClientConnection.h</includes>
    <includes id="CharacterManager_8h" name="CharacterManager.h" local="yes" imported="no">CharacterManager.h</includes>
    <member kind="function">
      <type>void</type>
      <name>CombineStacks</name>
      <anchorfile>ItemStack_8cpp.html</anchorfile>
      <anchor>ab9a69c3688e43cbd7ffb1e86aec6c839</anchor>
      <arglist>(const std::shared_ptr&lt; ChannelServer &gt; server, const std::shared_ptr&lt; ChannelClientConnection &gt; client, const std::list&lt; std::pair&lt; uint32_t, uint16_t &gt;&gt; sourceItems, uint32_t targetSlot)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SplitStack</name>
      <anchorfile>ItemStack_8cpp.html</anchorfile>
      <anchor>a788f25244e7ff6ebbdcbd2b6419b7920</anchor>
      <arglist>(const std::shared_ptr&lt; ChannelServer &gt; server, const std::shared_ptr&lt; ChannelClientConnection &gt; client, std::pair&lt; uint32_t, uint16_t &gt; sourceItem, uint32_t targetSlot)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>KeepAlive.cpp</name>
    <path>C:/projects/comp-hack/server/channel/src/packets/game/</path>
    <filename>KeepAlive_8cpp</filename>
    <includes id="ChannelServer_8h" name="ChannelServer.h" local="yes" imported="no">ChannelServer.h</includes>
  </compound>
  <compound kind="file">
    <name>LearnSkill.cpp</name>
    <path>C:/projects/comp-hack/server/channel/src/packets/game/</path>
    <filename>LearnSkill_8cpp</filename>
    <includes id="ChannelServer_8h" name="ChannelServer.h" local="yes" imported="no">ChannelServer.h</includes>
    <includes id="CharacterManager_8h" name="CharacterManager.h" local="yes" imported="no">CharacterManager.h</includes>
  </compound>
  <compound kind="file">
    <name>LockDemon.cpp</name>
    <path>C:/projects/comp-hack/server/channel/src/packets/game/</path>
    <filename>LockDemon_8cpp</filename>
    <includes id="ChannelServer_8h" name="ChannelServer.h" local="yes" imported="no">ChannelServer.h</includes>
    <member kind="function">
      <type>void</type>
      <name>SetDemonLock</name>
      <anchorfile>LockDemon_8cpp.html</anchorfile>
      <anchor>ada59e8a7cacec9e4a5aa4809a1991b02</anchor>
      <arglist>(const std::shared_ptr&lt; ChannelClientConnection &gt; client, int64_t demonID, bool lock)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>Login.cpp</name>
    <path>C:/projects/comp-hack/server/channel/src/packets/game/</path>
    <filename>Login_8cpp</filename>
    <includes id="AccountManager_8h" name="AccountManager.h" local="yes" imported="no">AccountManager.h</includes>
    <includes id="ChannelClientConnection_8h" name="ChannelClientConnection.h" local="yes" imported="no">ChannelClientConnection.h</includes>
    <includes id="ChannelServer_8h" name="ChannelServer.h" local="yes" imported="no">ChannelServer.h</includes>
    <member kind="function">
      <type>void</type>
      <name>LoginAccount</name>
      <anchorfile>Login_8cpp.html</anchorfile>
      <anchor>a8879a5322a24e0fc9edcf18e22e295e0</anchor>
      <arglist>(AccountManager *accountManager, std::shared_ptr&lt; ChannelClientConnection &gt; client, const libcomp::String username, uint32_t sessionKey)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>Logout.cpp</name>
    <path>C:/projects/comp-hack/server/channel/src/packets/game/</path>
    <filename>Logout_8cpp</filename>
    <includes id="AccountManager_8h" name="AccountManager.h" local="yes" imported="no">AccountManager.h</includes>
    <includes id="ChannelClientConnection_8h" name="ChannelClientConnection.h" local="yes" imported="no">ChannelClientConnection.h</includes>
    <includes id="ChannelServer_8h" name="ChannelServer.h" local="yes" imported="no">ChannelServer.h</includes>
  </compound>
  <compound kind="file">
    <name>LootBossBox.cpp</name>
    <path>C:/projects/comp-hack/server/channel/src/packets/game/</path>
    <filename>LootBossBox_8cpp</filename>
    <includes id="ChannelServer_8h" name="ChannelServer.h" local="yes" imported="no">ChannelServer.h</includes>
    <includes id="CharacterManager_8h" name="CharacterManager.h" local="yes" imported="no">CharacterManager.h</includes>
    <includes id="ZoneManager_8h" name="ZoneManager.h" local="yes" imported="no">ZoneManager.h</includes>
  </compound>
  <compound kind="file">
    <name>LootDemonEggData.cpp</name>
    <path>C:/projects/comp-hack/server/channel/src/packets/game/</path>
    <filename>LootDemonEggData_8cpp</filename>
    <includes id="ChannelServer_8h" name="ChannelServer.h" local="yes" imported="no">ChannelServer.h</includes>
    <includes id="CharacterManager_8h" name="CharacterManager.h" local="yes" imported="no">CharacterManager.h</includes>
  </compound>
  <compound kind="file">
    <name>LootItem.cpp</name>
    <path>C:/projects/comp-hack/server/channel/src/packets/game/</path>
    <filename>LootItem_8cpp</filename>
    <includes id="ChannelServer_8h" name="ChannelServer.h" local="yes" imported="no">ChannelServer.h</includes>
    <includes id="CharacterManager_8h" name="CharacterManager.h" local="yes" imported="no">CharacterManager.h</includes>
    <includes id="ZoneManager_8h" name="ZoneManager.h" local="yes" imported="no">ZoneManager.h</includes>
  </compound>
  <compound kind="file">
    <name>LootTreasureBox.cpp</name>
    <path>C:/projects/comp-hack/server/channel/src/packets/game/</path>
    <filename>LootTreasureBox_8cpp</filename>
    <includes id="ChannelServer_8h" name="ChannelServer.h" local="yes" imported="no">ChannelServer.h</includes>
    <includes id="CharacterManager_8h" name="CharacterManager.h" local="yes" imported="no">CharacterManager.h</includes>
  </compound>
  <compound kind="file">
    <name>main.cpp</name>
    <path>C:/projects/comp-hack/server/channel/src/</path>
    <filename>main_8cpp</filename>
    <includes id="ChannelServer_8h" name="ChannelServer.h" local="yes" imported="no">ChannelServer.h</includes>
    <member kind="function">
      <type>int</type>
      <name>main</name>
      <anchorfile>main_8cpp.html</anchorfile>
      <anchor>ac0f2228420376f4db7e1274f2b41667c</anchor>
      <arglist>(int argc, const char *argv[])</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>MainPage.dox</name>
    <path>C:/projects/comp-hack/server/channel/doc/</path>
    <filename>MainPage_8dox</filename>
  </compound>
  <compound kind="file">
    <name>ManagerClientPacket.cpp</name>
    <path>C:/projects/comp-hack/server/channel/src/</path>
    <filename>ManagerClientPacket_8cpp</filename>
    <includes id="ManagerClientPacket_8h" name="ManagerClientPacket.h" local="yes" imported="no">ManagerClientPacket.h</includes>
    <includes id="ChannelClientConnection_8h" name="ChannelClientConnection.h" local="no" imported="no">ChannelClientConnection.h</includes>
  </compound>
  <compound kind="file">
    <name>ManagerClientPacket.h</name>
    <path>C:/projects/comp-hack/server/channel/src/</path>
    <filename>ManagerClientPacket_8h</filename>
    <class kind="class">channel::ManagerClientPacket</class>
    <namespace>channel</namespace>
  </compound>
  <compound kind="file">
    <name>ManagerConnection.cpp</name>
    <path>C:/projects/comp-hack/server/channel/src/</path>
    <filename>ManagerConnection_8cpp</filename>
    <includes id="ManagerConnection_8h" name="ManagerConnection.h" local="yes" imported="no">ManagerConnection.h</includes>
    <includes id="AccountManager_8h" name="AccountManager.h" local="yes" imported="no">AccountManager.h</includes>
    <includes id="ChannelServer_8h" name="ChannelServer.h" local="yes" imported="no">ChannelServer.h</includes>
    <includes id="ClientState_8h" name="ClientState.h" local="yes" imported="no">ClientState.h</includes>
  </compound>
  <compound kind="file">
    <name>ManagerConnection.h</name>
    <path>C:/projects/comp-hack/server/channel/src/</path>
    <filename>ManagerConnection_8h</filename>
    <includes id="ChannelClientConnection_8h" name="ChannelClientConnection.h" local="yes" imported="no">ChannelClientConnection.h</includes>
    <class kind="class">channel::ManagerConnection</class>
    <namespace>channel</namespace>
  </compound>
  <compound kind="file">
    <name>ManagerSystem.cpp</name>
    <path>C:/projects/comp-hack/server/channel/src/</path>
    <filename>ManagerSystem_8cpp</filename>
    <includes id="ManagerSystem_8h" name="ManagerSystem.h" local="yes" imported="no">ManagerSystem.h</includes>
    <includes id="ChannelServer_8h" name="ChannelServer.h" local="yes" imported="no">ChannelServer.h</includes>
  </compound>
  <compound kind="file">
    <name>ManagerSystem.h</name>
    <path>C:/projects/comp-hack/server/channel/src/</path>
    <filename>ManagerSystem_8h</filename>
    <includes id="ChannelClientConnection_8h" name="ChannelClientConnection.h" local="yes" imported="no">ChannelClientConnection.h</includes>
    <class kind="class">channel::ManagerSystem</class>
    <namespace>channel</namespace>
  </compound>
  <compound kind="file">
    <name>MapFlag.cpp</name>
    <path>C:/projects/comp-hack/server/channel/src/packets/game/</path>
    <filename>MapFlag_8cpp</filename>
    <includes id="ChannelServer_8h" name="ChannelServer.h" local="yes" imported="no">ChannelServer.h</includes>
    <includes id="CharacterManager_8h" name="CharacterManager.h" local="yes" imported="no">CharacterManager.h</includes>
  </compound>
  <compound kind="file">
    <name>MaterialBox.cpp</name>
    <path>C:/projects/comp-hack/server/channel/src/packets/game/</path>
    <filename>MaterialBox_8cpp</filename>
    <includes id="ChannelServer_8h" name="ChannelServer.h" local="yes" imported="no">ChannelServer.h</includes>
    <includes id="CharacterManager_8h" name="CharacterManager.h" local="yes" imported="no">CharacterManager.h</includes>
  </compound>
  <compound kind="file">
    <name>MaterialExtract.cpp</name>
    <path>C:/projects/comp-hack/server/channel/src/packets/game/</path>
    <filename>MaterialExtract_8cpp</filename>
    <includes id="ChannelServer_8h" name="ChannelServer.h" local="yes" imported="no">ChannelServer.h</includes>
    <includes id="CharacterManager_8h" name="CharacterManager.h" local="yes" imported="no">CharacterManager.h</includes>
  </compound>
  <compound kind="file">
    <name>MaterialInsert.cpp</name>
    <path>C:/projects/comp-hack/server/channel/src/packets/game/</path>
    <filename>MaterialInsert_8cpp</filename>
    <includes id="ChannelServer_8h" name="ChannelServer.h" local="yes" imported="no">ChannelServer.h</includes>
    <includes id="CharacterManager_8h" name="CharacterManager.h" local="yes" imported="no">CharacterManager.h</includes>
  </compound>
  <compound kind="file">
    <name>Move.cpp</name>
    <path>C:/projects/comp-hack/server/channel/src/packets/game/</path>
    <filename>Move_8cpp</filename>
    <includes id="ChannelClientConnection_8h" name="ChannelClientConnection.h" local="yes" imported="no">ChannelClientConnection.h</includes>
    <includes id="ChannelServer_8h" name="ChannelServer.h" local="yes" imported="no">ChannelServer.h</includes>
    <includes id="ClientState_8h" name="ClientState.h" local="yes" imported="no">ClientState.h</includes>
    <includes id="ZoneManager_8h" name="ZoneManager.h" local="yes" imported="no">ZoneManager.h</includes>
  </compound>
  <compound kind="file">
    <name>ObjectInteraction.cpp</name>
    <path>C:/projects/comp-hack/server/channel/src/packets/game/</path>
    <filename>ObjectInteraction_8cpp</filename>
    <includes id="ActionManager_8h" name="ActionManager.h" local="yes" imported="no">ActionManager.h</includes>
    <includes id="ChannelServer_8h" name="ChannelServer.h" local="yes" imported="no">ChannelServer.h</includes>
    <includes id="ZoneManager_8h" name="ZoneManager.h" local="yes" imported="no">ZoneManager.h</includes>
    <class kind="class">ActionList</class>
  </compound>
  <compound kind="file">
    <name>Packets.h</name>
    <path>C:/projects/comp-hack/server/channel/src/</path>
    <filename>Packets_8h</filename>
    <namespace>channel</namespace>
    <namespace>channel::Parsers</namespace>
    <member kind="function">
      <type></type>
      <name>PACKET_PARSER_DECL</name>
      <anchorfile>namespacechannel_1_1Parsers.html</anchorfile>
      <anchor>a890cb5f2277a251d95ef6954311b4bf3</anchor>
      <arglist>(Unsupported)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>PACKET_PARSER_DECL</name>
      <anchorfile>namespacechannel_1_1Parsers.html</anchorfile>
      <anchor>ae94a1dc1778fc40d032d5dd119c08a8f</anchor>
      <arglist>(Login)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>PACKET_PARSER_DECL</name>
      <anchorfile>namespacechannel_1_1Parsers.html</anchorfile>
      <anchor>af9974f3648ff70d38d27b96e2fe6a3ee</anchor>
      <arglist>(Auth)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>PACKET_PARSER_DECL</name>
      <anchorfile>namespacechannel_1_1Parsers.html</anchorfile>
      <anchor>afd838f6be6ea508f41e185d861fa433a</anchor>
      <arglist>(SendData)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>PACKET_PARSER_DECL</name>
      <anchorfile>namespacechannel_1_1Parsers.html</anchorfile>
      <anchor>ad5aa3573786b0bc4ca0bba6c4c7e7c6e</anchor>
      <arglist>(Logout)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>PACKET_PARSER_DECL</name>
      <anchorfile>namespacechannel_1_1Parsers.html</anchorfile>
      <anchor>a58ecd86f14c648837ee0fd1d849b72fe</anchor>
      <arglist>(PopulateZone)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>PACKET_PARSER_DECL</name>
      <anchorfile>namespacechannel_1_1Parsers.html</anchorfile>
      <anchor>adc7a0d6dd889731cd5302c60e171b166</anchor>
      <arglist>(Move)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>PACKET_PARSER_DECL</name>
      <anchorfile>namespacechannel_1_1Parsers.html</anchorfile>
      <anchor>aff977610c5726e6a7421e05c83690b09</anchor>
      <arglist>(Pivot)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>PACKET_PARSER_DECL</name>
      <anchorfile>namespacechannel_1_1Parsers.html</anchorfile>
      <anchor>aceba0f771ce9f6213f53fc60566c531b</anchor>
      <arglist>(Chat)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>PACKET_PARSER_DECL</name>
      <anchorfile>namespacechannel_1_1Parsers.html</anchorfile>
      <anchor>a54551b53ee443919b8c6800a9ae6938f</anchor>
      <arglist>(Tell)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>PACKET_PARSER_DECL</name>
      <anchorfile>namespacechannel_1_1Parsers.html</anchorfile>
      <anchor>ad6556b57169a6dc20d3597460011e63f</anchor>
      <arglist>(SkillActivate)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>PACKET_PARSER_DECL</name>
      <anchorfile>namespacechannel_1_1Parsers.html</anchorfile>
      <anchor>a375ed59ce216032df0ffc96b9e89fd1e</anchor>
      <arglist>(SkillExecute)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>PACKET_PARSER_DECL</name>
      <anchorfile>namespacechannel_1_1Parsers.html</anchorfile>
      <anchor>a4cc2cdd166b983162e48bc3337f6ece5</anchor>
      <arglist>(SkillCancel)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>PACKET_PARSER_DECL</name>
      <anchorfile>namespacechannel_1_1Parsers.html</anchorfile>
      <anchor>a5d0261a6ac5128422a47a2f203ecb142</anchor>
      <arglist>(ExpertiseDown)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>PACKET_PARSER_DECL</name>
      <anchorfile>namespacechannel_1_1Parsers.html</anchorfile>
      <anchor>af84b1b79a40145ec23b7ce492daa5126</anchor>
      <arglist>(AllocateSkillPoint)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>PACKET_PARSER_DECL</name>
      <anchorfile>namespacechannel_1_1Parsers.html</anchorfile>
      <anchor>a47a80476c8e9f1f4a1179841d87acd15</anchor>
      <arglist>(ToggleExpertise)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>PACKET_PARSER_DECL</name>
      <anchorfile>namespacechannel_1_1Parsers.html</anchorfile>
      <anchor>adec0c81a045a2e38cf309cc0a288b41b</anchor>
      <arglist>(LearnSkill)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>PACKET_PARSER_DECL</name>
      <anchorfile>namespacechannel_1_1Parsers.html</anchorfile>
      <anchor>a4a997fc73fc8435871bb8d6a0cb6e8d4</anchor>
      <arglist>(UpdateDemonSkill)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>PACKET_PARSER_DECL</name>
      <anchorfile>namespacechannel_1_1Parsers.html</anchorfile>
      <anchor>a8eb6d527ef3143c8f816d0c2d7afa7a7</anchor>
      <arglist>(KeepAlive)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>PACKET_PARSER_DECL</name>
      <anchorfile>namespacechannel_1_1Parsers.html</anchorfile>
      <anchor>ae2c2e144c58ec936f1b19004b3ec68d5</anchor>
      <arglist>(FixObjectPosition)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>PACKET_PARSER_DECL</name>
      <anchorfile>namespacechannel_1_1Parsers.html</anchorfile>
      <anchor>a8996afeb3cf3f0ddf20f39bdef391fee</anchor>
      <arglist>(State)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>PACKET_PARSER_DECL</name>
      <anchorfile>namespacechannel_1_1Parsers.html</anchorfile>
      <anchor>a9eaa762ce937bc7ba61eb37892ef2466</anchor>
      <arglist>(PartnerDemonData)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>PACKET_PARSER_DECL</name>
      <anchorfile>namespacechannel_1_1Parsers.html</anchorfile>
      <anchor>a68cc5203ee302a6f63481e8040a6b66c</anchor>
      <arglist>(DemonBox)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>PACKET_PARSER_DECL</name>
      <anchorfile>namespacechannel_1_1Parsers.html</anchorfile>
      <anchor>a2bbf1990d06af02f7a7962b484bf39d7</anchor>
      <arglist>(DemonBoxData)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>PACKET_PARSER_DECL</name>
      <anchorfile>namespacechannel_1_1Parsers.html</anchorfile>
      <anchor>a70659754fc952f5999ba5c99ff32277e</anchor>
      <arglist>(ChannelList)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>PACKET_PARSER_DECL</name>
      <anchorfile>namespacechannel_1_1Parsers.html</anchorfile>
      <anchor>ad1c93f70c8ee86897b0a76d2b4fbf515</anchor>
      <arglist>(ReviveCharacter)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>PACKET_PARSER_DECL</name>
      <anchorfile>namespacechannel_1_1Parsers.html</anchorfile>
      <anchor>ab052a097caf91220604c2c536a4c62f0</anchor>
      <arglist>(StopMovement)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>PACKET_PARSER_DECL</name>
      <anchorfile>namespacechannel_1_1Parsers.html</anchorfile>
      <anchor>af29db7b8a5606f6cfdddfe31634fa694</anchor>
      <arglist>(SpotTriggered)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>PACKET_PARSER_DECL</name>
      <anchorfile>namespacechannel_1_1Parsers.html</anchorfile>
      <anchor>a5aa4d371b2ccc6a0674a2a41fc1c345c</anchor>
      <arglist>(WorldTime)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>PACKET_PARSER_DECL</name>
      <anchorfile>namespacechannel_1_1Parsers.html</anchorfile>
      <anchor>a39a8dbe8207e0e7f93cab1cab42a690f</anchor>
      <arglist>(ItemBox)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>PACKET_PARSER_DECL</name>
      <anchorfile>namespacechannel_1_1Parsers.html</anchorfile>
      <anchor>ac9210c5b0335d4a1d155197d692f5af6</anchor>
      <arglist>(ItemMove)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>PACKET_PARSER_DECL</name>
      <anchorfile>namespacechannel_1_1Parsers.html</anchorfile>
      <anchor>ac5a9817254b3343089b1afc0829d9ed3</anchor>
      <arglist>(ItemDrop)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>PACKET_PARSER_DECL</name>
      <anchorfile>namespacechannel_1_1Parsers.html</anchorfile>
      <anchor>aeb4e547a8d94bc840bf110e06427be3c</anchor>
      <arglist>(ItemStack)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>PACKET_PARSER_DECL</name>
      <anchorfile>namespacechannel_1_1Parsers.html</anchorfile>
      <anchor>a23dad0722bee33158d469a7cd11420eb</anchor>
      <arglist>(EquipmentList)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>PACKET_PARSER_DECL</name>
      <anchorfile>namespacechannel_1_1Parsers.html</anchorfile>
      <anchor>adc3b526a69c9bbe05358cc2fe201c5af</anchor>
      <arglist>(TradeRequest)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>PACKET_PARSER_DECL</name>
      <anchorfile>namespacechannel_1_1Parsers.html</anchorfile>
      <anchor>a4f0239b72b70a66e2472647a65d621e9</anchor>
      <arglist>(TradeAccept)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>PACKET_PARSER_DECL</name>
      <anchorfile>namespacechannel_1_1Parsers.html</anchorfile>
      <anchor>aad13e4e73e4928472fd8ef7abaae5673</anchor>
      <arglist>(TradeAddItem)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>PACKET_PARSER_DECL</name>
      <anchorfile>namespacechannel_1_1Parsers.html</anchorfile>
      <anchor>a7dcd32056226457879e1c5e14a07d81d</anchor>
      <arglist>(TradeLock)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>PACKET_PARSER_DECL</name>
      <anchorfile>namespacechannel_1_1Parsers.html</anchorfile>
      <anchor>a3620d29f3692e7d82d4e446ca4971142</anchor>
      <arglist>(TradeFinish)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>PACKET_PARSER_DECL</name>
      <anchorfile>namespacechannel_1_1Parsers.html</anchorfile>
      <anchor>a020ce1a7780283eaf1564a3c6d227ad3</anchor>
      <arglist>(TradeCancel)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>PACKET_PARSER_DECL</name>
      <anchorfile>namespacechannel_1_1Parsers.html</anchorfile>
      <anchor>a630bb6dc909e41948dd6a75cd167710f</anchor>
      <arglist>(LootItem)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>PACKET_PARSER_DECL</name>
      <anchorfile>namespacechannel_1_1Parsers.html</anchorfile>
      <anchor>af3fdc1abd66185ffb49aed8f5696f6cc</anchor>
      <arglist>(CashBalance)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>PACKET_PARSER_DECL</name>
      <anchorfile>namespacechannel_1_1Parsers.html</anchorfile>
      <anchor>addd49b6b7bbb441be8eee90fb30f86de</anchor>
      <arglist>(ShopData)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>PACKET_PARSER_DECL</name>
      <anchorfile>namespacechannel_1_1Parsers.html</anchorfile>
      <anchor>a88e6228ca3bc38a1a5b529bba42e2ca1</anchor>
      <arglist>(ShopBuy)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>PACKET_PARSER_DECL</name>
      <anchorfile>namespacechannel_1_1Parsers.html</anchorfile>
      <anchor>a6672cf56f2e2e47a2e726dc00f448bb6</anchor>
      <arglist>(ShopSell)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>PACKET_PARSER_DECL</name>
      <anchorfile>namespacechannel_1_1Parsers.html</anchorfile>
      <anchor>ad0fd6146a2dd576b81b10eeb0dfd1ae6</anchor>
      <arglist>(DemonBoxMove)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>PACKET_PARSER_DECL</name>
      <anchorfile>namespacechannel_1_1Parsers.html</anchorfile>
      <anchor>a5371bec1f165232373bc3b245e39453c</anchor>
      <arglist>(DismissDemon)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>PACKET_PARSER_DECL</name>
      <anchorfile>namespacechannel_1_1Parsers.html</anchorfile>
      <anchor>aa6b227c67e36a5aa330ab9d214b61cf1</anchor>
      <arglist>(PostList)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>PACKET_PARSER_DECL</name>
      <anchorfile>namespacechannel_1_1Parsers.html</anchorfile>
      <anchor>af4f0982929387c63c515a875ac8d6ed2</anchor>
      <arglist>(PostItem)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>PACKET_PARSER_DECL</name>
      <anchorfile>namespacechannel_1_1Parsers.html</anchorfile>
      <anchor>a7ac9ebc9c94884f21b7241cbbf494f94</anchor>
      <arglist>(HotbarData)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>PACKET_PARSER_DECL</name>
      <anchorfile>namespacechannel_1_1Parsers.html</anchorfile>
      <anchor>a96353b26d8bafd3689afb50d8a4dbdf5</anchor>
      <arglist>(HotbarSave)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>PACKET_PARSER_DECL</name>
      <anchorfile>namespacechannel_1_1Parsers.html</anchorfile>
      <anchor>a4e0ed38608743f97b5b25b9bcefef23e</anchor>
      <arglist>(EventResponse)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>PACKET_PARSER_DECL</name>
      <anchorfile>namespacechannel_1_1Parsers.html</anchorfile>
      <anchor>abada04544198be08513edea636d47632</anchor>
      <arglist>(ValuableList)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>PACKET_PARSER_DECL</name>
      <anchorfile>namespacechannel_1_1Parsers.html</anchorfile>
      <anchor>acf07fca8bfe83921f13f920d79eca256</anchor>
      <arglist>(ObjectInteraction)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>PACKET_PARSER_DECL</name>
      <anchorfile>namespacechannel_1_1Parsers.html</anchorfile>
      <anchor>a165f2f252fac0eacd650a78627da2dcf</anchor>
      <arglist>(FriendInfo)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>PACKET_PARSER_DECL</name>
      <anchorfile>namespacechannel_1_1Parsers.html</anchorfile>
      <anchor>aba6a952289fcb1db2e1d19e2ee0483bc</anchor>
      <arglist>(FriendRequest)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>PACKET_PARSER_DECL</name>
      <anchorfile>namespacechannel_1_1Parsers.html</anchorfile>
      <anchor>ae4afb5e25f299297020c97db69bc1a51</anchor>
      <arglist>(FriendAddRemove)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>PACKET_PARSER_DECL</name>
      <anchorfile>namespacechannel_1_1Parsers.html</anchorfile>
      <anchor>a5a33715e1106d4f486ac66fecfb75e56</anchor>
      <arglist>(FriendData)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>PACKET_PARSER_DECL</name>
      <anchorfile>namespacechannel_1_1Parsers.html</anchorfile>
      <anchor>a668efb852fa09ad1961865864707caa6</anchor>
      <arglist>(PartyInvite)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>PACKET_PARSER_DECL</name>
      <anchorfile>namespacechannel_1_1Parsers.html</anchorfile>
      <anchor>adb5404562f34f462c66a473f583f7cff</anchor>
      <arglist>(PartyJoin)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>PACKET_PARSER_DECL</name>
      <anchorfile>namespacechannel_1_1Parsers.html</anchorfile>
      <anchor>abe70f0098f72fb301288919dbf9cc0a6</anchor>
      <arglist>(PartyCancel)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>PACKET_PARSER_DECL</name>
      <anchorfile>namespacechannel_1_1Parsers.html</anchorfile>
      <anchor>a3cf2e226f58f7c426f85597da5911d85</anchor>
      <arglist>(PartyLeave)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>PACKET_PARSER_DECL</name>
      <anchorfile>namespacechannel_1_1Parsers.html</anchorfile>
      <anchor>a50fe89e494f843bf3fc53039a4f1925f</anchor>
      <arglist>(PartyDisband)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>PACKET_PARSER_DECL</name>
      <anchorfile>namespacechannel_1_1Parsers.html</anchorfile>
      <anchor>a5c16d2fc87a2626f20fd682c1acbbb59</anchor>
      <arglist>(PartyLeaderUpdate)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>PACKET_PARSER_DECL</name>
      <anchorfile>namespacechannel_1_1Parsers.html</anchorfile>
      <anchor>aa6afe83f3cb369583ecef80c49a6f18a</anchor>
      <arglist>(PartyDropRule)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>PACKET_PARSER_DECL</name>
      <anchorfile>namespacechannel_1_1Parsers.html</anchorfile>
      <anchor>ab2414a25a48f13c8152826229aaf7d0a</anchor>
      <arglist>(PartyKick)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>PACKET_PARSER_DECL</name>
      <anchorfile>namespacechannel_1_1Parsers.html</anchorfile>
      <anchor>aac17be68d2368b9ac66f35aaaaa0ad2a</anchor>
      <arglist>(DemonFusion)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>PACKET_PARSER_DECL</name>
      <anchorfile>namespacechannel_1_1Parsers.html</anchorfile>
      <anchor>a77e6a64ef82b8fc367f216b3a606ee5f</anchor>
      <arglist>(LootDemonEggData)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>PACKET_PARSER_DECL</name>
      <anchorfile>namespacechannel_1_1Parsers.html</anchorfile>
      <anchor>af99c7851e6c8d53ff9194a27d7dcf866</anchor>
      <arglist>(Sync)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>PACKET_PARSER_DECL</name>
      <anchorfile>namespacechannel_1_1Parsers.html</anchorfile>
      <anchor>a9d1514f2fecb97acbfcfd4f9a523cb46</anchor>
      <arglist>(ShopRepair)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>PACKET_PARSER_DECL</name>
      <anchorfile>namespacechannel_1_1Parsers.html</anchorfile>
      <anchor>a867a4b406be96f53413c93b23feb3a06</anchor>
      <arglist>(Rotate)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>PACKET_PARSER_DECL</name>
      <anchorfile>namespacechannel_1_1Parsers.html</anchorfile>
      <anchor>a9461ec8b9b72d92fb658c01ac0760a2e</anchor>
      <arglist>(LootBossBox)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>PACKET_PARSER_DECL</name>
      <anchorfile>namespacechannel_1_1Parsers.html</anchorfile>
      <anchor>a7d8a187c85f630de3b7249942f974d4a</anchor>
      <arglist>(UnionFlag)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>PACKET_PARSER_DECL</name>
      <anchorfile>namespacechannel_1_1Parsers.html</anchorfile>
      <anchor>a2b531d86fb619b9c48e38c75a3c6206a</anchor>
      <arglist>(ItemDepoList)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>PACKET_PARSER_DECL</name>
      <anchorfile>namespacechannel_1_1Parsers.html</anchorfile>
      <anchor>a292547e979fd1fb803c236a210e5b2e7</anchor>
      <arglist>(DepoRent)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>PACKET_PARSER_DECL</name>
      <anchorfile>namespacechannel_1_1Parsers.html</anchorfile>
      <anchor>a18dd1ca93e8aa4d6cda0a9e03e36b91f</anchor>
      <arglist>(LootTreasureBox)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>PACKET_PARSER_DECL</name>
      <anchorfile>namespacechannel_1_1Parsers.html</anchorfile>
      <anchor>aac89e347abf54ed06bee16065e3eea48</anchor>
      <arglist>(QuestActiveList)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>PACKET_PARSER_DECL</name>
      <anchorfile>namespacechannel_1_1Parsers.html</anchorfile>
      <anchor>afdcdf45c216caf7b203049be8ed34b60</anchor>
      <arglist>(QuestCompletedList)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>PACKET_PARSER_DECL</name>
      <anchorfile>namespacechannel_1_1Parsers.html</anchorfile>
      <anchor>ae9dceae2d1fd4ef2358feda7206651e2</anchor>
      <arglist>(BazaarMarketOpen)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>PACKET_PARSER_DECL</name>
      <anchorfile>namespacechannel_1_1Parsers.html</anchorfile>
      <anchor>a7c7e38743d3a55f2a74c747f62dc5cee</anchor>
      <arglist>(BazaarMarketClose)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>PACKET_PARSER_DECL</name>
      <anchorfile>namespacechannel_1_1Parsers.html</anchorfile>
      <anchor>a0eaecdfbe68ff767c2dd186ea4fbd553</anchor>
      <arglist>(BazaarMarketInfo)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>PACKET_PARSER_DECL</name>
      <anchorfile>namespacechannel_1_1Parsers.html</anchorfile>
      <anchor>a530bc1f9739c74972633953452da30d2</anchor>
      <arglist>(BazaarItemAdd)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>PACKET_PARSER_DECL</name>
      <anchorfile>namespacechannel_1_1Parsers.html</anchorfile>
      <anchor>abd95198da7f89f9d15ae3015afcc4301</anchor>
      <arglist>(BazaarItemDrop)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>PACKET_PARSER_DECL</name>
      <anchorfile>namespacechannel_1_1Parsers.html</anchorfile>
      <anchor>a931bf1e0efedb09a2d429ececbbc027b</anchor>
      <arglist>(BazaarItemUpdate)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>PACKET_PARSER_DECL</name>
      <anchorfile>namespacechannel_1_1Parsers.html</anchorfile>
      <anchor>ae767a701adbf9b3e62bc9e333a10e3bf</anchor>
      <arglist>(BazaarItemBuy)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>PACKET_PARSER_DECL</name>
      <anchorfile>namespacechannel_1_1Parsers.html</anchorfile>
      <anchor>a187bf77fa9ab9a59fd480c908c34d5bb</anchor>
      <arglist>(BazaarMarketSales)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>PACKET_PARSER_DECL</name>
      <anchorfile>namespacechannel_1_1Parsers.html</anchorfile>
      <anchor>acb71c41375dd2e181d78233d6d1895b8</anchor>
      <arglist>(SearchEntrySelf)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>PACKET_PARSER_DECL</name>
      <anchorfile>namespacechannel_1_1Parsers.html</anchorfile>
      <anchor>ab484457df75d7d4a08e65ec3693706d8</anchor>
      <arglist>(SearchList)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>PACKET_PARSER_DECL</name>
      <anchorfile>namespacechannel_1_1Parsers.html</anchorfile>
      <anchor>aac50422a605d1e88453d5cd4ee3372d9</anchor>
      <arglist>(SearchEntryData)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>PACKET_PARSER_DECL</name>
      <anchorfile>namespacechannel_1_1Parsers.html</anchorfile>
      <anchor>a2698c51dc68d6698135f1dec412cfb46</anchor>
      <arglist>(SearchEntryRegister)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>PACKET_PARSER_DECL</name>
      <anchorfile>namespacechannel_1_1Parsers.html</anchorfile>
      <anchor>aa56673b5c6e896559795d431751d9b35</anchor>
      <arglist>(SearchEntryUpdate)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>PACKET_PARSER_DECL</name>
      <anchorfile>namespacechannel_1_1Parsers.html</anchorfile>
      <anchor>a2b40857ea2dc9096113747711b5982b3</anchor>
      <arglist>(SearchEntryRemove)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>PACKET_PARSER_DECL</name>
      <anchorfile>namespacechannel_1_1Parsers.html</anchorfile>
      <anchor>a1599782b2d3c9aede9689c0e076f7345</anchor>
      <arglist>(SearchAppReply)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>PACKET_PARSER_DECL</name>
      <anchorfile>namespacechannel_1_1Parsers.html</anchorfile>
      <anchor>a884c43ffd0b0cef85576339b1a8284ae</anchor>
      <arglist>(ClanDisband)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>PACKET_PARSER_DECL</name>
      <anchorfile>namespacechannel_1_1Parsers.html</anchorfile>
      <anchor>ab86edaa3a09f40c6deb035544ca4b168</anchor>
      <arglist>(ClanInvite)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>PACKET_PARSER_DECL</name>
      <anchorfile>namespacechannel_1_1Parsers.html</anchorfile>
      <anchor>ae55e907d160291adc39969c4f872b4b1</anchor>
      <arglist>(ClanJoin)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>PACKET_PARSER_DECL</name>
      <anchorfile>namespacechannel_1_1Parsers.html</anchorfile>
      <anchor>a0c31154f1d887d45ec79ad4ddc977699</anchor>
      <arglist>(ClanCancel)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>PACKET_PARSER_DECL</name>
      <anchorfile>namespacechannel_1_1Parsers.html</anchorfile>
      <anchor>acac5725342a37cb451fa2204e0aa1846</anchor>
      <arglist>(ClanKick)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>PACKET_PARSER_DECL</name>
      <anchorfile>namespacechannel_1_1Parsers.html</anchorfile>
      <anchor>a0f6b13564e2cc661cc1846363f7fc2c5</anchor>
      <arglist>(ClanMasterUpdate)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>PACKET_PARSER_DECL</name>
      <anchorfile>namespacechannel_1_1Parsers.html</anchorfile>
      <anchor>a382c9b486646a06009748617ea224dde</anchor>
      <arglist>(ClanSubMasterUpdate)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>PACKET_PARSER_DECL</name>
      <anchorfile>namespacechannel_1_1Parsers.html</anchorfile>
      <anchor>ac83fb8eacb404d58764ba3a45dbdfbb0</anchor>
      <arglist>(ClanLeave)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>PACKET_PARSER_DECL</name>
      <anchorfile>namespacechannel_1_1Parsers.html</anchorfile>
      <anchor>a4a8195d041badf945c2b2165f1bc7e15</anchor>
      <arglist>(ClanChat)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>PACKET_PARSER_DECL</name>
      <anchorfile>namespacechannel_1_1Parsers.html</anchorfile>
      <anchor>a0de2bd9544ee5b06d65517726d50939c</anchor>
      <arglist>(ClanInfo)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>PACKET_PARSER_DECL</name>
      <anchorfile>namespacechannel_1_1Parsers.html</anchorfile>
      <anchor>af6f96ea981f0a6544ec6746c4b227635</anchor>
      <arglist>(ClanList)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>PACKET_PARSER_DECL</name>
      <anchorfile>namespacechannel_1_1Parsers.html</anchorfile>
      <anchor>a203da5ded88fda102e36d1d3f29290b4</anchor>
      <arglist>(ClanData)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>PACKET_PARSER_DECL</name>
      <anchorfile>namespacechannel_1_1Parsers.html</anchorfile>
      <anchor>a959ed8eb0dc8a5d461c0510181a3cfde</anchor>
      <arglist>(ClanForm)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>PACKET_PARSER_DECL</name>
      <anchorfile>namespacechannel_1_1Parsers.html</anchorfile>
      <anchor>aabc2e2ed2be0aeb349347aab51e491a3</anchor>
      <arglist>(ItemPrice)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>PACKET_PARSER_DECL</name>
      <anchorfile>namespacechannel_1_1Parsers.html</anchorfile>
      <anchor>af5079ffbae1b6bfcc7ebcead985e5b2e</anchor>
      <arglist>(BazaarState)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>PACKET_PARSER_DECL</name>
      <anchorfile>namespacechannel_1_1Parsers.html</anchorfile>
      <anchor>a05232a28bee7851371c0b66e94ed59cd</anchor>
      <arglist>(BazaarClerkSet)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>PACKET_PARSER_DECL</name>
      <anchorfile>namespacechannel_1_1Parsers.html</anchorfile>
      <anchor>ac67841b30f5cc4d5da12feba93bcc655</anchor>
      <arglist>(BazaarPrice)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>PACKET_PARSER_DECL</name>
      <anchorfile>namespacechannel_1_1Parsers.html</anchorfile>
      <anchor>afa8b37592e160f8bbb5069fae0afd968</anchor>
      <arglist>(BazaarMarketInfoSelf)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>PACKET_PARSER_DECL</name>
      <anchorfile>namespacechannel_1_1Parsers.html</anchorfile>
      <anchor>ab234db94abbe5c786cfaaf7bfb690707</anchor>
      <arglist>(Warp)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>PACKET_PARSER_DECL</name>
      <anchorfile>namespacechannel_1_1Parsers.html</anchorfile>
      <anchor>aca62027849d85227c9d01dc7f52c0cb6</anchor>
      <arglist>(SkillExecuteInstant)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>PACKET_PARSER_DECL</name>
      <anchorfile>namespacechannel_1_1Parsers.html</anchorfile>
      <anchor>aeb24c5e444d103d9f47f37d868818e70</anchor>
      <arglist>(SyncCharacter)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>PACKET_PARSER_DECL</name>
      <anchorfile>namespacechannel_1_1Parsers.html</anchorfile>
      <anchor>a734995a7edcc63882a722310e0f95302</anchor>
      <arglist>(BazaarInteract)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>PACKET_PARSER_DECL</name>
      <anchorfile>namespacechannel_1_1Parsers.html</anchorfile>
      <anchor>abd645ff6755419293ffe5deecb1a8afa</anchor>
      <arglist>(SkillForget)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>PACKET_PARSER_DECL</name>
      <anchorfile>namespacechannel_1_1Parsers.html</anchorfile>
      <anchor>a7bbde53ef90979ff5fc256ae3d7fb715</anchor>
      <arglist>(BazaarMarketEnd)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>PACKET_PARSER_DECL</name>
      <anchorfile>namespacechannel_1_1Parsers.html</anchorfile>
      <anchor>a10f5427cf4aa57446a65ddcd4e0f34bc</anchor>
      <arglist>(BazaarMarketComment)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>PACKET_PARSER_DECL</name>
      <anchorfile>namespacechannel_1_1Parsers.html</anchorfile>
      <anchor>ad251ad755c8c960f8e7aba6e6d369772</anchor>
      <arglist>(PartnerDemonAISet)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>PACKET_PARSER_DECL</name>
      <anchorfile>namespacechannel_1_1Parsers.html</anchorfile>
      <anchor>a2e0d6e653c325c0263da372e036444b0</anchor>
      <arglist>(MapFlag)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>PACKET_PARSER_DECL</name>
      <anchorfile>namespacechannel_1_1Parsers.html</anchorfile>
      <anchor>a73e4bcf1dda9f74760164783eb4468dd</anchor>
      <arglist>(DemonCompendium)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>PACKET_PARSER_DECL</name>
      <anchorfile>namespacechannel_1_1Parsers.html</anchorfile>
      <anchor>a4b126f2c4ce892402719ebdb72e7f404</anchor>
      <arglist>(ItemRepairMax)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>PACKET_PARSER_DECL</name>
      <anchorfile>namespacechannel_1_1Parsers.html</anchorfile>
      <anchor>ad11f0b238d2d4daa6189d6af9a263598</anchor>
      <arglist>(AppearanceAlter)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>PACKET_PARSER_DECL</name>
      <anchorfile>namespacechannel_1_1Parsers.html</anchorfile>
      <anchor>a8db68369da4d114e6cf2cc43fb207408</anchor>
      <arglist>(EntrustRequest)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>PACKET_PARSER_DECL</name>
      <anchorfile>namespacechannel_1_1Parsers.html</anchorfile>
      <anchor>af7b0d06a55b901b0ce627422273567e2</anchor>
      <arglist>(EntrustAccept)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>PACKET_PARSER_DECL</name>
      <anchorfile>namespacechannel_1_1Parsers.html</anchorfile>
      <anchor>a4909813087e538b2ba9fc6c828c43e7f</anchor>
      <arglist>(EntrustRewardUpdate)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>PACKET_PARSER_DECL</name>
      <anchorfile>namespacechannel_1_1Parsers.html</anchorfile>
      <anchor>a9e8724766222c0ba19e9f6cebdd5f25b</anchor>
      <arglist>(EntrustRewardFinish)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>PACKET_PARSER_DECL</name>
      <anchorfile>namespacechannel_1_1Parsers.html</anchorfile>
      <anchor>ab5972eaef6e8c8a76d0197dfd95e56f2</anchor>
      <arglist>(EntrustRewardAccept)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>PACKET_PARSER_DECL</name>
      <anchorfile>namespacechannel_1_1Parsers.html</anchorfile>
      <anchor>a79cd737c326ba357695726826200c5ce</anchor>
      <arglist>(EntrustFinish)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>PACKET_PARSER_DECL</name>
      <anchorfile>namespacechannel_1_1Parsers.html</anchorfile>
      <anchor>a40b2fd880de3f2fc55ba341e298d3092</anchor>
      <arglist>(DemonCrystallizeItem)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>PACKET_PARSER_DECL</name>
      <anchorfile>namespacechannel_1_1Parsers.html</anchorfile>
      <anchor>a43c1730851b18f1fddd83b318e3af59b</anchor>
      <arglist>(DemonCrystallize)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>PACKET_PARSER_DECL</name>
      <anchorfile>namespacechannel_1_1Parsers.html</anchorfile>
      <anchor>afda3e648745534650637acc40bd0ee78</anchor>
      <arglist>(EnchantItem)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>PACKET_PARSER_DECL</name>
      <anchorfile>namespacechannel_1_1Parsers.html</anchorfile>
      <anchor>a7b6e69c2180ceebc6764b46ea1bfea80</anchor>
      <arglist>(Enchant)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>PACKET_PARSER_DECL</name>
      <anchorfile>namespacechannel_1_1Parsers.html</anchorfile>
      <anchor>aa220aab3e270a2e175aece2654032b33</anchor>
      <arglist>(DungeonRecords)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>PACKET_PARSER_DECL</name>
      <anchorfile>namespacechannel_1_1Parsers.html</anchorfile>
      <anchor>a6526cf831ca743a5c29661a3abf87f62</anchor>
      <arglist>(TriFusionJoin)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>PACKET_PARSER_DECL</name>
      <anchorfile>namespacechannel_1_1Parsers.html</anchorfile>
      <anchor>a9f83948781aea4c3483098a366c88104</anchor>
      <arglist>(TriFusionDemonUpdate)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>PACKET_PARSER_DECL</name>
      <anchorfile>namespacechannel_1_1Parsers.html</anchorfile>
      <anchor>ad408ee5e634e77fe90f3f99a5f08eff7</anchor>
      <arglist>(TriFusionRewardUpdate)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>PACKET_PARSER_DECL</name>
      <anchorfile>namespacechannel_1_1Parsers.html</anchorfile>
      <anchor>a25da2351e7fd3d590dfd49a340d68cf1</anchor>
      <arglist>(TriFusionRewardAccept)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>PACKET_PARSER_DECL</name>
      <anchorfile>namespacechannel_1_1Parsers.html</anchorfile>
      <anchor>a38db8651011259bb469354a840323508</anchor>
      <arglist>(TriFusionAccept)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>PACKET_PARSER_DECL</name>
      <anchorfile>namespacechannel_1_1Parsers.html</anchorfile>
      <anchor>a3e49d2050f446b58cc1566a7d0368dd8</anchor>
      <arglist>(TriFusionLeave)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>PACKET_PARSER_DECL</name>
      <anchorfile>namespacechannel_1_1Parsers.html</anchorfile>
      <anchor>a24383339d474dd57cb6abe1fe9b3aa6d</anchor>
      <arglist>(ClanEmblemUpdate)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>PACKET_PARSER_DECL</name>
      <anchorfile>namespacechannel_1_1Parsers.html</anchorfile>
      <anchor>a1dbe06d2e2279a75fb5089fd0c8d7710</anchor>
      <arglist>(DemonFamiliarity)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>PACKET_PARSER_DECL</name>
      <anchorfile>namespacechannel_1_1Parsers.html</anchorfile>
      <anchor>a6a9e8571d066ce5d17c93f0a201a323b</anchor>
      <arglist>(PlasmaStart)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>PACKET_PARSER_DECL</name>
      <anchorfile>namespacechannel_1_1Parsers.html</anchorfile>
      <anchor>a1068fefcd88b74de54dd8df769c65e02</anchor>
      <arglist>(PlasmaResult)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>PACKET_PARSER_DECL</name>
      <anchorfile>namespacechannel_1_1Parsers.html</anchorfile>
      <anchor>a49682ea2c49dff80bd949c4f387e1692</anchor>
      <arglist>(PlasmaEnd)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>PACKET_PARSER_DECL</name>
      <anchorfile>namespacechannel_1_1Parsers.html</anchorfile>
      <anchor>a55be10e0201d4ba3b68299f2ed615f4a</anchor>
      <arglist>(PlasmaItemData)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>PACKET_PARSER_DECL</name>
      <anchorfile>namespacechannel_1_1Parsers.html</anchorfile>
      <anchor>a6f9269fc10e9aae943b175b1ff8969e5</anchor>
      <arglist>(PlasmaItem)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>PACKET_PARSER_DECL</name>
      <anchorfile>namespacechannel_1_1Parsers.html</anchorfile>
      <anchor>acbca02b07b81a0ed71fc6674678a9c09</anchor>
      <arglist>(ItemDisassemble)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>PACKET_PARSER_DECL</name>
      <anchorfile>namespacechannel_1_1Parsers.html</anchorfile>
      <anchor>a02765599fb09d4dc3333638b79b3b882</anchor>
      <arglist>(EquipmentMod)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>PACKET_PARSER_DECL</name>
      <anchorfile>namespacechannel_1_1Parsers.html</anchorfile>
      <anchor>af6a1e6a663f51eb441734a3be4d22e8d</anchor>
      <arglist>(MaterialBox)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>PACKET_PARSER_DECL</name>
      <anchorfile>namespacechannel_1_1Parsers.html</anchorfile>
      <anchor>aba0dc452cb4aaf91d4aca6e6f09fefcd</anchor>
      <arglist>(Analyze)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>PACKET_PARSER_DECL</name>
      <anchorfile>namespacechannel_1_1Parsers.html</anchorfile>
      <anchor>a4d6a27a5d8087868b42bd73c2e2cec3e</anchor>
      <arglist>(MaterialExtract)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>PACKET_PARSER_DECL</name>
      <anchorfile>namespacechannel_1_1Parsers.html</anchorfile>
      <anchor>a9034798fa159038dbe2b9f73973a0ceb</anchor>
      <arglist>(MaterialInsert)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>PACKET_PARSER_DECL</name>
      <anchorfile>namespacechannel_1_1Parsers.html</anchorfile>
      <anchor>ae57f37fdd9e5af08553d2333a4c0dde7</anchor>
      <arglist>(ItemExchange)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>PACKET_PARSER_DECL</name>
      <anchorfile>namespacechannel_1_1Parsers.html</anchorfile>
      <anchor>a547c55cdb397b7e024480ef4d568592b</anchor>
      <arglist>(CompShopOpen)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>PACKET_PARSER_DECL</name>
      <anchorfile>namespacechannel_1_1Parsers.html</anchorfile>
      <anchor>adb17529b0debaff37daf4e8f55d9c082</anchor>
      <arglist>(CompShopList)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>PACKET_PARSER_DECL</name>
      <anchorfile>namespacechannel_1_1Parsers.html</anchorfile>
      <anchor>a6ac189bb2a6d768f11f61172070c2222</anchor>
      <arglist>(FusionGauge)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>PACKET_PARSER_DECL</name>
      <anchorfile>namespacechannel_1_1Parsers.html</anchorfile>
      <anchor>ae1e1d33b474e6345e8392a367c3204f1</anchor>
      <arglist>(TitleList)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>PACKET_PARSER_DECL</name>
      <anchorfile>namespacechannel_1_1Parsers.html</anchorfile>
      <anchor>abade11aa90903463b17d1158b2e6ca87</anchor>
      <arglist>(PartnerDemonQuestList)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>PACKET_PARSER_DECL</name>
      <anchorfile>namespacechannel_1_1Parsers.html</anchorfile>
      <anchor>a9d17550ca2585c4da2a53b6f8ecbfbb8</anchor>
      <arglist>(LockDemon)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>PACKET_PARSER_DECL</name>
      <anchorfile>namespacechannel_1_1Parsers.html</anchorfile>
      <anchor>a7a341b2d2864483e4423e4c4b923ab26</anchor>
      <arglist>(PvPCharacterInfo)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>PACKET_PARSER_DECL</name>
      <anchorfile>namespacechannel_1_1Parsers.html</anchorfile>
      <anchor>a0b5184340abd7797b474161c07baa3a7</anchor>
      <arglist>(TeamInfo)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>PACKET_PARSER_DECL</name>
      <anchorfile>namespacechannel_1_1Parsers.html</anchorfile>
      <anchor>a71db5e43b67b47af2fac8f627127d37d</anchor>
      <arglist>(PartnerDemonQuestTemp)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>PACKET_PARSER_DECL</name>
      <anchorfile>namespacechannel_1_1Parsers.html</anchorfile>
      <anchor>ace33066e7a6955923b936aa8be6c479c</anchor>
      <arglist>(ItemDepoRemote)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>PACKET_PARSER_DECL</name>
      <anchorfile>namespacechannel_1_1Parsers.html</anchorfile>
      <anchor>abd4046837d69578ebca45c277ae58678</anchor>
      <arglist>(DemonDepoRemote)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>PACKET_PARSER_DECL</name>
      <anchorfile>namespacechannel_1_1Parsers.html</anchorfile>
      <anchor>a314e5f0981b4af6e8abe9460217f3cfd</anchor>
      <arglist>(CommonSwitchInfo)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>PACKET_PARSER_DECL</name>
      <anchorfile>namespacechannel_1_1Parsers.html</anchorfile>
      <anchor>a0f8f963f709dbd90cd1834fbd922917f</anchor>
      <arglist>(CasinoCoinTotal)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>PACKET_PARSER_DECL</name>
      <anchorfile>namespacechannel_1_1Parsers.html</anchorfile>
      <anchor>a978602aaa3db2e8e4a14fa3cd070492d</anchor>
      <arglist>(TriFusionSolo)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>PACKET_PARSER_DECL</name>
      <anchorfile>namespacechannel_1_1Parsers.html</anchorfile>
      <anchor>ae8efcd8ee307dc56260ebc9d9e2159e3</anchor>
      <arglist>(SearchEntryInfo)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>PACKET_PARSER_DECL</name>
      <anchorfile>namespacechannel_1_1Parsers.html</anchorfile>
      <anchor>abdd57568069d3f832b8c42ff73b3f242</anchor>
      <arglist>(HouraiData)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>PACKET_PARSER_DECL</name>
      <anchorfile>namespacechannel_1_1Parsers.html</anchorfile>
      <anchor>a1c216aba3483af2f16e66611d72cdfc0</anchor>
      <arglist>(CultureData)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>PACKET_PARSER_DECL</name>
      <anchorfile>namespacechannel_1_1Parsers.html</anchorfile>
      <anchor>a81ce58fc3c9e06f093a4c53ea8bfd239</anchor>
      <arglist>(EquipmentModEdit)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>PACKET_PARSER_DECL</name>
      <anchorfile>namespacechannel_1_1Parsers.html</anchorfile>
      <anchor>a9978dcef5bb2724884d188f8b994a53d</anchor>
      <arglist>(PAttributeDeadline)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>PACKET_PARSER_DECL</name>
      <anchorfile>namespacechannel_1_1Parsers.html</anchorfile>
      <anchor>acdf733023072ce6d00cff3fe5178d296</anchor>
      <arglist>(DemonDepoList)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>PACKET_PARSER_DECL</name>
      <anchorfile>namespacechannel_1_1Parsers.html</anchorfile>
      <anchor>af500e1c32db991db11d618ca7ccc87e5</anchor>
      <arglist>(Barter)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>PACKET_PARSER_DECL</name>
      <anchorfile>namespacechannel_1_1Parsers.html</anchorfile>
      <anchor>a59d3b4e968d8d50b9cbf4fec9f3c44ab</anchor>
      <arglist>(Blacklist)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>PACKET_PARSER_DECL</name>
      <anchorfile>namespacechannel_1_1Parsers.html</anchorfile>
      <anchor>a056234a0f2190082a4ae38cecb06f227</anchor>
      <arglist>(DigitalizePoints)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>PACKET_PARSER_DECL</name>
      <anchorfile>namespacechannel_1_1Parsers.html</anchorfile>
      <anchor>a7d5682be8975e571b5b5cfe15aba374c</anchor>
      <arglist>(DigitalizeAssist)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>PACKET_PARSER_DECL</name>
      <anchorfile>namespacechannel_1_1Parsers.html</anchorfile>
      <anchor>a88d597b70a6fa94b6a250b945f1174d8</anchor>
      <arglist>(VABox)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>PACKET_PARSER_DECL</name>
      <anchorfile>namespacechannel_1_1Parsers.html</anchorfile>
      <anchor>a008a560eb55e4913d7ed68dc820d62cc</anchor>
      <arglist>(VABoxAdd)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>PACKET_PARSER_DECL</name>
      <anchorfile>namespacechannel_1_1Parsers.html</anchorfile>
      <anchor>ac0a06eff23759d840aa828e9a04c2383</anchor>
      <arglist>(VABoxRemove)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>PACKET_PARSER_DECL</name>
      <anchorfile>namespacechannel_1_1Parsers.html</anchorfile>
      <anchor>a5b82e3a988919d9accf0d458df8108d3</anchor>
      <arglist>(VAChange)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>PACKET_PARSER_DECL</name>
      <anchorfile>namespacechannel_1_1Parsers.html</anchorfile>
      <anchor>ac1e6ed48b3b71ffb5647d7a28c4bb43f</anchor>
      <arglist>(VABoxMove)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>PACKET_PARSER_DECL</name>
      <anchorfile>namespacechannel_1_1Parsers.html</anchorfile>
      <anchor>acd23504aa3bff98882c9cf7831eec6ad</anchor>
      <arglist>(SetWorldInfo)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>PACKET_PARSER_DECL</name>
      <anchorfile>namespacechannel_1_1Parsers.html</anchorfile>
      <anchor>ab78a16424de5a60aa2ef897c08e89a26</anchor>
      <arglist>(SetOtherChannelInfo)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>PACKET_PARSER_DECL</name>
      <anchorfile>namespacechannel_1_1Parsers.html</anchorfile>
      <anchor>ac38153f129a57a21a81a664e89dc80b2</anchor>
      <arglist>(AccountLogin)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>PACKET_PARSER_DECL</name>
      <anchorfile>namespacechannel_1_1Parsers.html</anchorfile>
      <anchor>a461171d09726151f3fe4be69c22c57a1</anchor>
      <arglist>(AccountLogout)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>PACKET_PARSER_DECL</name>
      <anchorfile>namespacechannel_1_1Parsers.html</anchorfile>
      <anchor>a08bc985f943875c19c658b9127b45d3a</anchor>
      <arglist>(Relay)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>PACKET_PARSER_DECL</name>
      <anchorfile>namespacechannel_1_1Parsers.html</anchorfile>
      <anchor>aac63594b1a5d0d8ee9ae1e6b8cca79d3</anchor>
      <arglist>(DataSync)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>PACKET_PARSER_DECL</name>
      <anchorfile>namespacechannel_1_1Parsers.html</anchorfile>
      <anchor>a0d617e7007f87615239e7d3815bbc92c</anchor>
      <arglist>(CharacterLogin)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>PACKET_PARSER_DECL</name>
      <anchorfile>namespacechannel_1_1Parsers.html</anchorfile>
      <anchor>aa3a2b79e975884c97a11d63c2efa7c4c</anchor>
      <arglist>(FriendsUpdate)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>PACKET_PARSER_DECL</name>
      <anchorfile>namespacechannel_1_1Parsers.html</anchorfile>
      <anchor>afc88c91591e8baba78200df88677b777</anchor>
      <arglist>(PartyUpdate)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>PACKET_PARSER_DECL</name>
      <anchorfile>namespacechannel_1_1Parsers.html</anchorfile>
      <anchor>acaf6d73b0dcb020c321c846747e4c37e</anchor>
      <arglist>(ClanUpdate)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>PartnerDemonAISet.cpp</name>
    <path>C:/projects/comp-hack/server/channel/src/packets/game/</path>
    <filename>PartnerDemonAISet_8cpp</filename>
    <includes id="ChannelClientConnection_8h" name="ChannelClientConnection.h" local="yes" imported="no">ChannelClientConnection.h</includes>
    <includes id="ChannelServer_8h" name="ChannelServer.h" local="yes" imported="no">ChannelServer.h</includes>
  </compound>
  <compound kind="file">
    <name>PartnerDemonData.cpp</name>
    <path>C:/projects/comp-hack/server/channel/src/packets/game/</path>
    <filename>PartnerDemonData_8cpp</filename>
    <includes id="ChannelClientConnection_8h" name="ChannelClientConnection.h" local="yes" imported="no">ChannelClientConnection.h</includes>
    <includes id="ChannelServer_8h" name="ChannelServer.h" local="yes" imported="no">ChannelServer.h</includes>
    <includes id="CharacterManager_8h" name="CharacterManager.h" local="yes" imported="no">CharacterManager.h</includes>
    <member kind="function">
      <type>void</type>
      <name>SendPartnerData</name>
      <anchorfile>PartnerDemonData_8cpp.html</anchorfile>
      <anchor>abb17409eeb4ba571829c3e2b5708e6a2</anchor>
      <arglist>(CharacterManager *characterManager, const std::shared_ptr&lt; ChannelClientConnection &gt; client)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>PartnerDemonQuestList.cpp</name>
    <path>C:/projects/comp-hack/server/channel/src/packets/game/</path>
    <filename>PartnerDemonQuestList_8cpp</filename>
    <includes id="ChannelClientConnection_8h" name="ChannelClientConnection.h" local="yes" imported="no">ChannelClientConnection.h</includes>
  </compound>
  <compound kind="file">
    <name>PartnerDemonQuestTemp.cpp</name>
    <path>C:/projects/comp-hack/server/channel/src/packets/game/</path>
    <filename>PartnerDemonQuestTemp_8cpp</filename>
    <includes id="ChannelClientConnection_8h" name="ChannelClientConnection.h" local="yes" imported="no">ChannelClientConnection.h</includes>
  </compound>
  <compound kind="file">
    <name>PartyCancel.cpp</name>
    <path>C:/projects/comp-hack/server/channel/src/packets/game/</path>
    <filename>PartyCancel_8cpp</filename>
    <includes id="ChannelServer_8h" name="ChannelServer.h" local="yes" imported="no">ChannelServer.h</includes>
    <includes id="ManagerConnection_8h" name="ManagerConnection.h" local="yes" imported="no">ManagerConnection.h</includes>
  </compound>
  <compound kind="file">
    <name>PartyDisband.cpp</name>
    <path>C:/projects/comp-hack/server/channel/src/packets/game/</path>
    <filename>PartyDisband_8cpp</filename>
    <includes id="ChannelServer_8h" name="ChannelServer.h" local="yes" imported="no">ChannelServer.h</includes>
    <includes id="ManagerConnection_8h" name="ManagerConnection.h" local="yes" imported="no">ManagerConnection.h</includes>
  </compound>
  <compound kind="file">
    <name>PartyDropRule.cpp</name>
    <path>C:/projects/comp-hack/server/channel/src/packets/game/</path>
    <filename>PartyDropRule_8cpp</filename>
    <includes id="ChannelServer_8h" name="ChannelServer.h" local="yes" imported="no">ChannelServer.h</includes>
    <includes id="ManagerConnection_8h" name="ManagerConnection.h" local="yes" imported="no">ManagerConnection.h</includes>
  </compound>
  <compound kind="file">
    <name>PartyInvite.cpp</name>
    <path>C:/projects/comp-hack/server/channel/src/packets/game/</path>
    <filename>PartyInvite_8cpp</filename>
    <includes id="ChannelServer_8h" name="ChannelServer.h" local="yes" imported="no">ChannelServer.h</includes>
    <includes id="ManagerConnection_8h" name="ManagerConnection.h" local="yes" imported="no">ManagerConnection.h</includes>
  </compound>
  <compound kind="file">
    <name>PartyJoin.cpp</name>
    <path>C:/projects/comp-hack/server/channel/src/packets/game/</path>
    <filename>PartyJoin_8cpp</filename>
    <includes id="ChannelServer_8h" name="ChannelServer.h" local="yes" imported="no">ChannelServer.h</includes>
    <includes id="ManagerConnection_8h" name="ManagerConnection.h" local="yes" imported="no">ManagerConnection.h</includes>
  </compound>
  <compound kind="file">
    <name>PartyKick.cpp</name>
    <path>C:/projects/comp-hack/server/channel/src/packets/game/</path>
    <filename>PartyKick_8cpp</filename>
    <includes id="ChannelServer_8h" name="ChannelServer.h" local="yes" imported="no">ChannelServer.h</includes>
    <includes id="ManagerConnection_8h" name="ManagerConnection.h" local="yes" imported="no">ManagerConnection.h</includes>
  </compound>
  <compound kind="file">
    <name>PartyLeaderUpdate.cpp</name>
    <path>C:/projects/comp-hack/server/channel/src/packets/game/</path>
    <filename>PartyLeaderUpdate_8cpp</filename>
    <includes id="ChannelServer_8h" name="ChannelServer.h" local="yes" imported="no">ChannelServer.h</includes>
    <includes id="ManagerConnection_8h" name="ManagerConnection.h" local="yes" imported="no">ManagerConnection.h</includes>
  </compound>
  <compound kind="file">
    <name>PartyLeave.cpp</name>
    <path>C:/projects/comp-hack/server/channel/src/packets/game/</path>
    <filename>PartyLeave_8cpp</filename>
    <includes id="ChannelServer_8h" name="ChannelServer.h" local="yes" imported="no">ChannelServer.h</includes>
    <includes id="ManagerConnection_8h" name="ManagerConnection.h" local="yes" imported="no">ManagerConnection.h</includes>
  </compound>
  <compound kind="file">
    <name>PartyUpdate.cpp</name>
    <path>C:/projects/comp-hack/server/channel/src/packets/internal/</path>
    <filename>PartyUpdate_8cpp</filename>
    <includes id="ChannelServer_8h" name="ChannelServer.h" local="yes" imported="no">ChannelServer.h</includes>
    <includes id="ManagerConnection_8h" name="ManagerConnection.h" local="yes" imported="no">ManagerConnection.h</includes>
    <includes id="TokuseiManager_8h" name="TokuseiManager.h" local="yes" imported="no">TokuseiManager.h</includes>
    <class kind="struct">PartyMemberInfo</class>
    <member kind="function">
      <type>void</type>
      <name>QueuePartyMemberInfo</name>
      <anchorfile>PartyUpdate_8cpp.html</anchorfile>
      <anchor>a4e25d4dd6a59b43a1e08cb6ec6dad1f1</anchor>
      <arglist>(std::shared_ptr&lt; ChannelClientConnection &gt; client, PartyMemberInfo memberInfo)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>PAttributeDeadline.cpp</name>
    <path>C:/projects/comp-hack/server/channel/src/packets/game/</path>
    <filename>PAttributeDeadline_8cpp</filename>
    <includes id="ChannelServer_8h" name="ChannelServer.h" local="yes" imported="no">ChannelServer.h</includes>
  </compound>
  <compound kind="file">
    <name>Pivot.cpp</name>
    <path>C:/projects/comp-hack/server/channel/src/packets/game/</path>
    <filename>Pivot_8cpp</filename>
    <includes id="ChannelServer_8h" name="ChannelServer.h" local="yes" imported="no">ChannelServer.h</includes>
  </compound>
  <compound kind="file">
    <name>PlasmaEnd.cpp</name>
    <path>C:/projects/comp-hack/server/channel/src/packets/game/</path>
    <filename>PlasmaEnd_8cpp</filename>
    <includes id="ChannelServer_8h" name="ChannelServer.h" local="yes" imported="no">ChannelServer.h</includes>
    <includes id="CharacterManager_8h" name="CharacterManager.h" local="yes" imported="no">CharacterManager.h</includes>
    <includes id="PlasmaState_8h" name="PlasmaState.h" local="yes" imported="no">PlasmaState.h</includes>
    <includes id="ZoneManager_8h" name="ZoneManager.h" local="yes" imported="no">ZoneManager.h</includes>
  </compound>
  <compound kind="file">
    <name>PlasmaItem.cpp</name>
    <path>C:/projects/comp-hack/server/channel/src/packets/game/</path>
    <filename>PlasmaItem_8cpp</filename>
    <includes id="ChannelServer_8h" name="ChannelServer.h" local="yes" imported="no">ChannelServer.h</includes>
    <includes id="CharacterManager_8h" name="CharacterManager.h" local="yes" imported="no">CharacterManager.h</includes>
    <includes id="PlasmaState_8h" name="PlasmaState.h" local="yes" imported="no">PlasmaState.h</includes>
    <includes id="ZoneManager_8h" name="ZoneManager.h" local="yes" imported="no">ZoneManager.h</includes>
  </compound>
  <compound kind="file">
    <name>PlasmaItemData.cpp</name>
    <path>C:/projects/comp-hack/server/channel/src/packets/game/</path>
    <filename>PlasmaItemData_8cpp</filename>
    <includes id="ChannelServer_8h" name="ChannelServer.h" local="yes" imported="no">ChannelServer.h</includes>
    <includes id="CharacterManager_8h" name="CharacterManager.h" local="yes" imported="no">CharacterManager.h</includes>
    <includes id="PlasmaState_8h" name="PlasmaState.h" local="yes" imported="no">PlasmaState.h</includes>
  </compound>
  <compound kind="file">
    <name>PlasmaResult.cpp</name>
    <path>C:/projects/comp-hack/server/channel/src/packets/game/</path>
    <filename>PlasmaResult_8cpp</filename>
    <includes id="ChannelServer_8h" name="ChannelServer.h" local="yes" imported="no">ChannelServer.h</includes>
    <includes id="CharacterManager_8h" name="CharacterManager.h" local="yes" imported="no">CharacterManager.h</includes>
    <includes id="PlasmaState_8h" name="PlasmaState.h" local="yes" imported="no">PlasmaState.h</includes>
    <includes id="ZoneManager_8h" name="ZoneManager.h" local="yes" imported="no">ZoneManager.h</includes>
  </compound>
  <compound kind="file">
    <name>PlasmaStart.cpp</name>
    <path>C:/projects/comp-hack/server/channel/src/packets/game/</path>
    <filename>PlasmaStart_8cpp</filename>
    <includes id="ChannelServer_8h" name="ChannelServer.h" local="yes" imported="no">ChannelServer.h</includes>
    <includes id="CharacterManager_8h" name="CharacterManager.h" local="yes" imported="no">CharacterManager.h</includes>
    <includes id="PlasmaState_8h" name="PlasmaState.h" local="yes" imported="no">PlasmaState.h</includes>
  </compound>
  <compound kind="file">
    <name>PlasmaState.cpp</name>
    <path>C:/projects/comp-hack/server/channel/src/</path>
    <filename>PlasmaState_8cpp</filename>
    <includes id="PlasmaState_8h" name="PlasmaState.h" local="yes" imported="no">PlasmaState.h</includes>
    <includes id="ChannelServer_8h" name="ChannelServer.h" local="yes" imported="no">ChannelServer.h</includes>
  </compound>
  <compound kind="file">
    <name>PlasmaState.h</name>
    <path>C:/projects/comp-hack/server/channel/src/</path>
    <filename>PlasmaState_8h</filename>
    <includes id="EntityState_8h" name="EntityState.h" local="no" imported="no">EntityState.h</includes>
    <class kind="class">channel::PlasmaPoint</class>
    <class kind="class">channel::PlasmaState</class>
    <namespace>channel</namespace>
    <namespace>libcomp</namespace>
    <namespace>objects</namespace>
  </compound>
  <compound kind="file">
    <name>PopulateZone.cpp</name>
    <path>C:/projects/comp-hack/server/channel/src/packets/game/</path>
    <filename>PopulateZone_8cpp</filename>
    <includes id="ChannelClientConnection_8h" name="ChannelClientConnection.h" local="yes" imported="no">ChannelClientConnection.h</includes>
    <includes id="ChannelServer_8h" name="ChannelServer.h" local="yes" imported="no">ChannelServer.h</includes>
    <includes id="ZoneManager_8h" name="ZoneManager.h" local="yes" imported="no">ZoneManager.h</includes>
  </compound>
  <compound kind="file">
    <name>PostItem.cpp</name>
    <path>C:/projects/comp-hack/server/channel/src/packets/game/</path>
    <filename>PostItem_8cpp</filename>
    <includes id="ChannelServer_8h" name="ChannelServer.h" local="yes" imported="no">ChannelServer.h</includes>
    <includes id="CharacterManager_8h" name="CharacterManager.h" local="yes" imported="no">CharacterManager.h</includes>
  </compound>
  <compound kind="file">
    <name>PostList.cpp</name>
    <path>C:/projects/comp-hack/server/channel/src/packets/game/</path>
    <filename>PostList_8cpp</filename>
    <includes id="ChannelServer_8h" name="ChannelServer.h" local="yes" imported="no">ChannelServer.h</includes>
  </compound>
  <compound kind="file">
    <name>PvPCharacterInfo.cpp</name>
    <path>C:/projects/comp-hack/server/channel/src/packets/game/</path>
    <filename>PvPCharacterInfo_8cpp</filename>
    <includes id="ChannelClientConnection_8h" name="ChannelClientConnection.h" local="yes" imported="no">ChannelClientConnection.h</includes>
  </compound>
  <compound kind="file">
    <name>QuestActiveList.cpp</name>
    <path>C:/projects/comp-hack/server/channel/src/packets/game/</path>
    <filename>QuestActiveList_8cpp</filename>
    <includes id="ChannelServer_8h" name="ChannelServer.h" local="yes" imported="no">ChannelServer.h</includes>
    <includes id="EventManager_8h" name="EventManager.h" local="yes" imported="no">EventManager.h</includes>
  </compound>
  <compound kind="file">
    <name>QuestCompletedList.cpp</name>
    <path>C:/projects/comp-hack/server/channel/src/packets/game/</path>
    <filename>QuestCompletedList_8cpp</filename>
    <includes id="ChannelServer_8h" name="ChannelServer.h" local="yes" imported="no">ChannelServer.h</includes>
    <includes id="EventManager_8h" name="EventManager.h" local="yes" imported="no">EventManager.h</includes>
  </compound>
  <compound kind="file">
    <name>Relay.cpp</name>
    <path>C:/projects/comp-hack/server/channel/src/packets/internal/</path>
    <filename>Relay_8cpp</filename>
    <includes id="ChannelServer_8h" name="ChannelServer.h" local="yes" imported="no">ChannelServer.h</includes>
    <includes id="ChatManager_8h" name="ChatManager.h" local="yes" imported="no">ChatManager.h</includes>
    <includes id="ManagerConnection_8h" name="ManagerConnection.h" local="yes" imported="no">ManagerConnection.h</includes>
  </compound>
  <compound kind="file">
    <name>ReviveCharacter.cpp</name>
    <path>C:/projects/comp-hack/server/channel/src/packets/game/</path>
    <filename>ReviveCharacter_8cpp</filename>
    <includes id="ChannelServer_8h" name="ChannelServer.h" local="yes" imported="no">ChannelServer.h</includes>
    <includes id="CharacterManager_8h" name="CharacterManager.h" local="yes" imported="no">CharacterManager.h</includes>
    <includes id="TokuseiManager_8h" name="TokuseiManager.h" local="yes" imported="no">TokuseiManager.h</includes>
    <includes id="ZoneManager_8h" name="ZoneManager.h" local="yes" imported="no">ZoneManager.h</includes>
  </compound>
  <compound kind="file">
    <name>Rotate.cpp</name>
    <path>C:/projects/comp-hack/server/channel/src/packets/game/</path>
    <filename>Rotate_8cpp</filename>
    <includes id="ChannelClientConnection_8h" name="ChannelClientConnection.h" local="yes" imported="no">ChannelClientConnection.h</includes>
    <includes id="ChannelServer_8h" name="ChannelServer.h" local="yes" imported="no">ChannelServer.h</includes>
    <includes id="ClientState_8h" name="ClientState.h" local="yes" imported="no">ClientState.h</includes>
    <includes id="ZoneManager_8h" name="ZoneManager.h" local="yes" imported="no">ZoneManager.h</includes>
  </compound>
  <compound kind="file">
    <name>SearchAppReply.cpp</name>
    <path>C:/projects/comp-hack/server/channel/src/packets/game/</path>
    <filename>SearchAppReply_8cpp</filename>
    <includes id="ChannelServer_8h" name="ChannelServer.h" local="yes" imported="no">ChannelServer.h</includes>
    <includes id="ChannelSyncManager_8h" name="ChannelSyncManager.h" local="yes" imported="no">ChannelSyncManager.h</includes>
    <includes id="ManagerConnection_8h" name="ManagerConnection.h" local="yes" imported="no">ManagerConnection.h</includes>
  </compound>
  <compound kind="file">
    <name>SearchEntryData.cpp</name>
    <path>C:/projects/comp-hack/server/channel/src/packets/game/</path>
    <filename>SearchEntryData_8cpp</filename>
    <includes id="ChannelServer_8h" name="ChannelServer.h" local="yes" imported="no">ChannelServer.h</includes>
    <includes id="ChannelSyncManager_8h" name="ChannelSyncManager.h" local="yes" imported="no">ChannelSyncManager.h</includes>
  </compound>
  <compound kind="file">
    <name>SearchEntryInfo.cpp</name>
    <path>C:/projects/comp-hack/server/channel/src/packets/game/</path>
    <filename>SearchEntryInfo_8cpp</filename>
    <includes id="ChannelServer_8h" name="ChannelServer.h" local="yes" imported="no">ChannelServer.h</includes>
    <includes id="ChannelSyncManager_8h" name="ChannelSyncManager.h" local="yes" imported="no">ChannelSyncManager.h</includes>
  </compound>
  <compound kind="file">
    <name>SearchEntryRegister.cpp</name>
    <path>C:/projects/comp-hack/server/channel/src/packets/game/</path>
    <filename>SearchEntryRegister_8cpp</filename>
    <includes id="ChannelServer_8h" name="ChannelServer.h" local="yes" imported="no">ChannelServer.h</includes>
    <includes id="ChannelSyncManager_8h" name="ChannelSyncManager.h" local="yes" imported="no">ChannelSyncManager.h</includes>
  </compound>
  <compound kind="file">
    <name>SearchEntryRemove.cpp</name>
    <path>C:/projects/comp-hack/server/channel/src/packets/game/</path>
    <filename>SearchEntryRemove_8cpp</filename>
    <includes id="ChannelServer_8h" name="ChannelServer.h" local="yes" imported="no">ChannelServer.h</includes>
    <includes id="ChannelSyncManager_8h" name="ChannelSyncManager.h" local="yes" imported="no">ChannelSyncManager.h</includes>
  </compound>
  <compound kind="file">
    <name>SearchEntrySelf.cpp</name>
    <path>C:/projects/comp-hack/server/channel/src/packets/game/</path>
    <filename>SearchEntrySelf_8cpp</filename>
    <includes id="ChannelServer_8h" name="ChannelServer.h" local="yes" imported="no">ChannelServer.h</includes>
    <includes id="ChannelSyncManager_8h" name="ChannelSyncManager.h" local="yes" imported="no">ChannelSyncManager.h</includes>
  </compound>
  <compound kind="file">
    <name>SearchEntryUpdate.cpp</name>
    <path>C:/projects/comp-hack/server/channel/src/packets/game/</path>
    <filename>SearchEntryUpdate_8cpp</filename>
    <includes id="ChannelServer_8h" name="ChannelServer.h" local="yes" imported="no">ChannelServer.h</includes>
    <includes id="ChannelSyncManager_8h" name="ChannelSyncManager.h" local="yes" imported="no">ChannelSyncManager.h</includes>
  </compound>
  <compound kind="file">
    <name>SearchList.cpp</name>
    <path>C:/projects/comp-hack/server/channel/src/packets/game/</path>
    <filename>SearchList_8cpp</filename>
    <includes id="ChannelServer_8h" name="ChannelServer.h" local="yes" imported="no">ChannelServer.h</includes>
    <includes id="ChannelSyncManager_8h" name="ChannelSyncManager.h" local="yes" imported="no">ChannelSyncManager.h</includes>
  </compound>
  <compound kind="file">
    <name>SendData.cpp</name>
    <path>C:/projects/comp-hack/server/channel/src/packets/game/</path>
    <filename>SendData_8cpp</filename>
    <includes id="ChannelServer_8h" name="ChannelServer.h" local="yes" imported="no">ChannelServer.h</includes>
    <includes id="CharacterManager_8h" name="CharacterManager.h" local="yes" imported="no">CharacterManager.h</includes>
    <includes id="ZoneManager_8h" name="ZoneManager.h" local="yes" imported="no">ZoneManager.h</includes>
    <member kind="function">
      <type>void</type>
      <name>SendClientReadyData</name>
      <anchorfile>SendData_8cpp.html</anchorfile>
      <anchor>a4d40869b7ccab27fb36dcf12b89ffef3</anchor>
      <arglist>(std::shared_ptr&lt; ChannelServer &gt; server, const std::shared_ptr&lt; ChannelClientConnection &gt; client)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>SetOtherChannelInfo.cpp</name>
    <path>C:/projects/comp-hack/server/channel/src/packets/internal/</path>
    <filename>SetOtherChannelInfo_8cpp</filename>
    <includes id="ChannelServer_8h" name="ChannelServer.h" local="yes" imported="no">ChannelServer.h</includes>
  </compound>
  <compound kind="file">
    <name>SetWorldInfo.cpp</name>
    <path>C:/projects/comp-hack/server/channel/src/packets/internal/</path>
    <filename>SetWorldInfo_8cpp</filename>
    <includes id="ChannelServer_8h" name="ChannelServer.h" local="yes" imported="no">ChannelServer.h</includes>
    <includes id="ChannelSyncManager_8h" name="ChannelSyncManager.h" local="yes" imported="no">ChannelSyncManager.h</includes>
    <includes id="ManagerConnection_8h" name="ManagerConnection.h" local="yes" imported="no">ManagerConnection.h</includes>
    <includes id="ZoneManager_8h" name="ZoneManager.h" local="yes" imported="no">ZoneManager.h</includes>
    <member kind="function">
      <type>std::shared_ptr&lt; libcomp::Database &gt;</type>
      <name>ParseDatabase</name>
      <anchorfile>SetWorldInfo_8cpp.html</anchorfile>
      <anchor>ad888f42dfbda001cb3cccd6dc2a4ee79</anchor>
      <arglist>(const std::shared_ptr&lt; ChannelServer &gt; &amp;server, libcomp::ReadOnlyPacket &amp;p)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>SetWorldInfoFromPacket</name>
      <anchorfile>SetWorldInfo_8cpp.html</anchorfile>
      <anchor>ab730b49d6765a03d1d062421184fd736</anchor>
      <arglist>(libcomp::ManagerPacket *pPacketManager, const std::shared_ptr&lt; libcomp::TcpConnection &gt; &amp;connection, libcomp::ReadOnlyPacket &amp;p)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>ShopBuy.cpp</name>
    <path>C:/projects/comp-hack/server/channel/src/packets/game/</path>
    <filename>ShopBuy_8cpp</filename>
    <includes id="ChannelServer_8h" name="ChannelServer.h" local="yes" imported="no">ChannelServer.h</includes>
    <includes id="ChannelSyncManager_8h" name="ChannelSyncManager.h" local="yes" imported="no">ChannelSyncManager.h</includes>
    <includes id="CharacterManager_8h" name="CharacterManager.h" local="yes" imported="no">CharacterManager.h</includes>
    <member kind="function">
      <type>void</type>
      <name>HandleShopPurchase</name>
      <anchorfile>ShopBuy_8cpp.html</anchorfile>
      <anchor>ab61cabece8c933cc8dfea49a2e3bd7e5</anchor>
      <arglist>(const std::shared_ptr&lt; ChannelServer &gt; server, const std::shared_ptr&lt; ChannelClientConnection &gt; client, int32_t shopID, int32_t cacheID, int32_t productID, int32_t quantity)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SendShopPurchaseReply</name>
      <anchorfile>ShopBuy_8cpp.html</anchorfile>
      <anchor>a4fa3002a2dde1717da7ada9c6aa176a5</anchor>
      <arglist>(const std::shared_ptr&lt; ChannelClientConnection &gt; client, int32_t shopID, int32_t productID, int32_t result, bool queue)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>ShopData.cpp</name>
    <path>C:/projects/comp-hack/server/channel/src/packets/game/</path>
    <filename>ShopData_8cpp</filename>
    <includes id="ChannelServer_8h" name="ChannelServer.h" local="yes" imported="no">ChannelServer.h</includes>
  </compound>
  <compound kind="file">
    <name>ShopRepair.cpp</name>
    <path>C:/projects/comp-hack/server/channel/src/packets/game/</path>
    <filename>ShopRepair_8cpp</filename>
    <includes id="ChannelServer_8h" name="ChannelServer.h" local="yes" imported="no">ChannelServer.h</includes>
    <includes id="CharacterManager_8h" name="CharacterManager.h" local="yes" imported="no">CharacterManager.h</includes>
  </compound>
  <compound kind="file">
    <name>ShopSell.cpp</name>
    <path>C:/projects/comp-hack/server/channel/src/packets/game/</path>
    <filename>ShopSell_8cpp</filename>
    <includes id="ChannelServer_8h" name="ChannelServer.h" local="yes" imported="no">ChannelServer.h</includes>
    <includes id="CharacterManager_8h" name="CharacterManager.h" local="yes" imported="no">CharacterManager.h</includes>
    <member kind="function">
      <type>void</type>
      <name>HandleShopSale</name>
      <anchorfile>ShopSell_8cpp.html</anchorfile>
      <anchor>a86fb7c38f0302404b2e7f8ef2836d3f4</anchor>
      <arglist>(const std::shared_ptr&lt; ChannelServer &gt; server, const std::shared_ptr&lt; ChannelClientConnection &gt; client, int32_t shopID, int32_t cacheID, std::list&lt; std::pair&lt; uint32_t, int64_t &gt;&gt; itemsSold)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SendShopSaleReply</name>
      <anchorfile>ShopSell_8cpp.html</anchorfile>
      <anchor>a681efa9fb03612268ce7a729bc4a9ba7</anchor>
      <arglist>(const std::shared_ptr&lt; ChannelClientConnection &gt; client, int32_t shopID, int32_t result, bool queue)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>SkillActivate.cpp</name>
    <path>C:/projects/comp-hack/server/channel/src/packets/game/</path>
    <filename>SkillActivate_8cpp</filename>
    <includes id="ChannelServer_8h" name="ChannelServer.h" local="yes" imported="no">ChannelServer.h</includes>
    <includes id="SkillManager_8h" name="SkillManager.h" local="yes" imported="no">SkillManager.h</includes>
  </compound>
  <compound kind="file">
    <name>SkillCancel.cpp</name>
    <path>C:/projects/comp-hack/server/channel/src/packets/game/</path>
    <filename>SkillCancel_8cpp</filename>
    <includes id="ChannelServer_8h" name="ChannelServer.h" local="yes" imported="no">ChannelServer.h</includes>
    <includes id="SkillManager_8h" name="SkillManager.h" local="yes" imported="no">SkillManager.h</includes>
  </compound>
  <compound kind="file">
    <name>SkillExecute.cpp</name>
    <path>C:/projects/comp-hack/server/channel/src/packets/game/</path>
    <filename>SkillExecute_8cpp</filename>
    <includes id="ChannelServer_8h" name="ChannelServer.h" local="yes" imported="no">ChannelServer.h</includes>
    <includes id="SkillManager_8h" name="SkillManager.h" local="yes" imported="no">SkillManager.h</includes>
  </compound>
  <compound kind="file">
    <name>SkillExecuteInstant.cpp</name>
    <path>C:/projects/comp-hack/server/channel/src/packets/game/</path>
    <filename>SkillExecuteInstant_8cpp</filename>
    <includes id="ChannelServer_8h" name="ChannelServer.h" local="yes" imported="no">ChannelServer.h</includes>
    <includes id="SkillManager_8h" name="SkillManager.h" local="yes" imported="no">SkillManager.h</includes>
  </compound>
  <compound kind="file">
    <name>SkillForget.cpp</name>
    <path>C:/projects/comp-hack/server/channel/src/packets/game/</path>
    <filename>SkillForget_8cpp</filename>
    <includes id="ChannelServer_8h" name="ChannelServer.h" local="yes" imported="no">ChannelServer.h</includes>
    <includes id="CharacterManager_8h" name="CharacterManager.h" local="yes" imported="no">CharacterManager.h</includes>
    <includes id="SkillManager_8h" name="SkillManager.h" local="yes" imported="no">SkillManager.h</includes>
    <includes id="TokuseiManager_8h" name="TokuseiManager.h" local="yes" imported="no">TokuseiManager.h</includes>
  </compound>
  <compound kind="file">
    <name>SkillManager.cpp</name>
    <path>C:/projects/comp-hack/server/channel/src/</path>
    <filename>SkillManager_8cpp</filename>
    <includes id="SkillManager_8h" name="SkillManager.h" local="yes" imported="no">SkillManager.h</includes>
    <includes id="ActionManager_8h" name="ActionManager.h" local="yes" imported="no">ActionManager.h</includes>
    <includes id="ChannelServer_8h" name="ChannelServer.h" local="yes" imported="no">ChannelServer.h</includes>
    <includes id="CharacterManager_8h" name="CharacterManager.h" local="yes" imported="no">CharacterManager.h</includes>
    <includes id="EventManager_8h" name="EventManager.h" local="yes" imported="no">EventManager.h</includes>
    <includes id="ManagerConnection_8h" name="ManagerConnection.h" local="yes" imported="no">ManagerConnection.h</includes>
    <includes id="TokuseiManager_8h" name="TokuseiManager.h" local="yes" imported="no">TokuseiManager.h</includes>
    <includes id="Zone_8h" name="Zone.h" local="yes" imported="no">Zone.h</includes>
    <includes id="ZoneManager_8h" name="ZoneManager.h" local="yes" imported="no">ZoneManager.h</includes>
    <class kind="class">channel::ProcessingSkill</class>
    <class kind="class">channel::SkillTargetResult</class>
    <member kind="variable">
      <type>const uint8_t</type>
      <name>AIL_OFFSET</name>
      <anchorfile>SkillManager_8cpp.html</anchorfile>
      <anchor>a977044bc5dcb3a0f4c109e7bf3c43227</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const uint8_t</type>
      <name>BOOST_OFFSET</name>
      <anchorfile>SkillManager_8cpp.html</anchorfile>
      <anchor>afe5ffcca695591cd21488fe2261b3e54</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const uint8_t</type>
      <name>DAMAGE_TYPE_DRAIN</name>
      <anchorfile>SkillManager_8cpp.html</anchorfile>
      <anchor>a7730f5a108834730aea3e0e79f6413fc</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const uint8_t</type>
      <name>DAMAGE_TYPE_GENERIC</name>
      <anchorfile>SkillManager_8cpp.html</anchorfile>
      <anchor>aa4975ff3cb4beb96878ffca8a2dd8520</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const uint8_t</type>
      <name>DAMAGE_TYPE_HEALING</name>
      <anchorfile>SkillManager_8cpp.html</anchorfile>
      <anchor>a3a172e83ec5aed2810ca224dd809e42a</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const uint8_t</type>
      <name>DAMAGE_TYPE_MISS</name>
      <anchorfile>SkillManager_8cpp.html</anchorfile>
      <anchor>ace4163603484bc918042721e716ab9e9</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const uint8_t</type>
      <name>DAMAGE_TYPE_NONE</name>
      <anchorfile>SkillManager_8cpp.html</anchorfile>
      <anchor>abea0dd75beddfb15c5ec9375b2cb0a2d</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const uint16_t</type>
      <name>FLAG1_ABSORB</name>
      <anchorfile>SkillManager_8cpp.html</anchorfile>
      <anchor>a98c65df18b11a58a40a4c84dcc29a346</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const uint16_t</type>
      <name>FLAG1_BLOCK_MAGIC</name>
      <anchorfile>SkillManager_8cpp.html</anchorfile>
      <anchor>a852963768fc62e8286670ae327bddacc</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const uint16_t</type>
      <name>FLAG1_BLOCK_PHYS</name>
      <anchorfile>SkillManager_8cpp.html</anchorfile>
      <anchor>a124802c748d97fee2b1976e414f1e191</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const uint16_t</type>
      <name>FLAG1_COUNTERED</name>
      <anchorfile>SkillManager_8cpp.html</anchorfile>
      <anchor>a9d38afeb59556235068950db6674c6a7</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const uint16_t</type>
      <name>FLAG1_CRITICAL</name>
      <anchorfile>SkillManager_8cpp.html</anchorfile>
      <anchor>ae7cff4d5b11d5dcbe452fceed050c8e5</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const uint16_t</type>
      <name>FLAG1_DODGED</name>
      <anchorfile>SkillManager_8cpp.html</anchorfile>
      <anchor>a225571eed26c80517c74bfaf6abece01</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const uint16_t</type>
      <name>FLAG1_GUARDED</name>
      <anchorfile>SkillManager_8cpp.html</anchorfile>
      <anchor>aa59fb8d9599e80be86c6cba290a82c20</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const uint16_t</type>
      <name>FLAG1_KNOCKBACK</name>
      <anchorfile>SkillManager_8cpp.html</anchorfile>
      <anchor>aea7f8295a6aa091f1ac3c9eb35fe3c1c</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const uint16_t</type>
      <name>FLAG1_LETHAL</name>
      <anchorfile>SkillManager_8cpp.html</anchorfile>
      <anchor>ae4c1bd7860dc4a112b46e74892ec19ac</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const uint16_t</type>
      <name>FLAG1_PROTECT</name>
      <anchorfile>SkillManager_8cpp.html</anchorfile>
      <anchor>aa40e80175e0091dcccf51b9b91d463c3</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const uint16_t</type>
      <name>FLAG1_REFLECT_MAGIC</name>
      <anchorfile>SkillManager_8cpp.html</anchorfile>
      <anchor>ac019d189baae8b1bdcb1a6487f0a5f4c</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const uint16_t</type>
      <name>FLAG1_REFLECT_PHYS</name>
      <anchorfile>SkillManager_8cpp.html</anchorfile>
      <anchor>a98d7d4e5a70bcc5c1bda2d8074ed3fb9</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const uint16_t</type>
      <name>FLAG1_REVIVAL</name>
      <anchorfile>SkillManager_8cpp.html</anchorfile>
      <anchor>af17c8b961efd25ae8473ff74dcae781e</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const uint16_t</type>
      <name>FLAG1_RUSH_MOVEMENT</name>
      <anchorfile>SkillManager_8cpp.html</anchorfile>
      <anchor>a8e770e70fee143ac307a5f00c549584a</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const uint16_t</type>
      <name>FLAG1_WEAKPOINT</name>
      <anchorfile>SkillManager_8cpp.html</anchorfile>
      <anchor>a31e4ac87316b87387db771cc7f78c17f</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const uint16_t</type>
      <name>FLAG2_BARRIER</name>
      <anchorfile>SkillManager_8cpp.html</anchorfile>
      <anchor>a7e3689cfea7b71dc1929760552f3f17b</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const uint16_t</type>
      <name>FLAG2_IMPOSSIBLE</name>
      <anchorfile>SkillManager_8cpp.html</anchorfile>
      <anchor>a7bcecf0081cbb4b67056df95b794e64c</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const uint16_t</type>
      <name>FLAG2_INSTANT_DEATH</name>
      <anchorfile>SkillManager_8cpp.html</anchorfile>
      <anchor>a5477b994e4ca8fe5431084eb1b68bfb3</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const uint16_t</type>
      <name>FLAG2_INTENSIVE_BREAK</name>
      <anchorfile>SkillManager_8cpp.html</anchorfile>
      <anchor>aaceca4dc4e8cff17f57740c82f0e7a81</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const uint16_t</type>
      <name>FLAG2_LIMIT_BREAK</name>
      <anchorfile>SkillManager_8cpp.html</anchorfile>
      <anchor>a1fa320df0bd1e6e8074c236ce7b3ffeb</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const uint8_t</type>
      <name>NRA_OFFSET</name>
      <anchorfile>SkillManager_8cpp.html</anchorfile>
      <anchor>a485bfa66c7e75373401438412e7e06b3</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const uint8_t</type>
      <name>RES_OFFSET</name>
      <anchorfile>SkillManager_8cpp.html</anchorfile>
      <anchor>a4f0b4728bb96f11ab637a677b9633013</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const uint8_t</type>
      <name>TALK_GIVE_ITEM</name>
      <anchorfile>SkillManager_8cpp.html</anchorfile>
      <anchor>a642f4c69260075efae64e01b7b3246ba</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const uint8_t</type>
      <name>TALK_GIVE_ITEM_2</name>
      <anchorfile>SkillManager_8cpp.html</anchorfile>
      <anchor>a25da54c90c4c6b0a8676e7cba651d2bd</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const uint8_t</type>
      <name>TALK_JOIN</name>
      <anchorfile>SkillManager_8cpp.html</anchorfile>
      <anchor>a2aba8c31a425e0b52d70920be7cf9ae2</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const uint8_t</type>
      <name>TALK_JOIN_2</name>
      <anchorfile>SkillManager_8cpp.html</anchorfile>
      <anchor>a42691bfc2b0e1675a9c0135367eb35e0</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const uint8_t</type>
      <name>TALK_LEAVE</name>
      <anchorfile>SkillManager_8cpp.html</anchorfile>
      <anchor>a9e6b29af87ad4664f142f6cc482a9a72</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const uint8_t</type>
      <name>TALK_REJECT</name>
      <anchorfile>SkillManager_8cpp.html</anchorfile>
      <anchor>a1cc192d3d469b913b83ca2c4c9fb6244</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const uint8_t</type>
      <name>TALK_RESPONSE_1</name>
      <anchorfile>SkillManager_8cpp.html</anchorfile>
      <anchor>ad32fa6b92e7cb7f9ac046a149c4f5461</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const uint8_t</type>
      <name>TALK_RESPONSE_4</name>
      <anchorfile>SkillManager_8cpp.html</anchorfile>
      <anchor>aef9fd3c480d9fde67d23393868807f28</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>SkillManager.h</name>
    <path>C:/projects/comp-hack/server/channel/src/</path>
    <filename>SkillManager_8h</filename>
    <includes id="ChannelClientConnection_8h" name="ChannelClientConnection.h" local="yes" imported="no">ChannelClientConnection.h</includes>
    <class kind="class">channel::SkillExecutionContext</class>
    <class kind="class">channel::SkillManager</class>
    <namespace>channel</namespace>
    <namespace>objects</namespace>
  </compound>
  <compound kind="file">
    <name>SpotTriggered.cpp</name>
    <path>C:/projects/comp-hack/server/channel/src/packets/game/</path>
    <filename>SpotTriggered_8cpp</filename>
    <includes id="ActionManager_8h" name="ActionManager.h" local="yes" imported="no">ActionManager.h</includes>
    <includes id="ChannelServer_8h" name="ChannelServer.h" local="yes" imported="no">ChannelServer.h</includes>
    <includes id="ZoneManager_8h" name="ZoneManager.h" local="yes" imported="no">ZoneManager.h</includes>
    <class kind="class">ActionListB</class>
  </compound>
  <compound kind="file">
    <name>State.cpp</name>
    <path>C:/projects/comp-hack/server/channel/src/packets/game/</path>
    <filename>State_8cpp</filename>
    <includes id="ChannelServer_8h" name="ChannelServer.h" local="yes" imported="no">ChannelServer.h</includes>
    <includes id="CharacterManager_8h" name="CharacterManager.h" local="yes" imported="no">CharacterManager.h</includes>
    <includes id="ManagerConnection_8h" name="ManagerConnection.h" local="yes" imported="no">ManagerConnection.h</includes>
    <includes id="TokuseiManager_8h" name="TokuseiManager.h" local="yes" imported="no">TokuseiManager.h</includes>
    <member kind="function">
      <type>void</type>
      <name>SendStateData</name>
      <anchorfile>State_8cpp.html</anchorfile>
      <anchor>a5d72fe6d2cdaa07a518165696dc50a04</anchor>
      <arglist>(std::shared_ptr&lt; ChannelServer &gt; server, const std::shared_ptr&lt; ChannelClientConnection &gt; client)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>StopMovement.cpp</name>
    <path>C:/projects/comp-hack/server/channel/src/packets/game/</path>
    <filename>StopMovement_8cpp</filename>
    <includes id="ChannelClientConnection_8h" name="ChannelClientConnection.h" local="yes" imported="no">ChannelClientConnection.h</includes>
    <includes id="ChannelServer_8h" name="ChannelServer.h" local="yes" imported="no">ChannelServer.h</includes>
    <includes id="ZoneManager_8h" name="ZoneManager.h" local="yes" imported="no">ZoneManager.h</includes>
  </compound>
  <compound kind="file">
    <name>Sync.cpp</name>
    <path>C:/projects/comp-hack/server/channel/src/packets/game/</path>
    <filename>Sync_8cpp</filename>
    <includes id="ChannelServer_8h" name="ChannelServer.h" local="yes" imported="no">ChannelServer.h</includes>
  </compound>
  <compound kind="file">
    <name>SyncCharacter.cpp</name>
    <path>C:/projects/comp-hack/server/channel/src/packets/game/</path>
    <filename>SyncCharacter_8cpp</filename>
    <includes id="ChannelServer_8h" name="ChannelServer.h" local="yes" imported="no">ChannelServer.h</includes>
    <includes id="ZoneManager_8h" name="ZoneManager.h" local="yes" imported="no">ZoneManager.h</includes>
  </compound>
  <compound kind="file">
    <name>TeamInfo.cpp</name>
    <path>C:/projects/comp-hack/server/channel/src/packets/game/</path>
    <filename>TeamInfo_8cpp</filename>
    <includes id="ChannelClientConnection_8h" name="ChannelClientConnection.h" local="yes" imported="no">ChannelClientConnection.h</includes>
  </compound>
  <compound kind="file">
    <name>Tell.cpp</name>
    <path>C:/projects/comp-hack/server/channel/src/packets/game/</path>
    <filename>Tell_8cpp</filename>
    <includes id="ChannelServer_8h" name="ChannelServer.h" local="yes" imported="no">ChannelServer.h</includes>
    <includes id="ChatManager_8h" name="ChatManager.h" local="yes" imported="no">ChatManager.h</includes>
  </compound>
  <compound kind="file">
    <name>TitleList.cpp</name>
    <path>C:/projects/comp-hack/server/channel/src/packets/game/</path>
    <filename>TitleList_8cpp</filename>
    <includes id="ChannelClientConnection_8h" name="ChannelClientConnection.h" local="yes" imported="no">ChannelClientConnection.h</includes>
  </compound>
  <compound kind="file">
    <name>ToggleExpertise.cpp</name>
    <path>C:/projects/comp-hack/server/channel/src/packets/game/</path>
    <filename>ToggleExpertise_8cpp</filename>
    <includes id="ChannelServer_8h" name="ChannelServer.h" local="yes" imported="no">ChannelServer.h</includes>
  </compound>
  <compound kind="file">
    <name>TokuseiManager.cpp</name>
    <path>C:/projects/comp-hack/server/channel/src/</path>
    <filename>TokuseiManager_8cpp</filename>
    <includes id="TokuseiManager_8h" name="TokuseiManager.h" local="yes" imported="no">TokuseiManager.h</includes>
    <includes id="ChannelClientConnection_8h" name="ChannelClientConnection.h" local="yes" imported="no">ChannelClientConnection.h</includes>
    <includes id="ChannelServer_8h" name="ChannelServer.h" local="yes" imported="no">ChannelServer.h</includes>
    <includes id="CharacterManager_8h" name="CharacterManager.h" local="yes" imported="no">CharacterManager.h</includes>
    <includes id="ManagerConnection_8h" name="ManagerConnection.h" local="yes" imported="no">ManagerConnection.h</includes>
    <includes id="Zone_8h" name="Zone.h" local="yes" imported="no">Zone.h</includes>
  </compound>
  <compound kind="file">
    <name>TokuseiManager.h</name>
    <path>C:/projects/comp-hack/server/channel/src/</path>
    <filename>TokuseiManager_8h</filename>
    <includes id="ActiveEntityState_8h" name="ActiveEntityState.h" local="yes" imported="no">ActiveEntityState.h</includes>
    <class kind="class">channel::TokuseiManager</class>
    <namespace>channel</namespace>
    <namespace>objects</namespace>
    <member kind="typedef">
      <type>objects::TokuseiAspect::Type_t</type>
      <name>TokuseiAspectType</name>
      <anchorfile>TokuseiManager_8h.html</anchorfile>
      <anchor>a1cf8c17d48412771a8682a6b3d68da8f</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>objects::TokuseiCondition::Type_t</type>
      <name>TokuseiConditionType</name>
      <anchorfile>TokuseiManager_8h.html</anchorfile>
      <anchor>afde026119313264915f0693e650573f3</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>objects::TokuseiSkillCondition::SkillConditionType_t</type>
      <name>TokuseiSkillConditionType</name>
      <anchorfile>TokuseiManager_8h.html</anchorfile>
      <anchor>a308a094af07dcede67470e991fad48a0</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>TradeAccept.cpp</name>
    <path>C:/projects/comp-hack/server/channel/src/packets/game/</path>
    <filename>TradeAccept_8cpp</filename>
    <includes id="ChannelServer_8h" name="ChannelServer.h" local="yes" imported="no">ChannelServer.h</includes>
    <includes id="CharacterManager_8h" name="CharacterManager.h" local="yes" imported="no">CharacterManager.h</includes>
    <includes id="ClientState_8h" name="ClientState.h" local="yes" imported="no">ClientState.h</includes>
    <includes id="ManagerConnection_8h" name="ManagerConnection.h" local="yes" imported="no">ManagerConnection.h</includes>
  </compound>
  <compound kind="file">
    <name>TradeAddItem.cpp</name>
    <path>C:/projects/comp-hack/server/channel/src/packets/game/</path>
    <filename>TradeAddItem_8cpp</filename>
    <includes id="ChannelServer_8h" name="ChannelServer.h" local="yes" imported="no">ChannelServer.h</includes>
    <includes id="CharacterManager_8h" name="CharacterManager.h" local="yes" imported="no">CharacterManager.h</includes>
    <includes id="ClientState_8h" name="ClientState.h" local="yes" imported="no">ClientState.h</includes>
    <includes id="ManagerConnection_8h" name="ManagerConnection.h" local="yes" imported="no">ManagerConnection.h</includes>
  </compound>
  <compound kind="file">
    <name>TradeCancel.cpp</name>
    <path>C:/projects/comp-hack/server/channel/src/packets/game/</path>
    <filename>TradeCancel_8cpp</filename>
    <includes id="ChannelServer_8h" name="ChannelServer.h" local="yes" imported="no">ChannelServer.h</includes>
    <includes id="CharacterManager_8h" name="CharacterManager.h" local="yes" imported="no">CharacterManager.h</includes>
    <includes id="ClientState_8h" name="ClientState.h" local="yes" imported="no">ClientState.h</includes>
    <includes id="ManagerConnection_8h" name="ManagerConnection.h" local="yes" imported="no">ManagerConnection.h</includes>
  </compound>
  <compound kind="file">
    <name>TradeFinish.cpp</name>
    <path>C:/projects/comp-hack/server/channel/src/packets/game/</path>
    <filename>TradeFinish_8cpp</filename>
    <includes id="ChannelServer_8h" name="ChannelServer.h" local="yes" imported="no">ChannelServer.h</includes>
    <includes id="CharacterManager_8h" name="CharacterManager.h" local="yes" imported="no">CharacterManager.h</includes>
    <includes id="ClientState_8h" name="ClientState.h" local="yes" imported="no">ClientState.h</includes>
    <includes id="ManagerConnection_8h" name="ManagerConnection.h" local="yes" imported="no">ManagerConnection.h</includes>
  </compound>
  <compound kind="file">
    <name>TradeLock.cpp</name>
    <path>C:/projects/comp-hack/server/channel/src/packets/game/</path>
    <filename>TradeLock_8cpp</filename>
    <includes id="ChannelServer_8h" name="ChannelServer.h" local="yes" imported="no">ChannelServer.h</includes>
    <includes id="CharacterManager_8h" name="CharacterManager.h" local="yes" imported="no">CharacterManager.h</includes>
    <includes id="ClientState_8h" name="ClientState.h" local="yes" imported="no">ClientState.h</includes>
    <includes id="ManagerConnection_8h" name="ManagerConnection.h" local="yes" imported="no">ManagerConnection.h</includes>
  </compound>
  <compound kind="file">
    <name>TradeRequest.cpp</name>
    <path>C:/projects/comp-hack/server/channel/src/packets/game/</path>
    <filename>TradeRequest_8cpp</filename>
    <includes id="ChannelServer_8h" name="ChannelServer.h" local="yes" imported="no">ChannelServer.h</includes>
    <includes id="ClientState_8h" name="ClientState.h" local="yes" imported="no">ClientState.h</includes>
    <includes id="ManagerConnection_8h" name="ManagerConnection.h" local="yes" imported="no">ManagerConnection.h</includes>
  </compound>
  <compound kind="file">
    <name>TriFusionAccept.cpp</name>
    <path>C:/projects/comp-hack/server/channel/src/packets/game/</path>
    <filename>TriFusionAccept_8cpp</filename>
    <includes id="ChannelServer_8h" name="ChannelServer.h" local="yes" imported="no">ChannelServer.h</includes>
    <includes id="FusionManager_8h" name="FusionManager.h" local="yes" imported="no">FusionManager.h</includes>
    <includes id="ManagerConnection_8h" name="ManagerConnection.h" local="yes" imported="no">ManagerConnection.h</includes>
  </compound>
  <compound kind="file">
    <name>TriFusionDemonUpdate.cpp</name>
    <path>C:/projects/comp-hack/server/channel/src/packets/game/</path>
    <filename>TriFusionDemonUpdate_8cpp</filename>
    <includes id="ChannelServer_8h" name="ChannelServer.h" local="yes" imported="no">ChannelServer.h</includes>
    <includes id="CharacterManager_8h" name="CharacterManager.h" local="yes" imported="no">CharacterManager.h</includes>
    <includes id="FusionManager_8h" name="FusionManager.h" local="yes" imported="no">FusionManager.h</includes>
    <includes id="ManagerConnection_8h" name="ManagerConnection.h" local="yes" imported="no">ManagerConnection.h</includes>
  </compound>
  <compound kind="file">
    <name>TriFusionJoin.cpp</name>
    <path>C:/projects/comp-hack/server/channel/src/packets/game/</path>
    <filename>TriFusionJoin_8cpp</filename>
    <includes id="ChannelServer_8h" name="ChannelServer.h" local="yes" imported="no">ChannelServer.h</includes>
    <includes id="ManagerConnection_8h" name="ManagerConnection.h" local="yes" imported="no">ManagerConnection.h</includes>
  </compound>
  <compound kind="file">
    <name>TriFusionLeave.cpp</name>
    <path>C:/projects/comp-hack/server/channel/src/packets/game/</path>
    <filename>TriFusionLeave_8cpp</filename>
    <includes id="ChannelServer_8h" name="ChannelServer.h" local="yes" imported="no">ChannelServer.h</includes>
    <includes id="CharacterManager_8h" name="CharacterManager.h" local="yes" imported="no">CharacterManager.h</includes>
  </compound>
  <compound kind="file">
    <name>TriFusionRewardAccept.cpp</name>
    <path>C:/projects/comp-hack/server/channel/src/packets/game/</path>
    <filename>TriFusionRewardAccept_8cpp</filename>
    <includes id="ChannelServer_8h" name="ChannelServer.h" local="yes" imported="no">ChannelServer.h</includes>
    <includes id="ManagerConnection_8h" name="ManagerConnection.h" local="yes" imported="no">ManagerConnection.h</includes>
  </compound>
  <compound kind="file">
    <name>TriFusionRewardUpdate.cpp</name>
    <path>C:/projects/comp-hack/server/channel/src/packets/game/</path>
    <filename>TriFusionRewardUpdate_8cpp</filename>
    <includes id="ChannelServer_8h" name="ChannelServer.h" local="yes" imported="no">ChannelServer.h</includes>
    <includes id="CharacterManager_8h" name="CharacterManager.h" local="yes" imported="no">CharacterManager.h</includes>
    <includes id="ManagerConnection_8h" name="ManagerConnection.h" local="yes" imported="no">ManagerConnection.h</includes>
  </compound>
  <compound kind="file">
    <name>TriFusionSolo.cpp</name>
    <path>C:/projects/comp-hack/server/channel/src/packets/game/</path>
    <filename>TriFusionSolo_8cpp</filename>
    <includes id="ChannelServer_8h" name="ChannelServer.h" local="yes" imported="no">ChannelServer.h</includes>
    <includes id="FusionManager_8h" name="FusionManager.h" local="yes" imported="no">FusionManager.h</includes>
  </compound>
  <compound kind="file">
    <name>UnionFlag.cpp</name>
    <path>C:/projects/comp-hack/server/channel/src/packets/game/</path>
    <filename>UnionFlag_8cpp</filename>
    <includes id="ChannelServer_8h" name="ChannelServer.h" local="yes" imported="no">ChannelServer.h</includes>
    <includes id="CharacterManager_8h" name="CharacterManager.h" local="yes" imported="no">CharacterManager.h</includes>
  </compound>
  <compound kind="file">
    <name>Unsupported.cpp</name>
    <path>C:/projects/comp-hack/server/channel/src/packets/game/</path>
    <filename>Unsupported_8cpp</filename>
  </compound>
  <compound kind="file">
    <name>UpdateDemonSkill.cpp</name>
    <path>C:/projects/comp-hack/server/channel/src/packets/game/</path>
    <filename>UpdateDemonSkill_8cpp</filename>
    <includes id="ChannelServer_8h" name="ChannelServer.h" local="yes" imported="no">ChannelServer.h</includes>
    <includes id="CharacterManager_8h" name="CharacterManager.h" local="yes" imported="no">CharacterManager.h</includes>
    <includes id="TokuseiManager_8h" name="TokuseiManager.h" local="yes" imported="no">TokuseiManager.h</includes>
    <member kind="function">
      <type>void</type>
      <name>DemonSkillUpdate</name>
      <anchorfile>UpdateDemonSkill_8cpp.html</anchorfile>
      <anchor>a89539b632dfc25fbab685d3ca60f94b7</anchor>
      <arglist>(const std::shared_ptr&lt; ChannelServer &gt; server, const std::shared_ptr&lt; ChannelClientConnection &gt; client, int32_t entityID, int8_t skillSlot, uint32_t skillID)</arglist>
    </member>
    <member kind="variable">
      <type>const int8_t</type>
      <name>ACTION_LEARN_ACQUIRED</name>
      <anchorfile>UpdateDemonSkill_8cpp.html</anchorfile>
      <anchor>ac6c65b501ae9880f18bdf94845f850c3</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const int8_t</type>
      <name>ACTION_LEARN_INHERITED</name>
      <anchorfile>UpdateDemonSkill_8cpp.html</anchorfile>
      <anchor>a41609d95197476f81f85b98b5f608ac0</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const int8_t</type>
      <name>ACTION_MOVE</name>
      <anchorfile>UpdateDemonSkill_8cpp.html</anchorfile>
      <anchor>a1809abc00fae8880f54b9d50974a17c8</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>VABox.cpp</name>
    <path>C:/projects/comp-hack/server/channel/src/packets/game/</path>
    <filename>VABox_8cpp</filename>
    <includes id="ChannelClientConnection_8h" name="ChannelClientConnection.h" local="yes" imported="no">ChannelClientConnection.h</includes>
    <includes id="ChannelServer_8h" name="ChannelServer.h" local="yes" imported="no">ChannelServer.h</includes>
  </compound>
  <compound kind="file">
    <name>VABoxAdd.cpp</name>
    <path>C:/projects/comp-hack/server/channel/src/packets/game/</path>
    <filename>VABoxAdd_8cpp</filename>
    <includes id="ChannelServer_8h" name="ChannelServer.h" local="yes" imported="no">ChannelServer.h</includes>
    <includes id="CharacterManager_8h" name="CharacterManager.h" local="yes" imported="no">CharacterManager.h</includes>
  </compound>
  <compound kind="file">
    <name>VABoxMove.cpp</name>
    <path>C:/projects/comp-hack/server/channel/src/packets/game/</path>
    <filename>VABoxMove_8cpp</filename>
    <includes id="ChannelServer_8h" name="ChannelServer.h" local="yes" imported="no">ChannelServer.h</includes>
  </compound>
  <compound kind="file">
    <name>VABoxRemove.cpp</name>
    <path>C:/projects/comp-hack/server/channel/src/packets/game/</path>
    <filename>VABoxRemove_8cpp</filename>
    <includes id="ChannelServer_8h" name="ChannelServer.h" local="yes" imported="no">ChannelServer.h</includes>
    <includes id="ZoneManager_8h" name="ZoneManager.h" local="yes" imported="no">ZoneManager.h</includes>
  </compound>
  <compound kind="file">
    <name>VAChange.cpp</name>
    <path>C:/projects/comp-hack/server/channel/src/packets/game/</path>
    <filename>VAChange_8cpp</filename>
    <includes id="ChannelServer_8h" name="ChannelServer.h" local="yes" imported="no">ChannelServer.h</includes>
    <includes id="ZoneManager_8h" name="ZoneManager.h" local="yes" imported="no">ZoneManager.h</includes>
  </compound>
  <compound kind="file">
    <name>ValuableList.cpp</name>
    <path>C:/projects/comp-hack/server/channel/src/packets/game/</path>
    <filename>ValuableList_8cpp</filename>
    <includes id="ChannelServer_8h" name="ChannelServer.h" local="yes" imported="no">ChannelServer.h</includes>
    <includes id="CharacterManager_8h" name="CharacterManager.h" local="yes" imported="no">CharacterManager.h</includes>
  </compound>
  <compound kind="file">
    <name>Warp.cpp</name>
    <path>C:/projects/comp-hack/server/channel/src/packets/game/</path>
    <filename>Warp_8cpp</filename>
    <includes id="ChannelServer_8h" name="ChannelServer.h" local="yes" imported="no">ChannelServer.h</includes>
    <includes id="CharacterManager_8h" name="CharacterManager.h" local="yes" imported="no">CharacterManager.h</includes>
    <includes id="SkillManager_8h" name="SkillManager.h" local="yes" imported="no">SkillManager.h</includes>
    <includes id="ZoneManager_8h" name="ZoneManager.h" local="yes" imported="no">ZoneManager.h</includes>
  </compound>
  <compound kind="file">
    <name>WorldClock.cpp</name>
    <path>C:/projects/comp-hack/server/channel/src/</path>
    <filename>WorldClock_8cpp</filename>
    <includes id="WorldClock_8h" name="WorldClock.h" local="yes" imported="no">WorldClock.h</includes>
  </compound>
  <compound kind="file">
    <name>WorldClock.h</name>
    <path>C:/projects/comp-hack/server/channel/src/</path>
    <filename>WorldClock_8h</filename>
    <class kind="class">channel::WorldClock</class>
    <class kind="class">channel::WorldClockTime</class>
    <namespace>channel</namespace>
  </compound>
  <compound kind="file">
    <name>WorldTime.cpp</name>
    <path>C:/projects/comp-hack/server/channel/src/packets/game/</path>
    <filename>WorldTime_8cpp</filename>
    <includes id="ChannelServer_8h" name="ChannelServer.h" local="yes" imported="no">ChannelServer.h</includes>
  </compound>
  <compound kind="file">
    <name>Zone.cpp</name>
    <path>C:/projects/comp-hack/server/channel/src/</path>
    <filename>Zone_8cpp</filename>
    <includes id="Zone_8h" name="Zone.h" local="yes" imported="no">Zone.h</includes>
    <includes id="PlasmaState_8h" name="PlasmaState.h" local="no" imported="no">PlasmaState.h</includes>
    <includes id="ChannelServer_8h" name="ChannelServer.h" local="yes" imported="no">ChannelServer.h</includes>
    <includes id="WorldClock_8h" name="WorldClock.h" local="yes" imported="no">WorldClock.h</includes>
    <includes id="ZoneInstance_8h" name="ZoneInstance.h" local="yes" imported="no">ZoneInstance.h</includes>
    <namespace>libcomp</namespace>
  </compound>
  <compound kind="file">
    <name>Zone.h</name>
    <path>C:/projects/comp-hack/server/channel/src/</path>
    <filename>Zone_8h</filename>
    <includes id="ActiveEntityState_8h" name="ActiveEntityState.h" local="yes" imported="no">ActiveEntityState.h</includes>
    <includes id="BazaarState_8h" name="BazaarState.h" local="yes" imported="no">BazaarState.h</includes>
    <includes id="ChannelClientConnection_8h" name="ChannelClientConnection.h" local="yes" imported="no">ChannelClientConnection.h</includes>
    <includes id="EnemyState_8h" name="EnemyState.h" local="yes" imported="no">EnemyState.h</includes>
    <includes id="EntityState_8h" name="EntityState.h" local="yes" imported="no">EntityState.h</includes>
    <includes id="ZoneGeometry_8h" name="ZoneGeometry.h" local="yes" imported="no">ZoneGeometry.h</includes>
    <class kind="class">channel::Zone</class>
    <namespace>channel</namespace>
    <namespace>objects</namespace>
    <member kind="typedef">
      <type>EntityState&lt; objects::LootBox &gt;</type>
      <name>LootBoxState</name>
      <anchorfile>namespacechannel.html</anchorfile>
      <anchor>aadc2bf0d64180781705024f660526389</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>EntityState&lt; objects::ServerNPC &gt;</type>
      <name>NPCState</name>
      <anchorfile>namespacechannel.html</anchorfile>
      <anchor>afb0d4aa49728994544c41bf8d1a1e02e</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>EntityState&lt; objects::ServerObject &gt;</type>
      <name>ServerObjectState</name>
      <anchorfile>namespacechannel.html</anchorfile>
      <anchor>a36a16a9dd9ae96bf5268513b9ce86c8e</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>ZoneGeometry.cpp</name>
    <path>C:/projects/comp-hack/server/channel/src/</path>
    <filename>ZoneGeometry_8cpp</filename>
    <includes id="ZoneGeometry_8h" name="ZoneGeometry.h" local="yes" imported="no">ZoneGeometry.h</includes>
  </compound>
  <compound kind="file">
    <name>ZoneGeometry.h</name>
    <path>C:/projects/comp-hack/server/channel/src/</path>
    <filename>ZoneGeometry_8h</filename>
    <class kind="class">channel::DynamicMap</class>
    <class kind="class">channel::Line</class>
    <class kind="class">channel::Point</class>
    <class kind="class">channel::ZoneGeometry</class>
    <class kind="class">channel::ZoneQmpShape</class>
    <class kind="class">channel::ZoneShape</class>
    <class kind="class">channel::ZoneSpotShape</class>
    <namespace>channel</namespace>
    <namespace>objects</namespace>
  </compound>
  <compound kind="file">
    <name>ZoneInstance.cpp</name>
    <path>C:/projects/comp-hack/server/channel/src/</path>
    <filename>ZoneInstance_8cpp</filename>
    <includes id="ZoneInstance_8h" name="ZoneInstance.h" local="yes" imported="no">ZoneInstance.h</includes>
    <namespace>libcomp</namespace>
  </compound>
  <compound kind="file">
    <name>ZoneInstance.h</name>
    <path>C:/projects/comp-hack/server/channel/src/</path>
    <filename>ZoneInstance_8h</filename>
    <includes id="Zone_8h" name="Zone.h" local="yes" imported="no">Zone.h</includes>
    <class kind="class">channel::ZoneInstance</class>
    <namespace>channel</namespace>
    <namespace>objects</namespace>
  </compound>
  <compound kind="file">
    <name>ZoneManager.cpp</name>
    <path>C:/projects/comp-hack/server/channel/src/</path>
    <filename>ZoneManager_8cpp</filename>
    <includes id="ZoneManager_8h" name="ZoneManager.h" local="yes" imported="no">ZoneManager.h</includes>
    <includes id="ActionManager_8h" name="ActionManager.h" local="yes" imported="no">ActionManager.h</includes>
    <includes id="AIManager_8h" name="AIManager.h" local="yes" imported="no">AIManager.h</includes>
    <includes id="AIState_8h" name="AIState.h" local="yes" imported="no">AIState.h</includes>
    <includes id="ChannelServer_8h" name="ChannelServer.h" local="yes" imported="no">ChannelServer.h</includes>
    <includes id="CharacterManager_8h" name="CharacterManager.h" local="yes" imported="no">CharacterManager.h</includes>
    <includes id="ManagerConnection_8h" name="ManagerConnection.h" local="yes" imported="no">ManagerConnection.h</includes>
    <includes id="PlasmaState_8h" name="PlasmaState.h" local="yes" imported="no">PlasmaState.h</includes>
    <includes id="TokuseiManager_8h" name="TokuseiManager.h" local="yes" imported="no">TokuseiManager.h</includes>
    <includes id="Zone_8h" name="Zone.h" local="yes" imported="no">Zone.h</includes>
    <includes id="ZoneInstance_8h" name="ZoneInstance.h" local="yes" imported="no">ZoneInstance.h</includes>
  </compound>
  <compound kind="file">
    <name>ZoneManager.h</name>
    <path>C:/projects/comp-hack/server/channel/src/</path>
    <filename>ZoneManager_8h</filename>
    <includes id="ChannelClientConnection_8h" name="ChannelClientConnection.h" local="yes" imported="no">ChannelClientConnection.h</includes>
    <includes id="Zone_8h" name="Zone.h" local="yes" imported="no">Zone.h</includes>
    <includes id="ZoneGeometry_8h" name="ZoneGeometry.h" local="yes" imported="no">ZoneGeometry.h</includes>
    <includes id="ZoneInstance_8h" name="ZoneInstance.h" local="yes" imported="no">ZoneInstance.h</includes>
    <class kind="class">channel::ZoneManager</class>
    <namespace>channel</namespace>
    <namespace>libcomp</namespace>
    <namespace>objects</namespace>
  </compound>
  <compound kind="class">
    <name>channel::AccountManager</name>
    <filename>classchannel_1_1AccountManager.html</filename>
    <member kind="function">
      <type></type>
      <name>AccountManager</name>
      <anchorfile>classchannel_1_1AccountManager.html</anchorfile>
      <anchor>a3f11cff6727eee92f9c7e77bc29d94dd</anchor>
      <arglist>(const std::weak_ptr&lt; ChannelServer &gt; &amp;server)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~AccountManager</name>
      <anchorfile>classchannel_1_1AccountManager.html</anchorfile>
      <anchor>aa62da7e8bf796004171eb77fd32a81af</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>Authenticate</name>
      <anchorfile>classchannel_1_1AccountManager.html</anchorfile>
      <anchor>ae5347feb980ef454c870cd3dc23ad7e6</anchor>
      <arglist>(const std::shared_ptr&lt; channel::ChannelClientConnection &gt; &amp;client)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>HandleLoginRequest</name>
      <anchorfile>classchannel_1_1AccountManager.html</anchorfile>
      <anchor>ac0ddf1d4cfcb0305f57394c8319a4bc9</anchor>
      <arglist>(const std::shared_ptr&lt; channel::ChannelClientConnection &gt; &amp;client, const libcomp::String &amp;username, uint32_t sessionKey)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>HandleLoginResponse</name>
      <anchorfile>classchannel_1_1AccountManager.html</anchorfile>
      <anchor>a9225d3ddd8415e4ba3d5b57c884d9fdf</anchor>
      <arglist>(const std::shared_ptr&lt; channel::ChannelClientConnection &gt; &amp;client)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>HandleLogoutRequest</name>
      <anchorfile>classchannel_1_1AccountManager.html</anchorfile>
      <anchor>aa8a760754d45e0f606080109c07495a0</anchor>
      <arglist>(const std::shared_ptr&lt; channel::ChannelClientConnection &gt; &amp;client, LogoutCode_t code, uint8_t channelIdx=0)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>IncreaseCP</name>
      <anchorfile>classchannel_1_1AccountManager.html</anchorfile>
      <anchor>a2e5e62d9183e63add2376f89da3efd79</anchor>
      <arglist>(const std::shared_ptr&lt; objects::Account &gt; &amp;account, int64_t addAmount)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>Logout</name>
      <anchorfile>classchannel_1_1AccountManager.html</anchorfile>
      <anchor>afbc2d10a8b71ec57bffcdb97314885f7</anchor>
      <arglist>(const std::shared_ptr&lt; channel::ChannelClientConnection &gt; &amp;client, bool delay=false)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SendCPBalance</name>
      <anchorfile>classchannel_1_1AccountManager.html</anchorfile>
      <anchor>a00f889f928b8780c4ca630e9120578ca</anchor>
      <arglist>(const std::shared_ptr&lt; channel::ChannelClientConnection &gt; &amp;client)</arglist>
    </member>
    <member kind="function" protection="private">
      <type>bool</type>
      <name>InitializeCharacter</name>
      <anchorfile>classchannel_1_1AccountManager.html</anchorfile>
      <anchor>affad9a9ee35550c200b4905c799e5135</anchor>
      <arglist>(libcomp::ObjectReference&lt; objects::Character &gt; &amp;character, channel::ClientState *state)</arglist>
    </member>
    <member kind="function" protection="private">
      <type>bool</type>
      <name>InitializeNewCharacter</name>
      <anchorfile>classchannel_1_1AccountManager.html</anchorfile>
      <anchor>a5e3e043fc1adb9ffad4ff4c91803e0ee</anchor>
      <arglist>(std::shared_ptr&lt; objects::Character &gt; character)</arglist>
    </member>
    <member kind="function" protection="private">
      <type>bool</type>
      <name>LogoutCharacter</name>
      <anchorfile>classchannel_1_1AccountManager.html</anchorfile>
      <anchor>a7768e5fbe7b954f0ca7a0ef9510ea1e0</anchor>
      <arglist>(channel::ClientState *state)</arglist>
    </member>
    <member kind="variable" protection="private">
      <type>std::weak_ptr&lt; ChannelServer &gt;</type>
      <name>mServer</name>
      <anchorfile>classchannel_1_1AccountManager.html</anchorfile>
      <anchor>ace050d5a3c50d2e77ad4ed1377edfbaa</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>channel::ActionContext</name>
    <filename>structchannel_1_1ActionContext.html</filename>
    <member kind="variable">
      <type>std::shared_ptr&lt; objects::Action &gt;</type>
      <name>Action</name>
      <anchorfile>structchannel_1_1ActionContext.html</anchorfile>
      <anchor>a040d4c4451782eb1e6c93eb9fae87ba9</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>std::shared_ptr&lt; ChannelClientConnection &gt;</type>
      <name>Client</name>
      <anchorfile>structchannel_1_1ActionContext.html</anchorfile>
      <anchor>abe2e007cc2547736f55f0a1c7bded47b</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>std::shared_ptr&lt; Zone &gt;</type>
      <name>CurrentZone</name>
      <anchorfile>structchannel_1_1ActionContext.html</anchorfile>
      <anchor>a953e23ee40c399263f18899672a9a813</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>uint32_t</type>
      <name>GroupID</name>
      <anchorfile>structchannel_1_1ActionContext.html</anchorfile>
      <anchor>a816a32a56f772915f36f767f61105bcc</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int32_t</type>
      <name>SourceEntityID</name>
      <anchorfile>structchannel_1_1ActionContext.html</anchorfile>
      <anchor>a95edeed795b4ef4526dbb968005964cd</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>ActionList</name>
    <filename>classActionList.html</filename>
    <member kind="variable">
      <type>std::list&lt; std::shared_ptr&lt; objects::Action &gt; &gt;</type>
      <name>actions</name>
      <anchorfile>classActionList.html</anchorfile>
      <anchor>aff790f200d00ac2f9da5cf117398de7e</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int32_t</type>
      <name>sourceEntityID</name>
      <anchorfile>classActionList.html</anchorfile>
      <anchor>a33029ff468b8fb659c93eb9b98498c40</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>ActionListB</name>
    <filename>classActionListB.html</filename>
    <member kind="variable">
      <type>std::list&lt; std::shared_ptr&lt; objects::Action &gt; &gt;</type>
      <name>actions</name>
      <anchorfile>classActionListB.html</anchorfile>
      <anchor>ac5882239762c81dc18911e125f3478bc</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>channel::ActionManager</name>
    <filename>classchannel_1_1ActionManager.html</filename>
    <member kind="function">
      <type></type>
      <name>ActionManager</name>
      <anchorfile>classchannel_1_1ActionManager.html</anchorfile>
      <anchor>a3cfa89abb9ea4acb637d74667dd1f4d8</anchor>
      <arglist>(const std::weak_ptr&lt; ChannelServer &gt; &amp;server)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~ActionManager</name>
      <anchorfile>classchannel_1_1ActionManager.html</anchorfile>
      <anchor>ac80d3d645622551a98db65a649abe079</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>PerformActions</name>
      <anchorfile>classchannel_1_1ActionManager.html</anchorfile>
      <anchor>a9490ef91db3d77e59c860ba25459f830</anchor>
      <arglist>(const std::shared_ptr&lt; ChannelClientConnection &gt; &amp;client, const std::list&lt; std::shared_ptr&lt; objects::Action &gt;&gt; &amp;actions, int32_t sourceEntityID, const std::shared_ptr&lt; Zone &gt; &amp;zone=nullptr, uint32_t groupID=0)</arglist>
    </member>
    <member kind="function" protection="private">
      <type>bool</type>
      <name>AddRemoveItems</name>
      <anchorfile>classchannel_1_1ActionManager.html</anchorfile>
      <anchor>a1a4fe51f96aab5daa71c925bf588e805</anchor>
      <arglist>(ActionContext &amp;ctx)</arglist>
    </member>
    <member kind="function" protection="private">
      <type>bool</type>
      <name>AddRemoveStatus</name>
      <anchorfile>classchannel_1_1ActionManager.html</anchorfile>
      <anchor>aafe1c12e96b140ed32761152da5cd9c0</anchor>
      <arglist>(ActionContext &amp;ctx)</arglist>
    </member>
    <member kind="function" protection="private">
      <type>bool</type>
      <name>CreateLoot</name>
      <anchorfile>classchannel_1_1ActionManager.html</anchorfile>
      <anchor>a5feb1d2157cf31f58ca3cda200f08154</anchor>
      <arglist>(ActionContext &amp;ctx)</arglist>
    </member>
    <member kind="function" protection="private">
      <type>bool</type>
      <name>DisplayMessage</name>
      <anchorfile>classchannel_1_1ActionManager.html</anchorfile>
      <anchor>af95e783a2b240e1f7c1b4a07b1dd6891</anchor>
      <arglist>(ActionContext &amp;ctx)</arglist>
    </member>
    <member kind="function" protection="private">
      <type>bool</type>
      <name>GrantSkills</name>
      <anchorfile>classchannel_1_1ActionManager.html</anchorfile>
      <anchor>ab30fb1ed6f27fd220d704641b65bd9d7</anchor>
      <arglist>(ActionContext &amp;ctx)</arglist>
    </member>
    <member kind="function" protection="private">
      <type>bool</type>
      <name>GrantXP</name>
      <anchorfile>classchannel_1_1ActionManager.html</anchorfile>
      <anchor>aa9dad00ccdac1849a84bb6e28953ae8b</anchor>
      <arglist>(ActionContext &amp;ctx)</arglist>
    </member>
    <member kind="function" protection="private">
      <type>bool</type>
      <name>PlayBGM</name>
      <anchorfile>classchannel_1_1ActionManager.html</anchorfile>
      <anchor>aa63591bcbb5afa65da4078541a8c9a0e</anchor>
      <arglist>(ActionContext &amp;ctx)</arglist>
    </member>
    <member kind="function" protection="private">
      <type>bool</type>
      <name>PlaySoundEffect</name>
      <anchorfile>classchannel_1_1ActionManager.html</anchorfile>
      <anchor>acc803393a1172989e944e8e5ac80911e</anchor>
      <arglist>(ActionContext &amp;ctx)</arglist>
    </member>
    <member kind="function" protection="private">
      <type>bool</type>
      <name>SetHomepoint</name>
      <anchorfile>classchannel_1_1ActionManager.html</anchorfile>
      <anchor>a41ad59d6c2327a7fbf3f359757043b2c</anchor>
      <arglist>(ActionContext &amp;ctx)</arglist>
    </member>
    <member kind="function" protection="private">
      <type>bool</type>
      <name>SetNPCState</name>
      <anchorfile>classchannel_1_1ActionManager.html</anchorfile>
      <anchor>af907cf12270477b7cb48bd0fe353e181</anchor>
      <arglist>(ActionContext &amp;ctx)</arglist>
    </member>
    <member kind="function" protection="private">
      <type>bool</type>
      <name>Spawn</name>
      <anchorfile>classchannel_1_1ActionManager.html</anchorfile>
      <anchor>a3f933d580a0b6a5c294b5a7f7384a68a</anchor>
      <arglist>(ActionContext &amp;ctx)</arglist>
    </member>
    <member kind="function" protection="private">
      <type>bool</type>
      <name>SpecialDirection</name>
      <anchorfile>classchannel_1_1ActionManager.html</anchorfile>
      <anchor>a74dbe103c7e709f99246ae66fee05def</anchor>
      <arglist>(ActionContext &amp;ctx)</arglist>
    </member>
    <member kind="function" protection="private">
      <type>bool</type>
      <name>StageEffect</name>
      <anchorfile>classchannel_1_1ActionManager.html</anchorfile>
      <anchor>aa5cf34c7bd649612f75744d75243d9ac</anchor>
      <arglist>(ActionContext &amp;ctx)</arglist>
    </member>
    <member kind="function" protection="private">
      <type>bool</type>
      <name>StartEvent</name>
      <anchorfile>classchannel_1_1ActionManager.html</anchorfile>
      <anchor>a3b69f595d809e3983594a12440b3e98b</anchor>
      <arglist>(ActionContext &amp;ctx)</arglist>
    </member>
    <member kind="function" protection="private">
      <type>bool</type>
      <name>UpdateCOMP</name>
      <anchorfile>classchannel_1_1ActionManager.html</anchorfile>
      <anchor>a563a779e10a2b918602ae88404a131cf</anchor>
      <arglist>(ActionContext &amp;ctx)</arglist>
    </member>
    <member kind="function" protection="private">
      <type>bool</type>
      <name>UpdateFlag</name>
      <anchorfile>classchannel_1_1ActionManager.html</anchorfile>
      <anchor>a663bf4348cb29bc8b102cc478c812db3</anchor>
      <arglist>(ActionContext &amp;ctx)</arglist>
    </member>
    <member kind="function" protection="private">
      <type>bool</type>
      <name>UpdateLNC</name>
      <anchorfile>classchannel_1_1ActionManager.html</anchorfile>
      <anchor>a2732666fd66322d10ac067d22559325d</anchor>
      <arglist>(ActionContext &amp;ctx)</arglist>
    </member>
    <member kind="function" protection="private">
      <type>bool</type>
      <name>UpdatePoints</name>
      <anchorfile>classchannel_1_1ActionManager.html</anchorfile>
      <anchor>afd595de5db06e74b5602c29e9ef56984</anchor>
      <arglist>(ActionContext &amp;ctx)</arglist>
    </member>
    <member kind="function" protection="private">
      <type>bool</type>
      <name>UpdateQuest</name>
      <anchorfile>classchannel_1_1ActionManager.html</anchorfile>
      <anchor>a07ab860edd2cb76da7db3f2a111ec8a3</anchor>
      <arglist>(ActionContext &amp;ctx)</arglist>
    </member>
    <member kind="function" protection="private">
      <type>bool</type>
      <name>UpdateZoneFlags</name>
      <anchorfile>classchannel_1_1ActionManager.html</anchorfile>
      <anchor>a8723857a62ff382c86507d106b18909b</anchor>
      <arglist>(ActionContext &amp;ctx)</arglist>
    </member>
    <member kind="function" protection="private">
      <type>bool</type>
      <name>UpdateZoneInstance</name>
      <anchorfile>classchannel_1_1ActionManager.html</anchorfile>
      <anchor>aeaac431fd6ef2a77acdbd6b4c62f17e4</anchor>
      <arglist>(ActionContext &amp;ctx)</arglist>
    </member>
    <member kind="function" protection="private">
      <type>bool</type>
      <name>ZoneChange</name>
      <anchorfile>classchannel_1_1ActionManager.html</anchorfile>
      <anchor>a001f8967603f9649cf4566dcc7a8e9b8</anchor>
      <arglist>(ActionContext &amp;ctx)</arglist>
    </member>
    <member kind="variable" protection="private">
      <type>libcomp::EnumMap&lt; objects::Action::ActionType_t, std::function&lt; bool(ActionManager &amp;, ActionContext &amp;)&gt; &gt;</type>
      <name>mActionHandlers</name>
      <anchorfile>classchannel_1_1ActionManager.html</anchorfile>
      <anchor>a8ea5c0be014b3a6b09922bde4c8f676f</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>std::weak_ptr&lt; ChannelServer &gt;</type>
      <name>mServer</name>
      <anchorfile>classchannel_1_1ActionManager.html</anchorfile>
      <anchor>aec55776647ee50624af32cc2dc7dce47</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>channel::ActiveEntityState</name>
    <filename>classchannel_1_1ActiveEntityState.html</filename>
    <member kind="function">
      <type></type>
      <name>ActiveEntityState</name>
      <anchorfile>classchannel_1_1ActiveEntityState.html</anchorfile>
      <anchor>a005c58b0a1a9cc6d4cf33072314e29dc</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>ActiveEntityState</name>
      <anchorfile>classchannel_1_1ActiveEntityState.html</anchorfile>
      <anchor>a6545bb6fb1972d45c76aa28e0723ca35</anchor>
      <arglist>(const ActiveEntityState &amp;other)</arglist>
    </member>
    <member kind="function">
      <type>size_t</type>
      <name>AddRemoveOpponent</name>
      <anchorfile>classchannel_1_1ActiveEntityState.html</anchorfile>
      <anchor>ae1945edacc9db9dd0c0b8fc57ef0ba5a</anchor>
      <arglist>(bool add, int32_t opponentID)</arglist>
    </member>
    <member kind="function">
      <type>std::set&lt; uint32_t &gt;</type>
      <name>AddStatusEffects</name>
      <anchorfile>classchannel_1_1ActiveEntityState.html</anchorfile>
      <anchor>a66bf7fb8d7cd4587e53b9f51128857f2</anchor>
      <arglist>(const AddStatusEffectMap &amp;effects, libcomp::DefinitionManager *definitionManager, uint32_t now=0, bool queueChanges=true)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>CanAct</name>
      <anchorfile>classchannel_1_1ActiveEntityState.html</anchorfile>
      <anchor>ae18bb9a1c3476876a23040c08b5ce37a</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>CancelStatusEffects</name>
      <anchorfile>classchannel_1_1ActiveEntityState.html</anchorfile>
      <anchor>affba706127bff8c636e153cb69c29910</anchor>
      <arglist>(uint8_t cancelFlags)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>CanMove</name>
      <anchorfile>classchannel_1_1ActiveEntityState.html</anchorfile>
      <anchor>af56db75ec5333f4d99949f271c6a38de</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>ExpireStatusEffects</name>
      <anchorfile>classchannel_1_1ActiveEntityState.html</anchorfile>
      <anchor>a513eb93dd9e9b3d8956459355bc08a98</anchor>
      <arglist>(const std::set&lt; uint32_t &gt; &amp;effectTypes)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>ExpireStatusTimes</name>
      <anchorfile>classchannel_1_1ActiveEntityState.html</anchorfile>
      <anchor>a209bb96b9316bf12724e0a48891acc97</anchor>
      <arglist>(uint64_t now)</arglist>
    </member>
    <member kind="function">
      <type>uint64_t</type>
      <name>GetActionTime</name>
      <anchorfile>classchannel_1_1ActiveEntityState.html</anchorfile>
      <anchor>a66d0c35bb1d4ee3e361fafb02fcf629a</anchor>
      <arglist>(const libcomp::String &amp;action)</arglist>
    </member>
    <member kind="function">
      <type>std::shared_ptr&lt; channel::AIState &gt;</type>
      <name>GetAIState</name>
      <anchorfile>classchannel_1_1ActiveEntityState.html</anchorfile>
      <anchor>a7683912a1ff2b1a5dd162b5441a7dcc5</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual std::set&lt; uint32_t &gt;</type>
      <name>GetAllSkills</name>
      <anchorfile>classchannel_1_1ActiveEntityState.html</anchorfile>
      <anchor>a2d6d36cbc13f6afee27eac6ad1545a2e</anchor>
      <arglist>(libcomp::DefinitionManager *definitionManager, bool includeTokusei)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual std::shared_ptr&lt; objects::EntityStats &gt;</type>
      <name>GetCoreStats</name>
      <anchorfile>classchannel_1_1ActiveEntityState.html</anchorfile>
      <anchor>a0bae772edcb18a6edf81681b0331dd25</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>int16_t</type>
      <name>GetCorrectValue</name>
      <anchorfile>classchannel_1_1ActiveEntityState.html</anchorfile>
      <anchor>aa960f7643649ac1fc26d8baef048f5df</anchor>
      <arglist>(CorrectTbl tableID, std::shared_ptr&lt; objects::CalculatedEntityState &gt; calcState=nullptr)</arglist>
    </member>
    <member kind="function">
      <type>std::list&lt; std::pair&lt; std::shared_ptr&lt; objects::StatusEffect &gt;, uint32_t &gt; &gt;</type>
      <name>GetCurrentStatusEffectStates</name>
      <anchorfile>classchannel_1_1ActiveEntityState.html</anchorfile>
      <anchor>a9364c47b242a5691d9500504c2a3e2f8</anchor>
      <arglist>(libcomp::DefinitionManager *definitionManager, uint32_t now=0)</arglist>
    </member>
    <member kind="function">
      <type>float</type>
      <name>GetDistance</name>
      <anchorfile>classchannel_1_1ActiveEntityState.html</anchorfile>
      <anchor>a38d4d0eba28e2c3dec7bee89df6c244a</anchor>
      <arglist>(float x, float y, bool squared=false)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual const libobjgen::UUID</type>
      <name>GetEntityUUID</name>
      <anchorfile>classchannel_1_1ActiveEntityState.html</anchorfile>
      <anchor>acef6b10c4095a4b2d0ed8b5f3ff94a5b</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual uint8_t</type>
      <name>GetLNCType</name>
      <anchorfile>classchannel_1_1ActiveEntityState.html</anchorfile>
      <anchor>ae1582e47b378c99a62134ebd97b68d3b</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>float</type>
      <name>GetMovementSpeed</name>
      <anchorfile>classchannel_1_1ActiveEntityState.html</anchorfile>
      <anchor>a3a11050fb65a386e982332da21db2c87</anchor>
      <arglist>(bool altSpeed=false)</arglist>
    </member>
    <member kind="function">
      <type>int8_t</type>
      <name>GetNextActivatedAbilityID</name>
      <anchorfile>classchannel_1_1ActiveEntityState.html</anchorfile>
      <anchor>a3d841d6660fa605b5ca4f5628ec0c667</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>int16_t</type>
      <name>GetNRAChance</name>
      <anchorfile>classchannel_1_1ActiveEntityState.html</anchorfile>
      <anchor>ac468fcaa3b7dd039c9924d1ef55e880a</anchor>
      <arglist>(uint8_t nraIdx, CorrectTbl type, std::shared_ptr&lt; objects::CalculatedEntityState &gt; calcState=nullptr)</arglist>
    </member>
    <member kind="function">
      <type>std::set&lt; int32_t &gt;</type>
      <name>GetOpponentIDs</name>
      <anchorfile>classchannel_1_1ActiveEntityState.html</anchorfile>
      <anchor>a28eb0b46ea358d21487b2f855ef3bfd3</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>const std::unordered_map&lt; uint32_t, std::shared_ptr&lt; objects::StatusEffect &gt; &gt; &amp;</type>
      <name>GetStatusEffects</name>
      <anchorfile>classchannel_1_1ActiveEntityState.html</anchorfile>
      <anchor>af08840e2fef8a61e0737b61a85bb9c20</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>std::shared_ptr&lt; Zone &gt;</type>
      <name>GetZone</name>
      <anchorfile>classchannel_1_1ActiveEntityState.html</anchorfile>
      <anchor>ab75cc6f82b822318ec0816b6ccebd30a</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>HasOpponent</name>
      <anchorfile>classchannel_1_1ActiveEntityState.html</anchorfile>
      <anchor>ad2260cd031d413d44dd727a014cffc8a</anchor>
      <arglist>(int32_t opponentID=0)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>IsAlive</name>
      <anchorfile>classchannel_1_1ActiveEntityState.html</anchorfile>
      <anchor>ab6edd9f3b8abd577890af858d5dc85dc</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>IsLNCType</name>
      <anchorfile>classchannel_1_1ActiveEntityState.html</anchorfile>
      <anchor>ae897ad90fe5cb5f505f2de5a0da374c7</anchor>
      <arglist>(uint8_t lncType, bool invertFlag)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>IsMoving</name>
      <anchorfile>classchannel_1_1ActiveEntityState.html</anchorfile>
      <anchor>aa86a6658fd24aeafde4b18c0c97d0433</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>IsRotating</name>
      <anchorfile>classchannel_1_1ActiveEntityState.html</anchorfile>
      <anchor>af995e3c25687f8b2692dc523f08c04b1</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>Move</name>
      <anchorfile>classchannel_1_1ActiveEntityState.html</anchorfile>
      <anchor>ae83be0aeee9a600a99286fc1db8fc8d1</anchor>
      <arglist>(float xPos, float yPos, uint64_t now)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>PopEffectTicks</name>
      <anchorfile>classchannel_1_1ActiveEntityState.html</anchorfile>
      <anchor>a0539c15041b0ac7c49aa586f4b28eceb</anchor>
      <arglist>(libcomp::DefinitionManager *definitionManager, uint32_t time, int32_t &amp;hpTDamage, int32_t &amp;mpTDamage, std::set&lt; uint32_t &gt; &amp;added, std::set&lt; uint32_t &gt; &amp;updated, std::set&lt; uint32_t &gt; &amp;removed)</arglist>
    </member>
    <member kind="function">
      <type>std::set&lt; uint8_t &gt;</type>
      <name>PopNRAShields</name>
      <anchorfile>classchannel_1_1ActiveEntityState.html</anchorfile>
      <anchor>aa40113ab2ad642f5a232f1807dcaca76</anchor>
      <arglist>(const std::list&lt; CorrectTbl &gt; &amp;types)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual bool</type>
      <name>Ready</name>
      <anchorfile>classchannel_1_1ActiveEntityState.html</anchorfile>
      <anchor>a1f03eb29a5e6c720d5eb4b1d82b79e66</anchor>
      <arglist>(bool ignoreDisplayState=false)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual bool</type>
      <name>RecalcDisabledSkills</name>
      <anchorfile>classchannel_1_1ActiveEntityState.html</anchorfile>
      <anchor>a59bfa238a72ef7535e35ebfd356c60d8</anchor>
      <arglist>(libcomp::DefinitionManager *definitionManager)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual uint8_t</type>
      <name>RecalculateStats</name>
      <anchorfile>classchannel_1_1ActiveEntityState.html</anchorfile>
      <anchor>a655ff2c1dfbc2b1393874c226a7d5c15</anchor>
      <arglist>(libcomp::DefinitionManager *definitionManager, std::shared_ptr&lt; objects::CalculatedEntityState &gt; calcState=nullptr)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>RefreshCurrentPosition</name>
      <anchorfile>classchannel_1_1ActiveEntityState.html</anchorfile>
      <anchor>ad58ca1704077c66eae6e6cfa5f93d137</anchor>
      <arglist>(uint64_t now)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>RefreshKnockback</name>
      <anchorfile>classchannel_1_1ActiveEntityState.html</anchorfile>
      <anchor>ad61a7487707c26af826391961d0fd7a5</anchor>
      <arglist>(uint64_t now, float recoveryBoost)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>Rotate</name>
      <anchorfile>classchannel_1_1ActiveEntityState.html</anchorfile>
      <anchor>ae22c1b7e0c0ff0217bf4d5d255e4db13</anchor>
      <arglist>(float rot, uint64_t now)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetActionTime</name>
      <anchorfile>classchannel_1_1ActiveEntityState.html</anchorfile>
      <anchor>a5eca26bba7bcac79034d2adfa7f584f7</anchor>
      <arglist>(const libcomp::String &amp;action, uint64_t time)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetAIState</name>
      <anchorfile>classchannel_1_1ActiveEntityState.html</anchorfile>
      <anchor>a23f9604c12ecf053dab3cb4511c7a624</anchor>
      <arglist>(const std::shared_ptr&lt; channel::AIState &gt; &amp;aiState)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>SetHPMP</name>
      <anchorfile>classchannel_1_1ActiveEntityState.html</anchorfile>
      <anchor>a6616f760c961b349baf3b81d0bea31dc</anchor>
      <arglist>(int32_t hp, int32_t mp, bool adjust, bool canOverflow=false)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>SetHPMP</name>
      <anchorfile>classchannel_1_1ActiveEntityState.html</anchorfile>
      <anchor>a7c6d6218e677353ee81718c7a821be17</anchor>
      <arglist>(int32_t hp, int32_t mp, bool adjust, bool canOverflow, int32_t clenchChance, int32_t &amp;hpAdjusted, int32_t &amp;mpAdjusted)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetStatusEffects</name>
      <anchorfile>classchannel_1_1ActiveEntityState.html</anchorfile>
      <anchor>abc6fe40cb7d3047ea41b17ff76c3f7df</anchor>
      <arglist>(const std::list&lt; std::shared_ptr&lt; objects::StatusEffect &gt;&gt; &amp;effects)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetStatusEffectsActive</name>
      <anchorfile>classchannel_1_1ActiveEntityState.html</anchorfile>
      <anchor>ad037282b3c14165da135e4205658a951</anchor>
      <arglist>(bool activate, libcomp::DefinitionManager *definitionManager, uint32_t now=0)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetZone</name>
      <anchorfile>classchannel_1_1ActiveEntityState.html</anchorfile>
      <anchor>a30007b72d6e529ca1bb069a699f4ed31</anchor>
      <arglist>(const std::shared_ptr&lt; Zone &gt; &amp;zone, bool updatePrevious=true)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>SkillAvailable</name>
      <anchorfile>classchannel_1_1ActiveEntityState.html</anchorfile>
      <anchor>a7aaf79e1f896744447d2db61abb9c9ec</anchor>
      <arglist>(uint32_t skillID)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>Stop</name>
      <anchorfile>classchannel_1_1ActiveEntityState.html</anchorfile>
      <anchor>a2cad211a8af9bca5239ab9f7579f3120</anchor>
      <arglist>(uint64_t now)</arglist>
    </member>
    <member kind="function">
      <type>float</type>
      <name>UpdateKnockback</name>
      <anchorfile>classchannel_1_1ActiveEntityState.html</anchorfile>
      <anchor>ab4c9670f327a31be928b619b000110d4</anchor>
      <arglist>(uint64_t now, float decrease, float recoveryBoost)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static float</type>
      <name>CorrectRotation</name>
      <anchorfile>classchannel_1_1ActiveEntityState.html</anchorfile>
      <anchor>a2d02b85123163c97fd1e593eb514640b</anchor>
      <arglist>(float rot)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>ActivateStatusEffect</name>
      <anchorfile>classchannel_1_1ActiveEntityState.html</anchorfile>
      <anchor>a002f85b0ac7e3213d13cce85ae1a5b1c</anchor>
      <arglist>(const std::shared_ptr&lt; objects::StatusEffect &gt; &amp;effect, libcomp::DefinitionManager *definitionManager, uint32_t now, bool timeOnly)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>AdjustStats</name>
      <anchorfile>classchannel_1_1ActiveEntityState.html</anchorfile>
      <anchor>a318eb1d9febb3704d218b14cde573230</anchor>
      <arglist>(const std::list&lt; std::shared_ptr&lt; objects::MiCorrectTbl &gt;&gt; &amp;adjustments, libcomp::EnumMap&lt; CorrectTbl, int16_t &gt; &amp;stats, std::shared_ptr&lt; objects::CalculatedEntityState &gt; calcState, bool baseMode)</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>BaseStatsCalculated</name>
      <anchorfile>classchannel_1_1ActiveEntityState.html</anchorfile>
      <anchor>aa348c1deb923b21e640c586dbfc35506</anchor>
      <arglist>(libcomp::DefinitionManager *definitionManager, std::shared_ptr&lt; objects::CalculatedEntityState &gt; calcState, libcomp::EnumMap&lt; CorrectTbl, int16_t &gt; &amp;stats, std::list&lt; std::shared_ptr&lt; objects::MiCorrectTbl &gt;&gt; &amp;adjustments)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>uint8_t</type>
      <name>CalculateLNCType</name>
      <anchorfile>classchannel_1_1ActiveEntityState.html</anchorfile>
      <anchor>a34960657093fd4872631e886df4998e2</anchor>
      <arglist>(int16_t lncPoints) const </arglist>
    </member>
    <member kind="function" protection="protected">
      <type>uint8_t</type>
      <name>CompareAndResetStats</name>
      <anchorfile>classchannel_1_1ActiveEntityState.html</anchorfile>
      <anchor>a3441ec808c0da0ebddb044fce70b52d4</anchor>
      <arglist>(libcomp::EnumMap&lt; CorrectTbl, int16_t &gt; &amp;stats, int32_t extraHP=0)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>GetAdditionalCorrectTbls</name>
      <anchorfile>classchannel_1_1ActiveEntityState.html</anchorfile>
      <anchor>af5fda23fe92a4383277c28073712d106</anchor>
      <arglist>(libcomp::DefinitionManager *definitionManager, std::shared_ptr&lt; objects::CalculatedEntityState &gt; calcState, std::list&lt; std::shared_ptr&lt; objects::MiCorrectTbl &gt;&gt; &amp;adjustments)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>uint32_t</type>
      <name>GetCurrentExpiration</name>
      <anchorfile>classchannel_1_1ActiveEntityState.html</anchorfile>
      <anchor>af93288af34867c22340a7da9f699b2fc</anchor>
      <arglist>(const std::shared_ptr&lt; objects::StatusEffect &gt; &amp;effect, libcomp::DefinitionManager *definitionManager, uint32_t nextTime, uint32_t now)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>std::set&lt; uint32_t &gt;</type>
      <name>GetEffectiveTokuseiSkills</name>
      <anchorfile>classchannel_1_1ActiveEntityState.html</anchorfile>
      <anchor>af5d0540419e8c3d02bb6485603c81133</anchor>
      <arglist>(libcomp::DefinitionManager *definitionManager)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>uint8_t</type>
      <name>RecalculateDemonStats</name>
      <anchorfile>classchannel_1_1ActiveEntityState.html</anchorfile>
      <anchor>aa116a03fff76b59e8577b87cb6070365</anchor>
      <arglist>(libcomp::DefinitionManager *definitionManager, std::shared_ptr&lt; objects::CalculatedEntityState &gt; calcState)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>RegisterNextEffectTime</name>
      <anchorfile>classchannel_1_1ActiveEntityState.html</anchorfile>
      <anchor>abb971ac4a2f29be3a316a5e12a4b51bb</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>RemoveInactiveSwitchSkills</name>
      <anchorfile>classchannel_1_1ActiveEntityState.html</anchorfile>
      <anchor>a7b31da8ab8cf7529a93ae5ab43d8e6cb</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>RemoveStatusEffects</name>
      <anchorfile>classchannel_1_1ActiveEntityState.html</anchorfile>
      <anchor>af048315581b26430c0dc62d15d5078dc</anchor>
      <arglist>(const std::set&lt; uint32_t &gt; &amp;effectTypes)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>SetNextEffectTime</name>
      <anchorfile>classchannel_1_1ActiveEntityState.html</anchorfile>
      <anchor>af9d56a631bf512f8ac22671e78fb3864</anchor>
      <arglist>(uint32_t effectType, uint32_t time)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>SetStatusEffects</name>
      <anchorfile>classchannel_1_1ActiveEntityState.html</anchorfile>
      <anchor>a67dc06dcf10274170f0728f5f066588f</anchor>
      <arglist>(const std::list&lt; libcomp::ObjectReference&lt; objects::StatusEffect &gt;&gt; &amp;effects)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>UpdateNRAChances</name>
      <anchorfile>classchannel_1_1ActiveEntityState.html</anchorfile>
      <anchor>ab085e16b7b68c89e4f92763dbdf8e87d</anchor>
      <arglist>(libcomp::EnumMap&lt; CorrectTbl, int16_t &gt; &amp;stats, std::shared_ptr&lt; objects::CalculatedEntityState &gt; calcState, const std::list&lt; std::shared_ptr&lt; objects::MiCorrectTbl &gt;&gt; &amp;adjustments={})</arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>std::unordered_map&lt; std::string, uint64_t &gt;</type>
      <name>mActionTimes</name>
      <anchorfile>classchannel_1_1ActiveEntityState.html</anchorfile>
      <anchor>a54a791fd0f100e1e098d0c8579cd6298</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>std::shared_ptr&lt; AIState &gt;</type>
      <name>mAIState</name>
      <anchorfile>classchannel_1_1ActiveEntityState.html</anchorfile>
      <anchor>aafcef9fb7f80ea09775a6f00a008ee11</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>bool</type>
      <name>mAlive</name>
      <anchorfile>classchannel_1_1ActiveEntityState.html</anchorfile>
      <anchor>ab1f143a1f6904fd063477232e7477b92</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>std::unordered_map&lt; uint8_t, std::set&lt; uint32_t &gt; &gt;</type>
      <name>mCancelConditions</name>
      <anchorfile>classchannel_1_1ActiveEntityState.html</anchorfile>
      <anchor>a2878947ed3b4a723ba1804841658323b</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>std::shared_ptr&lt; Zone &gt;</type>
      <name>mCurrentZone</name>
      <anchorfile>classchannel_1_1ActiveEntityState.html</anchorfile>
      <anchor>a1dc568369cb1ff4d78a9db83c08375f8</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>bool</type>
      <name>mEffectsActive</name>
      <anchorfile>classchannel_1_1ActiveEntityState.html</anchorfile>
      <anchor>ae7e6dc8b0b6c2ecf09c634c1e7cb701f</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>bool</type>
      <name>mInitialCalc</name>
      <anchorfile>classchannel_1_1ActiveEntityState.html</anchorfile>
      <anchor>ace2da752766739a6149fc2b07b158d59</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>uint64_t</type>
      <name>mLastRefresh</name>
      <anchorfile>classchannel_1_1ActiveEntityState.html</anchorfile>
      <anchor>ade34713c4aec7ca929822a292b0223d3</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>std::mutex</type>
      <name>mLock</name>
      <anchorfile>classchannel_1_1ActiveEntityState.html</anchorfile>
      <anchor>a8ba2ead908829f41707bdd3b36bcbb0a</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>int8_t</type>
      <name>mNextActivatedAbilityID</name>
      <anchorfile>classchannel_1_1ActiveEntityState.html</anchorfile>
      <anchor>a201d4512bc8abb8059a6589999a48bdb</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>std::map&lt; uint32_t, std::set&lt; uint32_t &gt; &gt;</type>
      <name>mNextEffectTimes</name>
      <anchorfile>classchannel_1_1ActiveEntityState.html</anchorfile>
      <anchor>a7cec5b66c750593b2ad1f2b86c03e233</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>std::unordered_map&lt; uint32_t, libcomp::EnumMap&lt; CorrectTbl, std::set&lt; uint8_t &gt; &gt; &gt;</type>
      <name>mNRAShields</name>
      <anchorfile>classchannel_1_1ActiveEntityState.html</anchorfile>
      <anchor>a203b30260e6d7f760c0b8071b6babc51</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>std::set&lt; int32_t &gt;</type>
      <name>mOpponentIDs</name>
      <anchorfile>classchannel_1_1ActiveEntityState.html</anchorfile>
      <anchor>ac62ddc39f590dd556479f21152f0fb47</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>std::unordered_map&lt; uint32_t, std::shared_ptr&lt; objects::StatusEffect &gt; &gt;</type>
      <name>mStatusEffects</name>
      <anchorfile>classchannel_1_1ActiveEntityState.html</anchorfile>
      <anchor>a8339cd0b835314682a8419496ab3ff94</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>std::set&lt; uint32_t &gt;</type>
      <name>mTimeDamageEffects</name>
      <anchorfile>classchannel_1_1ActiveEntityState.html</anchorfile>
      <anchor>ab6b71c46b84f4cb073667dd823ea0491</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>channel::ActiveEntityStateImp</name>
    <filename>classchannel_1_1ActiveEntityStateImp.html</filename>
    <templarg>T</templarg>
    <base>channel::ActiveEntityState</base>
    <member kind="function">
      <type></type>
      <name>ActiveEntityStateImp</name>
      <anchorfile>classchannel_1_1ActiveEntityStateImp.html</anchorfile>
      <anchor>a2b24cbd66ea4e0194910ebacead33267</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>ActiveEntityStateImp</name>
      <anchorfile>classchannel_1_1ActiveEntityStateImp.html</anchorfile>
      <anchor>aacae6683676d5d1ec9f49f72c1eb5625</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>ActiveEntityStateImp</name>
      <anchorfile>classchannel_1_1ActiveEntityStateImp.html</anchorfile>
      <anchor>a39b42861e63a05dd6c11dcd8ac5004f9</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>ActiveEntityStateImp</name>
      <anchorfile>classchannel_1_1ActiveEntityStateImp.html</anchorfile>
      <anchor>ab51eee35c1b7174393cb436c6665c053</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~ActiveEntityStateImp</name>
      <anchorfile>classchannel_1_1ActiveEntityStateImp.html</anchorfile>
      <anchor>af82a70fc29cf981e70f1b7b1ec833765</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>size_t</type>
      <name>AddRemoveOpponent</name>
      <anchorfile>classchannel_1_1ActiveEntityState.html</anchorfile>
      <anchor>ae1945edacc9db9dd0c0b8fc57ef0ba5a</anchor>
      <arglist>(bool add, int32_t opponentID)</arglist>
    </member>
    <member kind="function">
      <type>std::set&lt; uint32_t &gt;</type>
      <name>AddStatusEffects</name>
      <anchorfile>classchannel_1_1ActiveEntityState.html</anchorfile>
      <anchor>a66bf7fb8d7cd4587e53b9f51128857f2</anchor>
      <arglist>(const AddStatusEffectMap &amp;effects, libcomp::DefinitionManager *definitionManager, uint32_t now=0, bool queueChanges=true)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>CanAct</name>
      <anchorfile>classchannel_1_1ActiveEntityState.html</anchorfile>
      <anchor>ae18bb9a1c3476876a23040c08b5ce37a</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>CancelStatusEffects</name>
      <anchorfile>classchannel_1_1ActiveEntityState.html</anchorfile>
      <anchor>affba706127bff8c636e153cb69c29910</anchor>
      <arglist>(uint8_t cancelFlags)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>CanMove</name>
      <anchorfile>classchannel_1_1ActiveEntityState.html</anchorfile>
      <anchor>af56db75ec5333f4d99949f271c6a38de</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>ExpireStatusEffects</name>
      <anchorfile>classchannel_1_1ActiveEntityState.html</anchorfile>
      <anchor>a513eb93dd9e9b3d8956459355bc08a98</anchor>
      <arglist>(const std::set&lt; uint32_t &gt; &amp;effectTypes)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>ExpireStatusTimes</name>
      <anchorfile>classchannel_1_1ActiveEntityState.html</anchorfile>
      <anchor>a209bb96b9316bf12724e0a48891acc97</anchor>
      <arglist>(uint64_t now)</arglist>
    </member>
    <member kind="function">
      <type>uint64_t</type>
      <name>GetActionTime</name>
      <anchorfile>classchannel_1_1ActiveEntityState.html</anchorfile>
      <anchor>a66d0c35bb1d4ee3e361fafb02fcf629a</anchor>
      <arglist>(const libcomp::String &amp;action)</arglist>
    </member>
    <member kind="function">
      <type>std::shared_ptr&lt; channel::AIState &gt;</type>
      <name>GetAIState</name>
      <anchorfile>classchannel_1_1ActiveEntityState.html</anchorfile>
      <anchor>a7683912a1ff2b1a5dd162b5441a7dcc5</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual std::set&lt; uint32_t &gt;</type>
      <name>GetAllSkills</name>
      <anchorfile>classchannel_1_1ActiveEntityStateImp.html</anchorfile>
      <anchor>ab49cdbfc8d64fb90019f421a9f182597</anchor>
      <arglist>(libcomp::DefinitionManager *definitionManager, bool includeTokusei)</arglist>
    </member>
    <member kind="function">
      <type>std::set&lt; uint32_t &gt;</type>
      <name>GetAllSkills</name>
      <anchorfile>classchannel_1_1ActiveEntityStateImp.html</anchorfile>
      <anchor>a269e524baeece0d36a570357c7751832</anchor>
      <arglist>(libcomp::DefinitionManager *definitionManager, bool includeTokusei)</arglist>
    </member>
    <member kind="function">
      <type>std::set&lt; uint32_t &gt;</type>
      <name>GetAllSkills</name>
      <anchorfile>classchannel_1_1ActiveEntityStateImp.html</anchorfile>
      <anchor>a19514040a764761305712225b33c1a58</anchor>
      <arglist>(libcomp::DefinitionManager *definitionManager, bool includeTokusei)</arglist>
    </member>
    <member kind="function">
      <type>std::set&lt; uint32_t &gt;</type>
      <name>GetAllSkills</name>
      <anchorfile>classchannel_1_1ActiveEntityStateImp.html</anchorfile>
      <anchor>ac075a9a83fff521f63c812a67b4db32b</anchor>
      <arglist>(libcomp::DefinitionManager *definitionManager, bool includeTokusei)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual std::shared_ptr&lt; objects::EntityStats &gt;</type>
      <name>GetCoreStats</name>
      <anchorfile>classchannel_1_1ActiveEntityStateImp.html</anchorfile>
      <anchor>a9f5302b984250a7215f0fd2ba9987d57</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>int16_t</type>
      <name>GetCorrectValue</name>
      <anchorfile>classchannel_1_1ActiveEntityState.html</anchorfile>
      <anchor>aa960f7643649ac1fc26d8baef048f5df</anchor>
      <arglist>(CorrectTbl tableID, std::shared_ptr&lt; objects::CalculatedEntityState &gt; calcState=nullptr)</arglist>
    </member>
    <member kind="function">
      <type>std::list&lt; std::pair&lt; std::shared_ptr&lt; objects::StatusEffect &gt;, uint32_t &gt; &gt;</type>
      <name>GetCurrentStatusEffectStates</name>
      <anchorfile>classchannel_1_1ActiveEntityState.html</anchorfile>
      <anchor>a9364c47b242a5691d9500504c2a3e2f8</anchor>
      <arglist>(libcomp::DefinitionManager *definitionManager, uint32_t now=0)</arglist>
    </member>
    <member kind="function">
      <type>float</type>
      <name>GetDistance</name>
      <anchorfile>classchannel_1_1ActiveEntityState.html</anchorfile>
      <anchor>a38d4d0eba28e2c3dec7bee89df6c244a</anchor>
      <arglist>(float x, float y, bool squared=false)</arglist>
    </member>
    <member kind="function">
      <type>std::shared_ptr&lt; T &gt;</type>
      <name>GetEntity</name>
      <anchorfile>classchannel_1_1ActiveEntityStateImp.html</anchorfile>
      <anchor>af4221fa010303086a166e69ca54345ea</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual const libobjgen::UUID</type>
      <name>GetEntityUUID</name>
      <anchorfile>classchannel_1_1ActiveEntityStateImp.html</anchorfile>
      <anchor>aa1e73078f5e79d3b16ecd0e1119ee9f7</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>const libobjgen::UUID</type>
      <name>GetEntityUUID</name>
      <anchorfile>classchannel_1_1ActiveEntityStateImp.html</anchorfile>
      <anchor>a0cfb74e2eceb3dc71f4ad33ecbf09dfb</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>const libobjgen::UUID</type>
      <name>GetEntityUUID</name>
      <anchorfile>classchannel_1_1ActiveEntityStateImp.html</anchorfile>
      <anchor>ad41f7d9ee46d8c39294d21ce0fd8da9d</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>const libobjgen::UUID</type>
      <name>GetEntityUUID</name>
      <anchorfile>classchannel_1_1ActiveEntityStateImp.html</anchorfile>
      <anchor>a08331a3138f8741dca735749c7a5ae22</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual uint8_t</type>
      <name>GetLNCType</name>
      <anchorfile>classchannel_1_1ActiveEntityStateImp.html</anchorfile>
      <anchor>a4100067bbe779db70c897cf343f7943c</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>uint8_t</type>
      <name>GetLNCType</name>
      <anchorfile>classchannel_1_1ActiveEntityStateImp.html</anchorfile>
      <anchor>a525cee625938e5046b4808ba3f6f5d51</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>uint8_t</type>
      <name>GetLNCType</name>
      <anchorfile>classchannel_1_1ActiveEntityStateImp.html</anchorfile>
      <anchor>a4e3f5b0de8a1a3868da4ddff5dfd1140</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>uint8_t</type>
      <name>GetLNCType</name>
      <anchorfile>classchannel_1_1ActiveEntityStateImp.html</anchorfile>
      <anchor>a905748c9d118f7e48f7ad1e1410fc651</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>float</type>
      <name>GetMovementSpeed</name>
      <anchorfile>classchannel_1_1ActiveEntityState.html</anchorfile>
      <anchor>a3a11050fb65a386e982332da21db2c87</anchor>
      <arglist>(bool altSpeed=false)</arglist>
    </member>
    <member kind="function">
      <type>int8_t</type>
      <name>GetNextActivatedAbilityID</name>
      <anchorfile>classchannel_1_1ActiveEntityState.html</anchorfile>
      <anchor>a3d841d6660fa605b5ca4f5628ec0c667</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>int16_t</type>
      <name>GetNRAChance</name>
      <anchorfile>classchannel_1_1ActiveEntityState.html</anchorfile>
      <anchor>ac468fcaa3b7dd039c9924d1ef55e880a</anchor>
      <arglist>(uint8_t nraIdx, CorrectTbl type, std::shared_ptr&lt; objects::CalculatedEntityState &gt; calcState=nullptr)</arglist>
    </member>
    <member kind="function">
      <type>std::set&lt; int32_t &gt;</type>
      <name>GetOpponentIDs</name>
      <anchorfile>classchannel_1_1ActiveEntityState.html</anchorfile>
      <anchor>a28eb0b46ea358d21487b2f855ef3bfd3</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>const std::unordered_map&lt; uint32_t, std::shared_ptr&lt; objects::StatusEffect &gt; &gt; &amp;</type>
      <name>GetStatusEffects</name>
      <anchorfile>classchannel_1_1ActiveEntityState.html</anchorfile>
      <anchor>af08840e2fef8a61e0737b61a85bb9c20</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>std::shared_ptr&lt; Zone &gt;</type>
      <name>GetZone</name>
      <anchorfile>classchannel_1_1ActiveEntityState.html</anchorfile>
      <anchor>ab75cc6f82b822318ec0816b6ccebd30a</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>HasOpponent</name>
      <anchorfile>classchannel_1_1ActiveEntityState.html</anchorfile>
      <anchor>ad2260cd031d413d44dd727a014cffc8a</anchor>
      <arglist>(int32_t opponentID=0)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>IsAlive</name>
      <anchorfile>classchannel_1_1ActiveEntityState.html</anchorfile>
      <anchor>ab6edd9f3b8abd577890af858d5dc85dc</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>IsLNCType</name>
      <anchorfile>classchannel_1_1ActiveEntityState.html</anchorfile>
      <anchor>ae897ad90fe5cb5f505f2de5a0da374c7</anchor>
      <arglist>(uint8_t lncType, bool invertFlag)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>IsMoving</name>
      <anchorfile>classchannel_1_1ActiveEntityState.html</anchorfile>
      <anchor>aa86a6658fd24aeafde4b18c0c97d0433</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>IsRotating</name>
      <anchorfile>classchannel_1_1ActiveEntityState.html</anchorfile>
      <anchor>af995e3c25687f8b2692dc523f08c04b1</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>Move</name>
      <anchorfile>classchannel_1_1ActiveEntityState.html</anchorfile>
      <anchor>ae83be0aeee9a600a99286fc1db8fc8d1</anchor>
      <arglist>(float xPos, float yPos, uint64_t now)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>PopEffectTicks</name>
      <anchorfile>classchannel_1_1ActiveEntityState.html</anchorfile>
      <anchor>a0539c15041b0ac7c49aa586f4b28eceb</anchor>
      <arglist>(libcomp::DefinitionManager *definitionManager, uint32_t time, int32_t &amp;hpTDamage, int32_t &amp;mpTDamage, std::set&lt; uint32_t &gt; &amp;added, std::set&lt; uint32_t &gt; &amp;updated, std::set&lt; uint32_t &gt; &amp;removed)</arglist>
    </member>
    <member kind="function">
      <type>std::set&lt; uint8_t &gt;</type>
      <name>PopNRAShields</name>
      <anchorfile>classchannel_1_1ActiveEntityState.html</anchorfile>
      <anchor>aa40113ab2ad642f5a232f1807dcaca76</anchor>
      <arglist>(const std::list&lt; CorrectTbl &gt; &amp;types)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual bool</type>
      <name>Ready</name>
      <anchorfile>classchannel_1_1ActiveEntityStateImp.html</anchorfile>
      <anchor>a66ce4e4014373250c4e7a32108fdda78</anchor>
      <arglist>(bool ignoreDisplayState=false)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual bool</type>
      <name>RecalcDisabledSkills</name>
      <anchorfile>classchannel_1_1ActiveEntityState.html</anchorfile>
      <anchor>a59bfa238a72ef7535e35ebfd356c60d8</anchor>
      <arglist>(libcomp::DefinitionManager *definitionManager)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual uint8_t</type>
      <name>RecalculateStats</name>
      <anchorfile>classchannel_1_1ActiveEntityStateImp.html</anchorfile>
      <anchor>aa13eeaec58b7c32b8d8569f026b59e3f</anchor>
      <arglist>(libcomp::DefinitionManager *definitionManager, std::shared_ptr&lt; objects::CalculatedEntityState &gt; calcState=nullptr)</arglist>
    </member>
    <member kind="function">
      <type>uint8_t</type>
      <name>RecalculateStats</name>
      <anchorfile>classchannel_1_1ActiveEntityStateImp.html</anchorfile>
      <anchor>a47b03f9cc32e5a7f99747e476cddc926</anchor>
      <arglist>(libcomp::DefinitionManager *definitionManager, std::shared_ptr&lt; objects::CalculatedEntityState &gt; calcState)</arglist>
    </member>
    <member kind="function">
      <type>uint8_t</type>
      <name>RecalculateStats</name>
      <anchorfile>classchannel_1_1ActiveEntityStateImp.html</anchorfile>
      <anchor>a2ef429f5a558175b002bdad91a08e619</anchor>
      <arglist>(libcomp::DefinitionManager *definitionManager, std::shared_ptr&lt; objects::CalculatedEntityState &gt; calcState)</arglist>
    </member>
    <member kind="function">
      <type>uint8_t</type>
      <name>RecalculateStats</name>
      <anchorfile>classchannel_1_1ActiveEntityStateImp.html</anchorfile>
      <anchor>af74e66d3422612236b534b2e4286d137</anchor>
      <arglist>(libcomp::DefinitionManager *definitionManager, std::shared_ptr&lt; objects::CalculatedEntityState &gt; calcState)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>RefreshCurrentPosition</name>
      <anchorfile>classchannel_1_1ActiveEntityState.html</anchorfile>
      <anchor>ad58ca1704077c66eae6e6cfa5f93d137</anchor>
      <arglist>(uint64_t now)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>RefreshKnockback</name>
      <anchorfile>classchannel_1_1ActiveEntityState.html</anchorfile>
      <anchor>ad61a7487707c26af826391961d0fd7a5</anchor>
      <arglist>(uint64_t now, float recoveryBoost)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>Rotate</name>
      <anchorfile>classchannel_1_1ActiveEntityState.html</anchorfile>
      <anchor>ae22c1b7e0c0ff0217bf4d5d255e4db13</anchor>
      <arglist>(float rot, uint64_t now)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetActionTime</name>
      <anchorfile>classchannel_1_1ActiveEntityState.html</anchorfile>
      <anchor>a5eca26bba7bcac79034d2adfa7f584f7</anchor>
      <arglist>(const libcomp::String &amp;action, uint64_t time)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetAIState</name>
      <anchorfile>classchannel_1_1ActiveEntityState.html</anchorfile>
      <anchor>a23f9604c12ecf053dab3cb4511c7a624</anchor>
      <arglist>(const std::shared_ptr&lt; channel::AIState &gt; &amp;aiState)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetEntity</name>
      <anchorfile>classchannel_1_1ActiveEntityStateImp.html</anchorfile>
      <anchor>a081b5d9be8d1e94e5ac3a1c04e33a6cc</anchor>
      <arglist>(const std::shared_ptr&lt; T &gt; &amp;entity, const std::shared_ptr&lt; objects::MiDevilData &gt; &amp;devilData)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetEntity</name>
      <anchorfile>classchannel_1_1ActiveEntityStateImp.html</anchorfile>
      <anchor>af692738ff1b83ff244e0fe56ff20c5b0</anchor>
      <arglist>(const std::shared_ptr&lt; objects::Character &gt; &amp;entity, const std::shared_ptr&lt; objects::MiDevilData &gt; &amp;devilData)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetEntity</name>
      <anchorfile>classchannel_1_1ActiveEntityStateImp.html</anchorfile>
      <anchor>aa1e03a82a29c7576deb998f4f10884c9</anchor>
      <arglist>(const std::shared_ptr&lt; objects::Demon &gt; &amp;entity, const std::shared_ptr&lt; objects::MiDevilData &gt; &amp;devilData)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetEntity</name>
      <anchorfile>classchannel_1_1ActiveEntityStateImp.html</anchorfile>
      <anchor>aa0fb4199c53945039f922ec6acaf7871</anchor>
      <arglist>(const std::shared_ptr&lt; objects::Enemy &gt; &amp;entity, const std::shared_ptr&lt; objects::MiDevilData &gt; &amp;devilData)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>SetHPMP</name>
      <anchorfile>classchannel_1_1ActiveEntityState.html</anchorfile>
      <anchor>a6616f760c961b349baf3b81d0bea31dc</anchor>
      <arglist>(int32_t hp, int32_t mp, bool adjust, bool canOverflow=false)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>SetHPMP</name>
      <anchorfile>classchannel_1_1ActiveEntityState.html</anchorfile>
      <anchor>a7c6d6218e677353ee81718c7a821be17</anchor>
      <arglist>(int32_t hp, int32_t mp, bool adjust, bool canOverflow, int32_t clenchChance, int32_t &amp;hpAdjusted, int32_t &amp;mpAdjusted)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetStatusEffects</name>
      <anchorfile>classchannel_1_1ActiveEntityState.html</anchorfile>
      <anchor>abc6fe40cb7d3047ea41b17ff76c3f7df</anchor>
      <arglist>(const std::list&lt; std::shared_ptr&lt; objects::StatusEffect &gt;&gt; &amp;effects)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetStatusEffectsActive</name>
      <anchorfile>classchannel_1_1ActiveEntityState.html</anchorfile>
      <anchor>ad037282b3c14165da135e4205658a951</anchor>
      <arglist>(bool activate, libcomp::DefinitionManager *definitionManager, uint32_t now=0)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetZone</name>
      <anchorfile>classchannel_1_1ActiveEntityState.html</anchorfile>
      <anchor>a30007b72d6e529ca1bb069a699f4ed31</anchor>
      <arglist>(const std::shared_ptr&lt; Zone &gt; &amp;zone, bool updatePrevious=true)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>SkillAvailable</name>
      <anchorfile>classchannel_1_1ActiveEntityState.html</anchorfile>
      <anchor>a7aaf79e1f896744447d2db61abb9c9ec</anchor>
      <arglist>(uint32_t skillID)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>Stop</name>
      <anchorfile>classchannel_1_1ActiveEntityState.html</anchorfile>
      <anchor>a2cad211a8af9bca5239ab9f7579f3120</anchor>
      <arglist>(uint64_t now)</arglist>
    </member>
    <member kind="function">
      <type>float</type>
      <name>UpdateKnockback</name>
      <anchorfile>classchannel_1_1ActiveEntityState.html</anchorfile>
      <anchor>ab4c9670f327a31be928b619b000110d4</anchor>
      <arglist>(uint64_t now, float decrease, float recoveryBoost)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static float</type>
      <name>CorrectRotation</name>
      <anchorfile>classchannel_1_1ActiveEntityState.html</anchorfile>
      <anchor>a2d02b85123163c97fd1e593eb514640b</anchor>
      <arglist>(float rot)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>ActivateStatusEffect</name>
      <anchorfile>classchannel_1_1ActiveEntityState.html</anchorfile>
      <anchor>a002f85b0ac7e3213d13cce85ae1a5b1c</anchor>
      <arglist>(const std::shared_ptr&lt; objects::StatusEffect &gt; &amp;effect, libcomp::DefinitionManager *definitionManager, uint32_t now, bool timeOnly)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>AdjustStats</name>
      <anchorfile>classchannel_1_1ActiveEntityState.html</anchorfile>
      <anchor>a318eb1d9febb3704d218b14cde573230</anchor>
      <arglist>(const std::list&lt; std::shared_ptr&lt; objects::MiCorrectTbl &gt;&gt; &amp;adjustments, libcomp::EnumMap&lt; CorrectTbl, int16_t &gt; &amp;stats, std::shared_ptr&lt; objects::CalculatedEntityState &gt; calcState, bool baseMode)</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>BaseStatsCalculated</name>
      <anchorfile>classchannel_1_1ActiveEntityState.html</anchorfile>
      <anchor>aa348c1deb923b21e640c586dbfc35506</anchor>
      <arglist>(libcomp::DefinitionManager *definitionManager, std::shared_ptr&lt; objects::CalculatedEntityState &gt; calcState, libcomp::EnumMap&lt; CorrectTbl, int16_t &gt; &amp;stats, std::list&lt; std::shared_ptr&lt; objects::MiCorrectTbl &gt;&gt; &amp;adjustments)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>uint8_t</type>
      <name>CalculateLNCType</name>
      <anchorfile>classchannel_1_1ActiveEntityState.html</anchorfile>
      <anchor>a34960657093fd4872631e886df4998e2</anchor>
      <arglist>(int16_t lncPoints) const </arglist>
    </member>
    <member kind="function" protection="protected">
      <type>uint8_t</type>
      <name>CompareAndResetStats</name>
      <anchorfile>classchannel_1_1ActiveEntityState.html</anchorfile>
      <anchor>a3441ec808c0da0ebddb044fce70b52d4</anchor>
      <arglist>(libcomp::EnumMap&lt; CorrectTbl, int16_t &gt; &amp;stats, int32_t extraHP=0)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>GetAdditionalCorrectTbls</name>
      <anchorfile>classchannel_1_1ActiveEntityState.html</anchorfile>
      <anchor>af5fda23fe92a4383277c28073712d106</anchor>
      <arglist>(libcomp::DefinitionManager *definitionManager, std::shared_ptr&lt; objects::CalculatedEntityState &gt; calcState, std::list&lt; std::shared_ptr&lt; objects::MiCorrectTbl &gt;&gt; &amp;adjustments)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>uint32_t</type>
      <name>GetCurrentExpiration</name>
      <anchorfile>classchannel_1_1ActiveEntityState.html</anchorfile>
      <anchor>af93288af34867c22340a7da9f699b2fc</anchor>
      <arglist>(const std::shared_ptr&lt; objects::StatusEffect &gt; &amp;effect, libcomp::DefinitionManager *definitionManager, uint32_t nextTime, uint32_t now)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>std::set&lt; uint32_t &gt;</type>
      <name>GetEffectiveTokuseiSkills</name>
      <anchorfile>classchannel_1_1ActiveEntityState.html</anchorfile>
      <anchor>af5d0540419e8c3d02bb6485603c81133</anchor>
      <arglist>(libcomp::DefinitionManager *definitionManager)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>uint8_t</type>
      <name>RecalculateDemonStats</name>
      <anchorfile>classchannel_1_1ActiveEntityState.html</anchorfile>
      <anchor>aa116a03fff76b59e8577b87cb6070365</anchor>
      <arglist>(libcomp::DefinitionManager *definitionManager, std::shared_ptr&lt; objects::CalculatedEntityState &gt; calcState)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>RegisterNextEffectTime</name>
      <anchorfile>classchannel_1_1ActiveEntityState.html</anchorfile>
      <anchor>abb971ac4a2f29be3a316a5e12a4b51bb</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>RemoveInactiveSwitchSkills</name>
      <anchorfile>classchannel_1_1ActiveEntityState.html</anchorfile>
      <anchor>a7b31da8ab8cf7529a93ae5ab43d8e6cb</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>RemoveStatusEffects</name>
      <anchorfile>classchannel_1_1ActiveEntityState.html</anchorfile>
      <anchor>af048315581b26430c0dc62d15d5078dc</anchor>
      <arglist>(const std::set&lt; uint32_t &gt; &amp;effectTypes)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>SetNextEffectTime</name>
      <anchorfile>classchannel_1_1ActiveEntityState.html</anchorfile>
      <anchor>af9d56a631bf512f8ac22671e78fb3864</anchor>
      <arglist>(uint32_t effectType, uint32_t time)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>SetStatusEffects</name>
      <anchorfile>classchannel_1_1ActiveEntityState.html</anchorfile>
      <anchor>a67dc06dcf10274170f0728f5f066588f</anchor>
      <arglist>(const std::list&lt; libcomp::ObjectReference&lt; objects::StatusEffect &gt;&gt; &amp;effects)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>UpdateNRAChances</name>
      <anchorfile>classchannel_1_1ActiveEntityState.html</anchorfile>
      <anchor>ab085e16b7b68c89e4f92763dbdf8e87d</anchor>
      <arglist>(libcomp::EnumMap&lt; CorrectTbl, int16_t &gt; &amp;stats, std::shared_ptr&lt; objects::CalculatedEntityState &gt; calcState, const std::list&lt; std::shared_ptr&lt; objects::MiCorrectTbl &gt;&gt; &amp;adjustments={})</arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>std::unordered_map&lt; std::string, uint64_t &gt;</type>
      <name>mActionTimes</name>
      <anchorfile>classchannel_1_1ActiveEntityState.html</anchorfile>
      <anchor>a54a791fd0f100e1e098d0c8579cd6298</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>std::shared_ptr&lt; AIState &gt;</type>
      <name>mAIState</name>
      <anchorfile>classchannel_1_1ActiveEntityState.html</anchorfile>
      <anchor>aafcef9fb7f80ea09775a6f00a008ee11</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>bool</type>
      <name>mAlive</name>
      <anchorfile>classchannel_1_1ActiveEntityState.html</anchorfile>
      <anchor>ab1f143a1f6904fd063477232e7477b92</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>std::unordered_map&lt; uint8_t, std::set&lt; uint32_t &gt; &gt;</type>
      <name>mCancelConditions</name>
      <anchorfile>classchannel_1_1ActiveEntityState.html</anchorfile>
      <anchor>a2878947ed3b4a723ba1804841658323b</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>std::shared_ptr&lt; Zone &gt;</type>
      <name>mCurrentZone</name>
      <anchorfile>classchannel_1_1ActiveEntityState.html</anchorfile>
      <anchor>a1dc568369cb1ff4d78a9db83c08375f8</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>bool</type>
      <name>mEffectsActive</name>
      <anchorfile>classchannel_1_1ActiveEntityState.html</anchorfile>
      <anchor>ae7e6dc8b0b6c2ecf09c634c1e7cb701f</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>bool</type>
      <name>mInitialCalc</name>
      <anchorfile>classchannel_1_1ActiveEntityState.html</anchorfile>
      <anchor>ace2da752766739a6149fc2b07b158d59</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>uint64_t</type>
      <name>mLastRefresh</name>
      <anchorfile>classchannel_1_1ActiveEntityState.html</anchorfile>
      <anchor>ade34713c4aec7ca929822a292b0223d3</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>std::mutex</type>
      <name>mLock</name>
      <anchorfile>classchannel_1_1ActiveEntityState.html</anchorfile>
      <anchor>a8ba2ead908829f41707bdd3b36bcbb0a</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>int8_t</type>
      <name>mNextActivatedAbilityID</name>
      <anchorfile>classchannel_1_1ActiveEntityState.html</anchorfile>
      <anchor>a201d4512bc8abb8059a6589999a48bdb</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>std::map&lt; uint32_t, std::set&lt; uint32_t &gt; &gt;</type>
      <name>mNextEffectTimes</name>
      <anchorfile>classchannel_1_1ActiveEntityState.html</anchorfile>
      <anchor>a7cec5b66c750593b2ad1f2b86c03e233</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>std::unordered_map&lt; uint32_t, libcomp::EnumMap&lt; CorrectTbl, std::set&lt; uint8_t &gt; &gt; &gt;</type>
      <name>mNRAShields</name>
      <anchorfile>classchannel_1_1ActiveEntityState.html</anchorfile>
      <anchor>a203b30260e6d7f760c0b8071b6babc51</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>std::set&lt; int32_t &gt;</type>
      <name>mOpponentIDs</name>
      <anchorfile>classchannel_1_1ActiveEntityState.html</anchorfile>
      <anchor>ac62ddc39f590dd556479f21152f0fb47</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>std::unordered_map&lt; uint32_t, std::shared_ptr&lt; objects::StatusEffect &gt; &gt;</type>
      <name>mStatusEffects</name>
      <anchorfile>classchannel_1_1ActiveEntityState.html</anchorfile>
      <anchor>a8339cd0b835314682a8419496ab3ff94</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>std::set&lt; uint32_t &gt;</type>
      <name>mTimeDamageEffects</name>
      <anchorfile>classchannel_1_1ActiveEntityState.html</anchorfile>
      <anchor>ab6b71c46b84f4cb073667dd823ea0491</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>std::shared_ptr&lt; T &gt;</type>
      <name>mEntity</name>
      <anchorfile>classchannel_1_1ActiveEntityStateImp.html</anchorfile>
      <anchor>a287ca63507001a26ac4e3f954d92f363</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>ActiveEntityStateImp&lt; objects::Character &gt;</name>
    <filename>classchannel_1_1ActiveEntityStateImp.html</filename>
    <base>channel::ActiveEntityState</base>
    <member kind="function">
      <type></type>
      <name>ActiveEntityStateImp</name>
      <anchorfile>classchannel_1_1ActiveEntityStateImp.html</anchorfile>
      <anchor>a2b24cbd66ea4e0194910ebacead33267</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~ActiveEntityStateImp</name>
      <anchorfile>classchannel_1_1ActiveEntityStateImp.html</anchorfile>
      <anchor>af82a70fc29cf981e70f1b7b1ec833765</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>size_t</type>
      <name>AddRemoveOpponent</name>
      <anchorfile>classchannel_1_1ActiveEntityState.html</anchorfile>
      <anchor>ae1945edacc9db9dd0c0b8fc57ef0ba5a</anchor>
      <arglist>(bool add, int32_t opponentID)</arglist>
    </member>
    <member kind="function">
      <type>std::set&lt; uint32_t &gt;</type>
      <name>AddStatusEffects</name>
      <anchorfile>classchannel_1_1ActiveEntityState.html</anchorfile>
      <anchor>a66bf7fb8d7cd4587e53b9f51128857f2</anchor>
      <arglist>(const AddStatusEffectMap &amp;effects, libcomp::DefinitionManager *definitionManager, uint32_t now=0, bool queueChanges=true)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>CanAct</name>
      <anchorfile>classchannel_1_1ActiveEntityState.html</anchorfile>
      <anchor>ae18bb9a1c3476876a23040c08b5ce37a</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>CancelStatusEffects</name>
      <anchorfile>classchannel_1_1ActiveEntityState.html</anchorfile>
      <anchor>affba706127bff8c636e153cb69c29910</anchor>
      <arglist>(uint8_t cancelFlags)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>CanMove</name>
      <anchorfile>classchannel_1_1ActiveEntityState.html</anchorfile>
      <anchor>af56db75ec5333f4d99949f271c6a38de</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>ExpireStatusEffects</name>
      <anchorfile>classchannel_1_1ActiveEntityState.html</anchorfile>
      <anchor>a513eb93dd9e9b3d8956459355bc08a98</anchor>
      <arglist>(const std::set&lt; uint32_t &gt; &amp;effectTypes)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>ExpireStatusTimes</name>
      <anchorfile>classchannel_1_1ActiveEntityState.html</anchorfile>
      <anchor>a209bb96b9316bf12724e0a48891acc97</anchor>
      <arglist>(uint64_t now)</arglist>
    </member>
    <member kind="function">
      <type>uint64_t</type>
      <name>GetActionTime</name>
      <anchorfile>classchannel_1_1ActiveEntityState.html</anchorfile>
      <anchor>a66d0c35bb1d4ee3e361fafb02fcf629a</anchor>
      <arglist>(const libcomp::String &amp;action)</arglist>
    </member>
    <member kind="function">
      <type>std::shared_ptr&lt; channel::AIState &gt;</type>
      <name>GetAIState</name>
      <anchorfile>classchannel_1_1ActiveEntityState.html</anchorfile>
      <anchor>a7683912a1ff2b1a5dd162b5441a7dcc5</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual std::set&lt; uint32_t &gt;</type>
      <name>GetAllSkills</name>
      <anchorfile>classchannel_1_1ActiveEntityStateImp.html</anchorfile>
      <anchor>ab49cdbfc8d64fb90019f421a9f182597</anchor>
      <arglist>(libcomp::DefinitionManager *definitionManager, bool includeTokusei)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual std::shared_ptr&lt; objects::EntityStats &gt;</type>
      <name>GetCoreStats</name>
      <anchorfile>classchannel_1_1ActiveEntityStateImp.html</anchorfile>
      <anchor>a9f5302b984250a7215f0fd2ba9987d57</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>int16_t</type>
      <name>GetCorrectValue</name>
      <anchorfile>classchannel_1_1ActiveEntityState.html</anchorfile>
      <anchor>aa960f7643649ac1fc26d8baef048f5df</anchor>
      <arglist>(CorrectTbl tableID, std::shared_ptr&lt; objects::CalculatedEntityState &gt; calcState=nullptr)</arglist>
    </member>
    <member kind="function">
      <type>std::list&lt; std::pair&lt; std::shared_ptr&lt; objects::StatusEffect &gt;, uint32_t &gt; &gt;</type>
      <name>GetCurrentStatusEffectStates</name>
      <anchorfile>classchannel_1_1ActiveEntityState.html</anchorfile>
      <anchor>a9364c47b242a5691d9500504c2a3e2f8</anchor>
      <arglist>(libcomp::DefinitionManager *definitionManager, uint32_t now=0)</arglist>
    </member>
    <member kind="function">
      <type>float</type>
      <name>GetDistance</name>
      <anchorfile>classchannel_1_1ActiveEntityState.html</anchorfile>
      <anchor>a38d4d0eba28e2c3dec7bee89df6c244a</anchor>
      <arglist>(float x, float y, bool squared=false)</arglist>
    </member>
    <member kind="function">
      <type>std::shared_ptr&lt; objects::Character &gt;</type>
      <name>GetEntity</name>
      <anchorfile>classchannel_1_1ActiveEntityStateImp.html</anchorfile>
      <anchor>af4221fa010303086a166e69ca54345ea</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual const libobjgen::UUID</type>
      <name>GetEntityUUID</name>
      <anchorfile>classchannel_1_1ActiveEntityStateImp.html</anchorfile>
      <anchor>aa1e73078f5e79d3b16ecd0e1119ee9f7</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual uint8_t</type>
      <name>GetLNCType</name>
      <anchorfile>classchannel_1_1ActiveEntityStateImp.html</anchorfile>
      <anchor>a4100067bbe779db70c897cf343f7943c</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>float</type>
      <name>GetMovementSpeed</name>
      <anchorfile>classchannel_1_1ActiveEntityState.html</anchorfile>
      <anchor>a3a11050fb65a386e982332da21db2c87</anchor>
      <arglist>(bool altSpeed=false)</arglist>
    </member>
    <member kind="function">
      <type>int8_t</type>
      <name>GetNextActivatedAbilityID</name>
      <anchorfile>classchannel_1_1ActiveEntityState.html</anchorfile>
      <anchor>a3d841d6660fa605b5ca4f5628ec0c667</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>int16_t</type>
      <name>GetNRAChance</name>
      <anchorfile>classchannel_1_1ActiveEntityState.html</anchorfile>
      <anchor>ac468fcaa3b7dd039c9924d1ef55e880a</anchor>
      <arglist>(uint8_t nraIdx, CorrectTbl type, std::shared_ptr&lt; objects::CalculatedEntityState &gt; calcState=nullptr)</arglist>
    </member>
    <member kind="function">
      <type>std::set&lt; int32_t &gt;</type>
      <name>GetOpponentIDs</name>
      <anchorfile>classchannel_1_1ActiveEntityState.html</anchorfile>
      <anchor>a28eb0b46ea358d21487b2f855ef3bfd3</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>const std::unordered_map&lt; uint32_t, std::shared_ptr&lt; objects::StatusEffect &gt; &gt; &amp;</type>
      <name>GetStatusEffects</name>
      <anchorfile>classchannel_1_1ActiveEntityState.html</anchorfile>
      <anchor>af08840e2fef8a61e0737b61a85bb9c20</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>std::shared_ptr&lt; Zone &gt;</type>
      <name>GetZone</name>
      <anchorfile>classchannel_1_1ActiveEntityState.html</anchorfile>
      <anchor>ab75cc6f82b822318ec0816b6ccebd30a</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>HasOpponent</name>
      <anchorfile>classchannel_1_1ActiveEntityState.html</anchorfile>
      <anchor>ad2260cd031d413d44dd727a014cffc8a</anchor>
      <arglist>(int32_t opponentID=0)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>IsAlive</name>
      <anchorfile>classchannel_1_1ActiveEntityState.html</anchorfile>
      <anchor>ab6edd9f3b8abd577890af858d5dc85dc</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>IsLNCType</name>
      <anchorfile>classchannel_1_1ActiveEntityState.html</anchorfile>
      <anchor>ae897ad90fe5cb5f505f2de5a0da374c7</anchor>
      <arglist>(uint8_t lncType, bool invertFlag)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>IsMoving</name>
      <anchorfile>classchannel_1_1ActiveEntityState.html</anchorfile>
      <anchor>aa86a6658fd24aeafde4b18c0c97d0433</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>IsRotating</name>
      <anchorfile>classchannel_1_1ActiveEntityState.html</anchorfile>
      <anchor>af995e3c25687f8b2692dc523f08c04b1</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>Move</name>
      <anchorfile>classchannel_1_1ActiveEntityState.html</anchorfile>
      <anchor>ae83be0aeee9a600a99286fc1db8fc8d1</anchor>
      <arglist>(float xPos, float yPos, uint64_t now)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>PopEffectTicks</name>
      <anchorfile>classchannel_1_1ActiveEntityState.html</anchorfile>
      <anchor>a0539c15041b0ac7c49aa586f4b28eceb</anchor>
      <arglist>(libcomp::DefinitionManager *definitionManager, uint32_t time, int32_t &amp;hpTDamage, int32_t &amp;mpTDamage, std::set&lt; uint32_t &gt; &amp;added, std::set&lt; uint32_t &gt; &amp;updated, std::set&lt; uint32_t &gt; &amp;removed)</arglist>
    </member>
    <member kind="function">
      <type>std::set&lt; uint8_t &gt;</type>
      <name>PopNRAShields</name>
      <anchorfile>classchannel_1_1ActiveEntityState.html</anchorfile>
      <anchor>aa40113ab2ad642f5a232f1807dcaca76</anchor>
      <arglist>(const std::list&lt; CorrectTbl &gt; &amp;types)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual bool</type>
      <name>Ready</name>
      <anchorfile>classchannel_1_1ActiveEntityStateImp.html</anchorfile>
      <anchor>a66ce4e4014373250c4e7a32108fdda78</anchor>
      <arglist>(bool ignoreDisplayState=false)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual bool</type>
      <name>RecalcDisabledSkills</name>
      <anchorfile>classchannel_1_1ActiveEntityState.html</anchorfile>
      <anchor>a59bfa238a72ef7535e35ebfd356c60d8</anchor>
      <arglist>(libcomp::DefinitionManager *definitionManager)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual uint8_t</type>
      <name>RecalculateStats</name>
      <anchorfile>classchannel_1_1ActiveEntityStateImp.html</anchorfile>
      <anchor>aa13eeaec58b7c32b8d8569f026b59e3f</anchor>
      <arglist>(libcomp::DefinitionManager *definitionManager, std::shared_ptr&lt; objects::CalculatedEntityState &gt; calcState=nullptr)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>RefreshCurrentPosition</name>
      <anchorfile>classchannel_1_1ActiveEntityState.html</anchorfile>
      <anchor>ad58ca1704077c66eae6e6cfa5f93d137</anchor>
      <arglist>(uint64_t now)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>RefreshKnockback</name>
      <anchorfile>classchannel_1_1ActiveEntityState.html</anchorfile>
      <anchor>ad61a7487707c26af826391961d0fd7a5</anchor>
      <arglist>(uint64_t now, float recoveryBoost)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>Rotate</name>
      <anchorfile>classchannel_1_1ActiveEntityState.html</anchorfile>
      <anchor>ae22c1b7e0c0ff0217bf4d5d255e4db13</anchor>
      <arglist>(float rot, uint64_t now)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetActionTime</name>
      <anchorfile>classchannel_1_1ActiveEntityState.html</anchorfile>
      <anchor>a5eca26bba7bcac79034d2adfa7f584f7</anchor>
      <arglist>(const libcomp::String &amp;action, uint64_t time)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetAIState</name>
      <anchorfile>classchannel_1_1ActiveEntityState.html</anchorfile>
      <anchor>a23f9604c12ecf053dab3cb4511c7a624</anchor>
      <arglist>(const std::shared_ptr&lt; channel::AIState &gt; &amp;aiState)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetEntity</name>
      <anchorfile>classchannel_1_1ActiveEntityStateImp.html</anchorfile>
      <anchor>a081b5d9be8d1e94e5ac3a1c04e33a6cc</anchor>
      <arglist>(const std::shared_ptr&lt; objects::Character &gt; &amp;entity, const std::shared_ptr&lt; objects::MiDevilData &gt; &amp;devilData)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>SetHPMP</name>
      <anchorfile>classchannel_1_1ActiveEntityState.html</anchorfile>
      <anchor>a6616f760c961b349baf3b81d0bea31dc</anchor>
      <arglist>(int32_t hp, int32_t mp, bool adjust, bool canOverflow=false)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>SetHPMP</name>
      <anchorfile>classchannel_1_1ActiveEntityState.html</anchorfile>
      <anchor>a7c6d6218e677353ee81718c7a821be17</anchor>
      <arglist>(int32_t hp, int32_t mp, bool adjust, bool canOverflow, int32_t clenchChance, int32_t &amp;hpAdjusted, int32_t &amp;mpAdjusted)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetStatusEffects</name>
      <anchorfile>classchannel_1_1ActiveEntityState.html</anchorfile>
      <anchor>abc6fe40cb7d3047ea41b17ff76c3f7df</anchor>
      <arglist>(const std::list&lt; std::shared_ptr&lt; objects::StatusEffect &gt;&gt; &amp;effects)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetStatusEffectsActive</name>
      <anchorfile>classchannel_1_1ActiveEntityState.html</anchorfile>
      <anchor>ad037282b3c14165da135e4205658a951</anchor>
      <arglist>(bool activate, libcomp::DefinitionManager *definitionManager, uint32_t now=0)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetZone</name>
      <anchorfile>classchannel_1_1ActiveEntityState.html</anchorfile>
      <anchor>a30007b72d6e529ca1bb069a699f4ed31</anchor>
      <arglist>(const std::shared_ptr&lt; Zone &gt; &amp;zone, bool updatePrevious=true)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>SkillAvailable</name>
      <anchorfile>classchannel_1_1ActiveEntityState.html</anchorfile>
      <anchor>a7aaf79e1f896744447d2db61abb9c9ec</anchor>
      <arglist>(uint32_t skillID)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>Stop</name>
      <anchorfile>classchannel_1_1ActiveEntityState.html</anchorfile>
      <anchor>a2cad211a8af9bca5239ab9f7579f3120</anchor>
      <arglist>(uint64_t now)</arglist>
    </member>
    <member kind="function">
      <type>float</type>
      <name>UpdateKnockback</name>
      <anchorfile>classchannel_1_1ActiveEntityState.html</anchorfile>
      <anchor>ab4c9670f327a31be928b619b000110d4</anchor>
      <arglist>(uint64_t now, float decrease, float recoveryBoost)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static float</type>
      <name>CorrectRotation</name>
      <anchorfile>classchannel_1_1ActiveEntityState.html</anchorfile>
      <anchor>a2d02b85123163c97fd1e593eb514640b</anchor>
      <arglist>(float rot)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>ActivateStatusEffect</name>
      <anchorfile>classchannel_1_1ActiveEntityState.html</anchorfile>
      <anchor>a002f85b0ac7e3213d13cce85ae1a5b1c</anchor>
      <arglist>(const std::shared_ptr&lt; objects::StatusEffect &gt; &amp;effect, libcomp::DefinitionManager *definitionManager, uint32_t now, bool timeOnly)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>AdjustStats</name>
      <anchorfile>classchannel_1_1ActiveEntityState.html</anchorfile>
      <anchor>a318eb1d9febb3704d218b14cde573230</anchor>
      <arglist>(const std::list&lt; std::shared_ptr&lt; objects::MiCorrectTbl &gt;&gt; &amp;adjustments, libcomp::EnumMap&lt; CorrectTbl, int16_t &gt; &amp;stats, std::shared_ptr&lt; objects::CalculatedEntityState &gt; calcState, bool baseMode)</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>BaseStatsCalculated</name>
      <anchorfile>classchannel_1_1ActiveEntityState.html</anchorfile>
      <anchor>aa348c1deb923b21e640c586dbfc35506</anchor>
      <arglist>(libcomp::DefinitionManager *definitionManager, std::shared_ptr&lt; objects::CalculatedEntityState &gt; calcState, libcomp::EnumMap&lt; CorrectTbl, int16_t &gt; &amp;stats, std::list&lt; std::shared_ptr&lt; objects::MiCorrectTbl &gt;&gt; &amp;adjustments)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>uint8_t</type>
      <name>CalculateLNCType</name>
      <anchorfile>classchannel_1_1ActiveEntityState.html</anchorfile>
      <anchor>a34960657093fd4872631e886df4998e2</anchor>
      <arglist>(int16_t lncPoints) const </arglist>
    </member>
    <member kind="function" protection="protected">
      <type>uint8_t</type>
      <name>CompareAndResetStats</name>
      <anchorfile>classchannel_1_1ActiveEntityState.html</anchorfile>
      <anchor>a3441ec808c0da0ebddb044fce70b52d4</anchor>
      <arglist>(libcomp::EnumMap&lt; CorrectTbl, int16_t &gt; &amp;stats, int32_t extraHP=0)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>GetAdditionalCorrectTbls</name>
      <anchorfile>classchannel_1_1ActiveEntityState.html</anchorfile>
      <anchor>af5fda23fe92a4383277c28073712d106</anchor>
      <arglist>(libcomp::DefinitionManager *definitionManager, std::shared_ptr&lt; objects::CalculatedEntityState &gt; calcState, std::list&lt; std::shared_ptr&lt; objects::MiCorrectTbl &gt;&gt; &amp;adjustments)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>uint32_t</type>
      <name>GetCurrentExpiration</name>
      <anchorfile>classchannel_1_1ActiveEntityState.html</anchorfile>
      <anchor>af93288af34867c22340a7da9f699b2fc</anchor>
      <arglist>(const std::shared_ptr&lt; objects::StatusEffect &gt; &amp;effect, libcomp::DefinitionManager *definitionManager, uint32_t nextTime, uint32_t now)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>std::set&lt; uint32_t &gt;</type>
      <name>GetEffectiveTokuseiSkills</name>
      <anchorfile>classchannel_1_1ActiveEntityState.html</anchorfile>
      <anchor>af5d0540419e8c3d02bb6485603c81133</anchor>
      <arglist>(libcomp::DefinitionManager *definitionManager)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>uint8_t</type>
      <name>RecalculateDemonStats</name>
      <anchorfile>classchannel_1_1ActiveEntityState.html</anchorfile>
      <anchor>aa116a03fff76b59e8577b87cb6070365</anchor>
      <arglist>(libcomp::DefinitionManager *definitionManager, std::shared_ptr&lt; objects::CalculatedEntityState &gt; calcState)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>RegisterNextEffectTime</name>
      <anchorfile>classchannel_1_1ActiveEntityState.html</anchorfile>
      <anchor>abb971ac4a2f29be3a316a5e12a4b51bb</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>RemoveInactiveSwitchSkills</name>
      <anchorfile>classchannel_1_1ActiveEntityState.html</anchorfile>
      <anchor>a7b31da8ab8cf7529a93ae5ab43d8e6cb</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>RemoveStatusEffects</name>
      <anchorfile>classchannel_1_1ActiveEntityState.html</anchorfile>
      <anchor>af048315581b26430c0dc62d15d5078dc</anchor>
      <arglist>(const std::set&lt; uint32_t &gt; &amp;effectTypes)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>SetNextEffectTime</name>
      <anchorfile>classchannel_1_1ActiveEntityState.html</anchorfile>
      <anchor>af9d56a631bf512f8ac22671e78fb3864</anchor>
      <arglist>(uint32_t effectType, uint32_t time)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>SetStatusEffects</name>
      <anchorfile>classchannel_1_1ActiveEntityState.html</anchorfile>
      <anchor>a67dc06dcf10274170f0728f5f066588f</anchor>
      <arglist>(const std::list&lt; libcomp::ObjectReference&lt; objects::StatusEffect &gt;&gt; &amp;effects)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>UpdateNRAChances</name>
      <anchorfile>classchannel_1_1ActiveEntityState.html</anchorfile>
      <anchor>ab085e16b7b68c89e4f92763dbdf8e87d</anchor>
      <arglist>(libcomp::EnumMap&lt; CorrectTbl, int16_t &gt; &amp;stats, std::shared_ptr&lt; objects::CalculatedEntityState &gt; calcState, const std::list&lt; std::shared_ptr&lt; objects::MiCorrectTbl &gt;&gt; &amp;adjustments={})</arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>std::unordered_map&lt; std::string, uint64_t &gt;</type>
      <name>mActionTimes</name>
      <anchorfile>classchannel_1_1ActiveEntityState.html</anchorfile>
      <anchor>a54a791fd0f100e1e098d0c8579cd6298</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>std::shared_ptr&lt; AIState &gt;</type>
      <name>mAIState</name>
      <anchorfile>classchannel_1_1ActiveEntityState.html</anchorfile>
      <anchor>aafcef9fb7f80ea09775a6f00a008ee11</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>bool</type>
      <name>mAlive</name>
      <anchorfile>classchannel_1_1ActiveEntityState.html</anchorfile>
      <anchor>ab1f143a1f6904fd063477232e7477b92</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>std::unordered_map&lt; uint8_t, std::set&lt; uint32_t &gt; &gt;</type>
      <name>mCancelConditions</name>
      <anchorfile>classchannel_1_1ActiveEntityState.html</anchorfile>
      <anchor>a2878947ed3b4a723ba1804841658323b</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>std::shared_ptr&lt; Zone &gt;</type>
      <name>mCurrentZone</name>
      <anchorfile>classchannel_1_1ActiveEntityState.html</anchorfile>
      <anchor>a1dc568369cb1ff4d78a9db83c08375f8</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>bool</type>
      <name>mEffectsActive</name>
      <anchorfile>classchannel_1_1ActiveEntityState.html</anchorfile>
      <anchor>ae7e6dc8b0b6c2ecf09c634c1e7cb701f</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>bool</type>
      <name>mInitialCalc</name>
      <anchorfile>classchannel_1_1ActiveEntityState.html</anchorfile>
      <anchor>ace2da752766739a6149fc2b07b158d59</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>uint64_t</type>
      <name>mLastRefresh</name>
      <anchorfile>classchannel_1_1ActiveEntityState.html</anchorfile>
      <anchor>ade34713c4aec7ca929822a292b0223d3</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>std::mutex</type>
      <name>mLock</name>
      <anchorfile>classchannel_1_1ActiveEntityState.html</anchorfile>
      <anchor>a8ba2ead908829f41707bdd3b36bcbb0a</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>int8_t</type>
      <name>mNextActivatedAbilityID</name>
      <anchorfile>classchannel_1_1ActiveEntityState.html</anchorfile>
      <anchor>a201d4512bc8abb8059a6589999a48bdb</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>std::map&lt; uint32_t, std::set&lt; uint32_t &gt; &gt;</type>
      <name>mNextEffectTimes</name>
      <anchorfile>classchannel_1_1ActiveEntityState.html</anchorfile>
      <anchor>a7cec5b66c750593b2ad1f2b86c03e233</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>std::unordered_map&lt; uint32_t, libcomp::EnumMap&lt; CorrectTbl, std::set&lt; uint8_t &gt; &gt; &gt;</type>
      <name>mNRAShields</name>
      <anchorfile>classchannel_1_1ActiveEntityState.html</anchorfile>
      <anchor>a203b30260e6d7f760c0b8071b6babc51</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>std::set&lt; int32_t &gt;</type>
      <name>mOpponentIDs</name>
      <anchorfile>classchannel_1_1ActiveEntityState.html</anchorfile>
      <anchor>ac62ddc39f590dd556479f21152f0fb47</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>std::unordered_map&lt; uint32_t, std::shared_ptr&lt; objects::StatusEffect &gt; &gt;</type>
      <name>mStatusEffects</name>
      <anchorfile>classchannel_1_1ActiveEntityState.html</anchorfile>
      <anchor>a8339cd0b835314682a8419496ab3ff94</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>std::set&lt; uint32_t &gt;</type>
      <name>mTimeDamageEffects</name>
      <anchorfile>classchannel_1_1ActiveEntityState.html</anchorfile>
      <anchor>ab6b71c46b84f4cb073667dd823ea0491</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>std::shared_ptr&lt; objects::Character &gt;</type>
      <name>mEntity</name>
      <anchorfile>classchannel_1_1ActiveEntityStateImp.html</anchorfile>
      <anchor>a287ca63507001a26ac4e3f954d92f363</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>ActiveEntityStateImp&lt; objects::Demon &gt;</name>
    <filename>classchannel_1_1ActiveEntityStateImp.html</filename>
    <base>channel::ActiveEntityState</base>
    <member kind="function">
      <type></type>
      <name>ActiveEntityStateImp</name>
      <anchorfile>classchannel_1_1ActiveEntityStateImp.html</anchorfile>
      <anchor>a2b24cbd66ea4e0194910ebacead33267</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~ActiveEntityStateImp</name>
      <anchorfile>classchannel_1_1ActiveEntityStateImp.html</anchorfile>
      <anchor>af82a70fc29cf981e70f1b7b1ec833765</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>size_t</type>
      <name>AddRemoveOpponent</name>
      <anchorfile>classchannel_1_1ActiveEntityState.html</anchorfile>
      <anchor>ae1945edacc9db9dd0c0b8fc57ef0ba5a</anchor>
      <arglist>(bool add, int32_t opponentID)</arglist>
    </member>
    <member kind="function">
      <type>std::set&lt; uint32_t &gt;</type>
      <name>AddStatusEffects</name>
      <anchorfile>classchannel_1_1ActiveEntityState.html</anchorfile>
      <anchor>a66bf7fb8d7cd4587e53b9f51128857f2</anchor>
      <arglist>(const AddStatusEffectMap &amp;effects, libcomp::DefinitionManager *definitionManager, uint32_t now=0, bool queueChanges=true)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>CanAct</name>
      <anchorfile>classchannel_1_1ActiveEntityState.html</anchorfile>
      <anchor>ae18bb9a1c3476876a23040c08b5ce37a</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>CancelStatusEffects</name>
      <anchorfile>classchannel_1_1ActiveEntityState.html</anchorfile>
      <anchor>affba706127bff8c636e153cb69c29910</anchor>
      <arglist>(uint8_t cancelFlags)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>CanMove</name>
      <anchorfile>classchannel_1_1ActiveEntityState.html</anchorfile>
      <anchor>af56db75ec5333f4d99949f271c6a38de</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>ExpireStatusEffects</name>
      <anchorfile>classchannel_1_1ActiveEntityState.html</anchorfile>
      <anchor>a513eb93dd9e9b3d8956459355bc08a98</anchor>
      <arglist>(const std::set&lt; uint32_t &gt; &amp;effectTypes)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>ExpireStatusTimes</name>
      <anchorfile>classchannel_1_1ActiveEntityState.html</anchorfile>
      <anchor>a209bb96b9316bf12724e0a48891acc97</anchor>
      <arglist>(uint64_t now)</arglist>
    </member>
    <member kind="function">
      <type>uint64_t</type>
      <name>GetActionTime</name>
      <anchorfile>classchannel_1_1ActiveEntityState.html</anchorfile>
      <anchor>a66d0c35bb1d4ee3e361fafb02fcf629a</anchor>
      <arglist>(const libcomp::String &amp;action)</arglist>
    </member>
    <member kind="function">
      <type>std::shared_ptr&lt; channel::AIState &gt;</type>
      <name>GetAIState</name>
      <anchorfile>classchannel_1_1ActiveEntityState.html</anchorfile>
      <anchor>a7683912a1ff2b1a5dd162b5441a7dcc5</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual std::set&lt; uint32_t &gt;</type>
      <name>GetAllSkills</name>
      <anchorfile>classchannel_1_1ActiveEntityStateImp.html</anchorfile>
      <anchor>ab49cdbfc8d64fb90019f421a9f182597</anchor>
      <arglist>(libcomp::DefinitionManager *definitionManager, bool includeTokusei)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual std::shared_ptr&lt; objects::EntityStats &gt;</type>
      <name>GetCoreStats</name>
      <anchorfile>classchannel_1_1ActiveEntityStateImp.html</anchorfile>
      <anchor>a9f5302b984250a7215f0fd2ba9987d57</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>int16_t</type>
      <name>GetCorrectValue</name>
      <anchorfile>classchannel_1_1ActiveEntityState.html</anchorfile>
      <anchor>aa960f7643649ac1fc26d8baef048f5df</anchor>
      <arglist>(CorrectTbl tableID, std::shared_ptr&lt; objects::CalculatedEntityState &gt; calcState=nullptr)</arglist>
    </member>
    <member kind="function">
      <type>std::list&lt; std::pair&lt; std::shared_ptr&lt; objects::StatusEffect &gt;, uint32_t &gt; &gt;</type>
      <name>GetCurrentStatusEffectStates</name>
      <anchorfile>classchannel_1_1ActiveEntityState.html</anchorfile>
      <anchor>a9364c47b242a5691d9500504c2a3e2f8</anchor>
      <arglist>(libcomp::DefinitionManager *definitionManager, uint32_t now=0)</arglist>
    </member>
    <member kind="function">
      <type>float</type>
      <name>GetDistance</name>
      <anchorfile>classchannel_1_1ActiveEntityState.html</anchorfile>
      <anchor>a38d4d0eba28e2c3dec7bee89df6c244a</anchor>
      <arglist>(float x, float y, bool squared=false)</arglist>
    </member>
    <member kind="function">
      <type>std::shared_ptr&lt; objects::Demon &gt;</type>
      <name>GetEntity</name>
      <anchorfile>classchannel_1_1ActiveEntityStateImp.html</anchorfile>
      <anchor>af4221fa010303086a166e69ca54345ea</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual const libobjgen::UUID</type>
      <name>GetEntityUUID</name>
      <anchorfile>classchannel_1_1ActiveEntityStateImp.html</anchorfile>
      <anchor>aa1e73078f5e79d3b16ecd0e1119ee9f7</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual uint8_t</type>
      <name>GetLNCType</name>
      <anchorfile>classchannel_1_1ActiveEntityStateImp.html</anchorfile>
      <anchor>a4100067bbe779db70c897cf343f7943c</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>float</type>
      <name>GetMovementSpeed</name>
      <anchorfile>classchannel_1_1ActiveEntityState.html</anchorfile>
      <anchor>a3a11050fb65a386e982332da21db2c87</anchor>
      <arglist>(bool altSpeed=false)</arglist>
    </member>
    <member kind="function">
      <type>int8_t</type>
      <name>GetNextActivatedAbilityID</name>
      <anchorfile>classchannel_1_1ActiveEntityState.html</anchorfile>
      <anchor>a3d841d6660fa605b5ca4f5628ec0c667</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>int16_t</type>
      <name>GetNRAChance</name>
      <anchorfile>classchannel_1_1ActiveEntityState.html</anchorfile>
      <anchor>ac468fcaa3b7dd039c9924d1ef55e880a</anchor>
      <arglist>(uint8_t nraIdx, CorrectTbl type, std::shared_ptr&lt; objects::CalculatedEntityState &gt; calcState=nullptr)</arglist>
    </member>
    <member kind="function">
      <type>std::set&lt; int32_t &gt;</type>
      <name>GetOpponentIDs</name>
      <anchorfile>classchannel_1_1ActiveEntityState.html</anchorfile>
      <anchor>a28eb0b46ea358d21487b2f855ef3bfd3</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>const std::unordered_map&lt; uint32_t, std::shared_ptr&lt; objects::StatusEffect &gt; &gt; &amp;</type>
      <name>GetStatusEffects</name>
      <anchorfile>classchannel_1_1ActiveEntityState.html</anchorfile>
      <anchor>af08840e2fef8a61e0737b61a85bb9c20</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>std::shared_ptr&lt; Zone &gt;</type>
      <name>GetZone</name>
      <anchorfile>classchannel_1_1ActiveEntityState.html</anchorfile>
      <anchor>ab75cc6f82b822318ec0816b6ccebd30a</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>HasOpponent</name>
      <anchorfile>classchannel_1_1ActiveEntityState.html</anchorfile>
      <anchor>ad2260cd031d413d44dd727a014cffc8a</anchor>
      <arglist>(int32_t opponentID=0)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>IsAlive</name>
      <anchorfile>classchannel_1_1ActiveEntityState.html</anchorfile>
      <anchor>ab6edd9f3b8abd577890af858d5dc85dc</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>IsLNCType</name>
      <anchorfile>classchannel_1_1ActiveEntityState.html</anchorfile>
      <anchor>ae897ad90fe5cb5f505f2de5a0da374c7</anchor>
      <arglist>(uint8_t lncType, bool invertFlag)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>IsMoving</name>
      <anchorfile>classchannel_1_1ActiveEntityState.html</anchorfile>
      <anchor>aa86a6658fd24aeafde4b18c0c97d0433</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>IsRotating</name>
      <anchorfile>classchannel_1_1ActiveEntityState.html</anchorfile>
      <anchor>af995e3c25687f8b2692dc523f08c04b1</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>Move</name>
      <anchorfile>classchannel_1_1ActiveEntityState.html</anchorfile>
      <anchor>ae83be0aeee9a600a99286fc1db8fc8d1</anchor>
      <arglist>(float xPos, float yPos, uint64_t now)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>PopEffectTicks</name>
      <anchorfile>classchannel_1_1ActiveEntityState.html</anchorfile>
      <anchor>a0539c15041b0ac7c49aa586f4b28eceb</anchor>
      <arglist>(libcomp::DefinitionManager *definitionManager, uint32_t time, int32_t &amp;hpTDamage, int32_t &amp;mpTDamage, std::set&lt; uint32_t &gt; &amp;added, std::set&lt; uint32_t &gt; &amp;updated, std::set&lt; uint32_t &gt; &amp;removed)</arglist>
    </member>
    <member kind="function">
      <type>std::set&lt; uint8_t &gt;</type>
      <name>PopNRAShields</name>
      <anchorfile>classchannel_1_1ActiveEntityState.html</anchorfile>
      <anchor>aa40113ab2ad642f5a232f1807dcaca76</anchor>
      <arglist>(const std::list&lt; CorrectTbl &gt; &amp;types)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual bool</type>
      <name>Ready</name>
      <anchorfile>classchannel_1_1ActiveEntityStateImp.html</anchorfile>
      <anchor>a66ce4e4014373250c4e7a32108fdda78</anchor>
      <arglist>(bool ignoreDisplayState=false)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual bool</type>
      <name>RecalcDisabledSkills</name>
      <anchorfile>classchannel_1_1ActiveEntityState.html</anchorfile>
      <anchor>a59bfa238a72ef7535e35ebfd356c60d8</anchor>
      <arglist>(libcomp::DefinitionManager *definitionManager)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual uint8_t</type>
      <name>RecalculateStats</name>
      <anchorfile>classchannel_1_1ActiveEntityStateImp.html</anchorfile>
      <anchor>aa13eeaec58b7c32b8d8569f026b59e3f</anchor>
      <arglist>(libcomp::DefinitionManager *definitionManager, std::shared_ptr&lt; objects::CalculatedEntityState &gt; calcState=nullptr)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>RefreshCurrentPosition</name>
      <anchorfile>classchannel_1_1ActiveEntityState.html</anchorfile>
      <anchor>ad58ca1704077c66eae6e6cfa5f93d137</anchor>
      <arglist>(uint64_t now)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>RefreshKnockback</name>
      <anchorfile>classchannel_1_1ActiveEntityState.html</anchorfile>
      <anchor>ad61a7487707c26af826391961d0fd7a5</anchor>
      <arglist>(uint64_t now, float recoveryBoost)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>Rotate</name>
      <anchorfile>classchannel_1_1ActiveEntityState.html</anchorfile>
      <anchor>ae22c1b7e0c0ff0217bf4d5d255e4db13</anchor>
      <arglist>(float rot, uint64_t now)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetActionTime</name>
      <anchorfile>classchannel_1_1ActiveEntityState.html</anchorfile>
      <anchor>a5eca26bba7bcac79034d2adfa7f584f7</anchor>
      <arglist>(const libcomp::String &amp;action, uint64_t time)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetAIState</name>
      <anchorfile>classchannel_1_1ActiveEntityState.html</anchorfile>
      <anchor>a23f9604c12ecf053dab3cb4511c7a624</anchor>
      <arglist>(const std::shared_ptr&lt; channel::AIState &gt; &amp;aiState)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetEntity</name>
      <anchorfile>classchannel_1_1ActiveEntityStateImp.html</anchorfile>
      <anchor>a081b5d9be8d1e94e5ac3a1c04e33a6cc</anchor>
      <arglist>(const std::shared_ptr&lt; objects::Demon &gt; &amp;entity, const std::shared_ptr&lt; objects::MiDevilData &gt; &amp;devilData)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>SetHPMP</name>
      <anchorfile>classchannel_1_1ActiveEntityState.html</anchorfile>
      <anchor>a6616f760c961b349baf3b81d0bea31dc</anchor>
      <arglist>(int32_t hp, int32_t mp, bool adjust, bool canOverflow=false)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>SetHPMP</name>
      <anchorfile>classchannel_1_1ActiveEntityState.html</anchorfile>
      <anchor>a7c6d6218e677353ee81718c7a821be17</anchor>
      <arglist>(int32_t hp, int32_t mp, bool adjust, bool canOverflow, int32_t clenchChance, int32_t &amp;hpAdjusted, int32_t &amp;mpAdjusted)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetStatusEffects</name>
      <anchorfile>classchannel_1_1ActiveEntityState.html</anchorfile>
      <anchor>abc6fe40cb7d3047ea41b17ff76c3f7df</anchor>
      <arglist>(const std::list&lt; std::shared_ptr&lt; objects::StatusEffect &gt;&gt; &amp;effects)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetStatusEffectsActive</name>
      <anchorfile>classchannel_1_1ActiveEntityState.html</anchorfile>
      <anchor>ad037282b3c14165da135e4205658a951</anchor>
      <arglist>(bool activate, libcomp::DefinitionManager *definitionManager, uint32_t now=0)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetZone</name>
      <anchorfile>classchannel_1_1ActiveEntityState.html</anchorfile>
      <anchor>a30007b72d6e529ca1bb069a699f4ed31</anchor>
      <arglist>(const std::shared_ptr&lt; Zone &gt; &amp;zone, bool updatePrevious=true)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>SkillAvailable</name>
      <anchorfile>classchannel_1_1ActiveEntityState.html</anchorfile>
      <anchor>a7aaf79e1f896744447d2db61abb9c9ec</anchor>
      <arglist>(uint32_t skillID)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>Stop</name>
      <anchorfile>classchannel_1_1ActiveEntityState.html</anchorfile>
      <anchor>a2cad211a8af9bca5239ab9f7579f3120</anchor>
      <arglist>(uint64_t now)</arglist>
    </member>
    <member kind="function">
      <type>float</type>
      <name>UpdateKnockback</name>
      <anchorfile>classchannel_1_1ActiveEntityState.html</anchorfile>
      <anchor>ab4c9670f327a31be928b619b000110d4</anchor>
      <arglist>(uint64_t now, float decrease, float recoveryBoost)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static float</type>
      <name>CorrectRotation</name>
      <anchorfile>classchannel_1_1ActiveEntityState.html</anchorfile>
      <anchor>a2d02b85123163c97fd1e593eb514640b</anchor>
      <arglist>(float rot)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>ActivateStatusEffect</name>
      <anchorfile>classchannel_1_1ActiveEntityState.html</anchorfile>
      <anchor>a002f85b0ac7e3213d13cce85ae1a5b1c</anchor>
      <arglist>(const std::shared_ptr&lt; objects::StatusEffect &gt; &amp;effect, libcomp::DefinitionManager *definitionManager, uint32_t now, bool timeOnly)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>AdjustStats</name>
      <anchorfile>classchannel_1_1ActiveEntityState.html</anchorfile>
      <anchor>a318eb1d9febb3704d218b14cde573230</anchor>
      <arglist>(const std::list&lt; std::shared_ptr&lt; objects::MiCorrectTbl &gt;&gt; &amp;adjustments, libcomp::EnumMap&lt; CorrectTbl, int16_t &gt; &amp;stats, std::shared_ptr&lt; objects::CalculatedEntityState &gt; calcState, bool baseMode)</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>BaseStatsCalculated</name>
      <anchorfile>classchannel_1_1ActiveEntityState.html</anchorfile>
      <anchor>aa348c1deb923b21e640c586dbfc35506</anchor>
      <arglist>(libcomp::DefinitionManager *definitionManager, std::shared_ptr&lt; objects::CalculatedEntityState &gt; calcState, libcomp::EnumMap&lt; CorrectTbl, int16_t &gt; &amp;stats, std::list&lt; std::shared_ptr&lt; objects::MiCorrectTbl &gt;&gt; &amp;adjustments)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>uint8_t</type>
      <name>CalculateLNCType</name>
      <anchorfile>classchannel_1_1ActiveEntityState.html</anchorfile>
      <anchor>a34960657093fd4872631e886df4998e2</anchor>
      <arglist>(int16_t lncPoints) const </arglist>
    </member>
    <member kind="function" protection="protected">
      <type>uint8_t</type>
      <name>CompareAndResetStats</name>
      <anchorfile>classchannel_1_1ActiveEntityState.html</anchorfile>
      <anchor>a3441ec808c0da0ebddb044fce70b52d4</anchor>
      <arglist>(libcomp::EnumMap&lt; CorrectTbl, int16_t &gt; &amp;stats, int32_t extraHP=0)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>GetAdditionalCorrectTbls</name>
      <anchorfile>classchannel_1_1ActiveEntityState.html</anchorfile>
      <anchor>af5fda23fe92a4383277c28073712d106</anchor>
      <arglist>(libcomp::DefinitionManager *definitionManager, std::shared_ptr&lt; objects::CalculatedEntityState &gt; calcState, std::list&lt; std::shared_ptr&lt; objects::MiCorrectTbl &gt;&gt; &amp;adjustments)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>uint32_t</type>
      <name>GetCurrentExpiration</name>
      <anchorfile>classchannel_1_1ActiveEntityState.html</anchorfile>
      <anchor>af93288af34867c22340a7da9f699b2fc</anchor>
      <arglist>(const std::shared_ptr&lt; objects::StatusEffect &gt; &amp;effect, libcomp::DefinitionManager *definitionManager, uint32_t nextTime, uint32_t now)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>std::set&lt; uint32_t &gt;</type>
      <name>GetEffectiveTokuseiSkills</name>
      <anchorfile>classchannel_1_1ActiveEntityState.html</anchorfile>
      <anchor>af5d0540419e8c3d02bb6485603c81133</anchor>
      <arglist>(libcomp::DefinitionManager *definitionManager)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>uint8_t</type>
      <name>RecalculateDemonStats</name>
      <anchorfile>classchannel_1_1ActiveEntityState.html</anchorfile>
      <anchor>aa116a03fff76b59e8577b87cb6070365</anchor>
      <arglist>(libcomp::DefinitionManager *definitionManager, std::shared_ptr&lt; objects::CalculatedEntityState &gt; calcState)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>RegisterNextEffectTime</name>
      <anchorfile>classchannel_1_1ActiveEntityState.html</anchorfile>
      <anchor>abb971ac4a2f29be3a316a5e12a4b51bb</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>RemoveInactiveSwitchSkills</name>
      <anchorfile>classchannel_1_1ActiveEntityState.html</anchorfile>
      <anchor>a7b31da8ab8cf7529a93ae5ab43d8e6cb</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>RemoveStatusEffects</name>
      <anchorfile>classchannel_1_1ActiveEntityState.html</anchorfile>
      <anchor>af048315581b26430c0dc62d15d5078dc</anchor>
      <arglist>(const std::set&lt; uint32_t &gt; &amp;effectTypes)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>SetNextEffectTime</name>
      <anchorfile>classchannel_1_1ActiveEntityState.html</anchorfile>
      <anchor>af9d56a631bf512f8ac22671e78fb3864</anchor>
      <arglist>(uint32_t effectType, uint32_t time)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>SetStatusEffects</name>
      <anchorfile>classchannel_1_1ActiveEntityState.html</anchorfile>
      <anchor>a67dc06dcf10274170f0728f5f066588f</anchor>
      <arglist>(const std::list&lt; libcomp::ObjectReference&lt; objects::StatusEffect &gt;&gt; &amp;effects)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>UpdateNRAChances</name>
      <anchorfile>classchannel_1_1ActiveEntityState.html</anchorfile>
      <anchor>ab085e16b7b68c89e4f92763dbdf8e87d</anchor>
      <arglist>(libcomp::EnumMap&lt; CorrectTbl, int16_t &gt; &amp;stats, std::shared_ptr&lt; objects::CalculatedEntityState &gt; calcState, const std::list&lt; std::shared_ptr&lt; objects::MiCorrectTbl &gt;&gt; &amp;adjustments={})</arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>std::unordered_map&lt; std::string, uint64_t &gt;</type>
      <name>mActionTimes</name>
      <anchorfile>classchannel_1_1ActiveEntityState.html</anchorfile>
      <anchor>a54a791fd0f100e1e098d0c8579cd6298</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>std::shared_ptr&lt; AIState &gt;</type>
      <name>mAIState</name>
      <anchorfile>classchannel_1_1ActiveEntityState.html</anchorfile>
      <anchor>aafcef9fb7f80ea09775a6f00a008ee11</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>bool</type>
      <name>mAlive</name>
      <anchorfile>classchannel_1_1ActiveEntityState.html</anchorfile>
      <anchor>ab1f143a1f6904fd063477232e7477b92</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>std::unordered_map&lt; uint8_t, std::set&lt; uint32_t &gt; &gt;</type>
      <name>mCancelConditions</name>
      <anchorfile>classchannel_1_1ActiveEntityState.html</anchorfile>
      <anchor>a2878947ed3b4a723ba1804841658323b</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>std::shared_ptr&lt; Zone &gt;</type>
      <name>mCurrentZone</name>
      <anchorfile>classchannel_1_1ActiveEntityState.html</anchorfile>
      <anchor>a1dc568369cb1ff4d78a9db83c08375f8</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>bool</type>
      <name>mEffectsActive</name>
      <anchorfile>classchannel_1_1ActiveEntityState.html</anchorfile>
      <anchor>ae7e6dc8b0b6c2ecf09c634c1e7cb701f</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>bool</type>
      <name>mInitialCalc</name>
      <anchorfile>classchannel_1_1ActiveEntityState.html</anchorfile>
      <anchor>ace2da752766739a6149fc2b07b158d59</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>uint64_t</type>
      <name>mLastRefresh</name>
      <anchorfile>classchannel_1_1ActiveEntityState.html</anchorfile>
      <anchor>ade34713c4aec7ca929822a292b0223d3</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>std::mutex</type>
      <name>mLock</name>
      <anchorfile>classchannel_1_1ActiveEntityState.html</anchorfile>
      <anchor>a8ba2ead908829f41707bdd3b36bcbb0a</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>int8_t</type>
      <name>mNextActivatedAbilityID</name>
      <anchorfile>classchannel_1_1ActiveEntityState.html</anchorfile>
      <anchor>a201d4512bc8abb8059a6589999a48bdb</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>std::map&lt; uint32_t, std::set&lt; uint32_t &gt; &gt;</type>
      <name>mNextEffectTimes</name>
      <anchorfile>classchannel_1_1ActiveEntityState.html</anchorfile>
      <anchor>a7cec5b66c750593b2ad1f2b86c03e233</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>std::unordered_map&lt; uint32_t, libcomp::EnumMap&lt; CorrectTbl, std::set&lt; uint8_t &gt; &gt; &gt;</type>
      <name>mNRAShields</name>
      <anchorfile>classchannel_1_1ActiveEntityState.html</anchorfile>
      <anchor>a203b30260e6d7f760c0b8071b6babc51</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>std::set&lt; int32_t &gt;</type>
      <name>mOpponentIDs</name>
      <anchorfile>classchannel_1_1ActiveEntityState.html</anchorfile>
      <anchor>ac62ddc39f590dd556479f21152f0fb47</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>std::unordered_map&lt; uint32_t, std::shared_ptr&lt; objects::StatusEffect &gt; &gt;</type>
      <name>mStatusEffects</name>
      <anchorfile>classchannel_1_1ActiveEntityState.html</anchorfile>
      <anchor>a8339cd0b835314682a8419496ab3ff94</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>std::set&lt; uint32_t &gt;</type>
      <name>mTimeDamageEffects</name>
      <anchorfile>classchannel_1_1ActiveEntityState.html</anchorfile>
      <anchor>ab6b71c46b84f4cb073667dd823ea0491</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>std::shared_ptr&lt; objects::Demon &gt;</type>
      <name>mEntity</name>
      <anchorfile>classchannel_1_1ActiveEntityStateImp.html</anchorfile>
      <anchor>a287ca63507001a26ac4e3f954d92f363</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>ActiveEntityStateImp&lt; objects::Enemy &gt;</name>
    <filename>classchannel_1_1ActiveEntityStateImp.html</filename>
    <base>channel::ActiveEntityState</base>
    <member kind="function">
      <type></type>
      <name>ActiveEntityStateImp</name>
      <anchorfile>classchannel_1_1ActiveEntityStateImp.html</anchorfile>
      <anchor>a2b24cbd66ea4e0194910ebacead33267</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~ActiveEntityStateImp</name>
      <anchorfile>classchannel_1_1ActiveEntityStateImp.html</anchorfile>
      <anchor>af82a70fc29cf981e70f1b7b1ec833765</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>size_t</type>
      <name>AddRemoveOpponent</name>
      <anchorfile>classchannel_1_1ActiveEntityState.html</anchorfile>
      <anchor>ae1945edacc9db9dd0c0b8fc57ef0ba5a</anchor>
      <arglist>(bool add, int32_t opponentID)</arglist>
    </member>
    <member kind="function">
      <type>std::set&lt; uint32_t &gt;</type>
      <name>AddStatusEffects</name>
      <anchorfile>classchannel_1_1ActiveEntityState.html</anchorfile>
      <anchor>a66bf7fb8d7cd4587e53b9f51128857f2</anchor>
      <arglist>(const AddStatusEffectMap &amp;effects, libcomp::DefinitionManager *definitionManager, uint32_t now=0, bool queueChanges=true)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>CanAct</name>
      <anchorfile>classchannel_1_1ActiveEntityState.html</anchorfile>
      <anchor>ae18bb9a1c3476876a23040c08b5ce37a</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>CancelStatusEffects</name>
      <anchorfile>classchannel_1_1ActiveEntityState.html</anchorfile>
      <anchor>affba706127bff8c636e153cb69c29910</anchor>
      <arglist>(uint8_t cancelFlags)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>CanMove</name>
      <anchorfile>classchannel_1_1ActiveEntityState.html</anchorfile>
      <anchor>af56db75ec5333f4d99949f271c6a38de</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>ExpireStatusEffects</name>
      <anchorfile>classchannel_1_1ActiveEntityState.html</anchorfile>
      <anchor>a513eb93dd9e9b3d8956459355bc08a98</anchor>
      <arglist>(const std::set&lt; uint32_t &gt; &amp;effectTypes)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>ExpireStatusTimes</name>
      <anchorfile>classchannel_1_1ActiveEntityState.html</anchorfile>
      <anchor>a209bb96b9316bf12724e0a48891acc97</anchor>
      <arglist>(uint64_t now)</arglist>
    </member>
    <member kind="function">
      <type>uint64_t</type>
      <name>GetActionTime</name>
      <anchorfile>classchannel_1_1ActiveEntityState.html</anchorfile>
      <anchor>a66d0c35bb1d4ee3e361fafb02fcf629a</anchor>
      <arglist>(const libcomp::String &amp;action)</arglist>
    </member>
    <member kind="function">
      <type>std::shared_ptr&lt; channel::AIState &gt;</type>
      <name>GetAIState</name>
      <anchorfile>classchannel_1_1ActiveEntityState.html</anchorfile>
      <anchor>a7683912a1ff2b1a5dd162b5441a7dcc5</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual std::set&lt; uint32_t &gt;</type>
      <name>GetAllSkills</name>
      <anchorfile>classchannel_1_1ActiveEntityStateImp.html</anchorfile>
      <anchor>ab49cdbfc8d64fb90019f421a9f182597</anchor>
      <arglist>(libcomp::DefinitionManager *definitionManager, bool includeTokusei)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual std::shared_ptr&lt; objects::EntityStats &gt;</type>
      <name>GetCoreStats</name>
      <anchorfile>classchannel_1_1ActiveEntityStateImp.html</anchorfile>
      <anchor>a9f5302b984250a7215f0fd2ba9987d57</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>int16_t</type>
      <name>GetCorrectValue</name>
      <anchorfile>classchannel_1_1ActiveEntityState.html</anchorfile>
      <anchor>aa960f7643649ac1fc26d8baef048f5df</anchor>
      <arglist>(CorrectTbl tableID, std::shared_ptr&lt; objects::CalculatedEntityState &gt; calcState=nullptr)</arglist>
    </member>
    <member kind="function">
      <type>std::list&lt; std::pair&lt; std::shared_ptr&lt; objects::StatusEffect &gt;, uint32_t &gt; &gt;</type>
      <name>GetCurrentStatusEffectStates</name>
      <anchorfile>classchannel_1_1ActiveEntityState.html</anchorfile>
      <anchor>a9364c47b242a5691d9500504c2a3e2f8</anchor>
      <arglist>(libcomp::DefinitionManager *definitionManager, uint32_t now=0)</arglist>
    </member>
    <member kind="function">
      <type>float</type>
      <name>GetDistance</name>
      <anchorfile>classchannel_1_1ActiveEntityState.html</anchorfile>
      <anchor>a38d4d0eba28e2c3dec7bee89df6c244a</anchor>
      <arglist>(float x, float y, bool squared=false)</arglist>
    </member>
    <member kind="function">
      <type>std::shared_ptr&lt; objects::Enemy &gt;</type>
      <name>GetEntity</name>
      <anchorfile>classchannel_1_1ActiveEntityStateImp.html</anchorfile>
      <anchor>af4221fa010303086a166e69ca54345ea</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual const libobjgen::UUID</type>
      <name>GetEntityUUID</name>
      <anchorfile>classchannel_1_1ActiveEntityStateImp.html</anchorfile>
      <anchor>aa1e73078f5e79d3b16ecd0e1119ee9f7</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual uint8_t</type>
      <name>GetLNCType</name>
      <anchorfile>classchannel_1_1ActiveEntityStateImp.html</anchorfile>
      <anchor>a4100067bbe779db70c897cf343f7943c</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>float</type>
      <name>GetMovementSpeed</name>
      <anchorfile>classchannel_1_1ActiveEntityState.html</anchorfile>
      <anchor>a3a11050fb65a386e982332da21db2c87</anchor>
      <arglist>(bool altSpeed=false)</arglist>
    </member>
    <member kind="function">
      <type>int8_t</type>
      <name>GetNextActivatedAbilityID</name>
      <anchorfile>classchannel_1_1ActiveEntityState.html</anchorfile>
      <anchor>a3d841d6660fa605b5ca4f5628ec0c667</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>int16_t</type>
      <name>GetNRAChance</name>
      <anchorfile>classchannel_1_1ActiveEntityState.html</anchorfile>
      <anchor>ac468fcaa3b7dd039c9924d1ef55e880a</anchor>
      <arglist>(uint8_t nraIdx, CorrectTbl type, std::shared_ptr&lt; objects::CalculatedEntityState &gt; calcState=nullptr)</arglist>
    </member>
    <member kind="function">
      <type>std::set&lt; int32_t &gt;</type>
      <name>GetOpponentIDs</name>
      <anchorfile>classchannel_1_1ActiveEntityState.html</anchorfile>
      <anchor>a28eb0b46ea358d21487b2f855ef3bfd3</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>const std::unordered_map&lt; uint32_t, std::shared_ptr&lt; objects::StatusEffect &gt; &gt; &amp;</type>
      <name>GetStatusEffects</name>
      <anchorfile>classchannel_1_1ActiveEntityState.html</anchorfile>
      <anchor>af08840e2fef8a61e0737b61a85bb9c20</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>std::shared_ptr&lt; Zone &gt;</type>
      <name>GetZone</name>
      <anchorfile>classchannel_1_1ActiveEntityState.html</anchorfile>
      <anchor>ab75cc6f82b822318ec0816b6ccebd30a</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>HasOpponent</name>
      <anchorfile>classchannel_1_1ActiveEntityState.html</anchorfile>
      <anchor>ad2260cd031d413d44dd727a014cffc8a</anchor>
      <arglist>(int32_t opponentID=0)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>IsAlive</name>
      <anchorfile>classchannel_1_1ActiveEntityState.html</anchorfile>
      <anchor>ab6edd9f3b8abd577890af858d5dc85dc</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>IsLNCType</name>
      <anchorfile>classchannel_1_1ActiveEntityState.html</anchorfile>
      <anchor>ae897ad90fe5cb5f505f2de5a0da374c7</anchor>
      <arglist>(uint8_t lncType, bool invertFlag)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>IsMoving</name>
      <anchorfile>classchannel_1_1ActiveEntityState.html</anchorfile>
      <anchor>aa86a6658fd24aeafde4b18c0c97d0433</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>IsRotating</name>
      <anchorfile>classchannel_1_1ActiveEntityState.html</anchorfile>
      <anchor>af995e3c25687f8b2692dc523f08c04b1</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>Move</name>
      <anchorfile>classchannel_1_1ActiveEntityState.html</anchorfile>
      <anchor>ae83be0aeee9a600a99286fc1db8fc8d1</anchor>
      <arglist>(float xPos, float yPos, uint64_t now)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>PopEffectTicks</name>
      <anchorfile>classchannel_1_1ActiveEntityState.html</anchorfile>
      <anchor>a0539c15041b0ac7c49aa586f4b28eceb</anchor>
      <arglist>(libcomp::DefinitionManager *definitionManager, uint32_t time, int32_t &amp;hpTDamage, int32_t &amp;mpTDamage, std::set&lt; uint32_t &gt; &amp;added, std::set&lt; uint32_t &gt; &amp;updated, std::set&lt; uint32_t &gt; &amp;removed)</arglist>
    </member>
    <member kind="function">
      <type>std::set&lt; uint8_t &gt;</type>
      <name>PopNRAShields</name>
      <anchorfile>classchannel_1_1ActiveEntityState.html</anchorfile>
      <anchor>aa40113ab2ad642f5a232f1807dcaca76</anchor>
      <arglist>(const std::list&lt; CorrectTbl &gt; &amp;types)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual bool</type>
      <name>Ready</name>
      <anchorfile>classchannel_1_1ActiveEntityStateImp.html</anchorfile>
      <anchor>a66ce4e4014373250c4e7a32108fdda78</anchor>
      <arglist>(bool ignoreDisplayState=false)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual bool</type>
      <name>RecalcDisabledSkills</name>
      <anchorfile>classchannel_1_1ActiveEntityState.html</anchorfile>
      <anchor>a59bfa238a72ef7535e35ebfd356c60d8</anchor>
      <arglist>(libcomp::DefinitionManager *definitionManager)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual uint8_t</type>
      <name>RecalculateStats</name>
      <anchorfile>classchannel_1_1ActiveEntityStateImp.html</anchorfile>
      <anchor>aa13eeaec58b7c32b8d8569f026b59e3f</anchor>
      <arglist>(libcomp::DefinitionManager *definitionManager, std::shared_ptr&lt; objects::CalculatedEntityState &gt; calcState=nullptr)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>RefreshCurrentPosition</name>
      <anchorfile>classchannel_1_1ActiveEntityState.html</anchorfile>
      <anchor>ad58ca1704077c66eae6e6cfa5f93d137</anchor>
      <arglist>(uint64_t now)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>RefreshKnockback</name>
      <anchorfile>classchannel_1_1ActiveEntityState.html</anchorfile>
      <anchor>ad61a7487707c26af826391961d0fd7a5</anchor>
      <arglist>(uint64_t now, float recoveryBoost)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>Rotate</name>
      <anchorfile>classchannel_1_1ActiveEntityState.html</anchorfile>
      <anchor>ae22c1b7e0c0ff0217bf4d5d255e4db13</anchor>
      <arglist>(float rot, uint64_t now)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetActionTime</name>
      <anchorfile>classchannel_1_1ActiveEntityState.html</anchorfile>
      <anchor>a5eca26bba7bcac79034d2adfa7f584f7</anchor>
      <arglist>(const libcomp::String &amp;action, uint64_t time)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetAIState</name>
      <anchorfile>classchannel_1_1ActiveEntityState.html</anchorfile>
      <anchor>a23f9604c12ecf053dab3cb4511c7a624</anchor>
      <arglist>(const std::shared_ptr&lt; channel::AIState &gt; &amp;aiState)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetEntity</name>
      <anchorfile>classchannel_1_1ActiveEntityStateImp.html</anchorfile>
      <anchor>a081b5d9be8d1e94e5ac3a1c04e33a6cc</anchor>
      <arglist>(const std::shared_ptr&lt; objects::Enemy &gt; &amp;entity, const std::shared_ptr&lt; objects::MiDevilData &gt; &amp;devilData)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>SetHPMP</name>
      <anchorfile>classchannel_1_1ActiveEntityState.html</anchorfile>
      <anchor>a6616f760c961b349baf3b81d0bea31dc</anchor>
      <arglist>(int32_t hp, int32_t mp, bool adjust, bool canOverflow=false)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>SetHPMP</name>
      <anchorfile>classchannel_1_1ActiveEntityState.html</anchorfile>
      <anchor>a7c6d6218e677353ee81718c7a821be17</anchor>
      <arglist>(int32_t hp, int32_t mp, bool adjust, bool canOverflow, int32_t clenchChance, int32_t &amp;hpAdjusted, int32_t &amp;mpAdjusted)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetStatusEffects</name>
      <anchorfile>classchannel_1_1ActiveEntityState.html</anchorfile>
      <anchor>abc6fe40cb7d3047ea41b17ff76c3f7df</anchor>
      <arglist>(const std::list&lt; std::shared_ptr&lt; objects::StatusEffect &gt;&gt; &amp;effects)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetStatusEffectsActive</name>
      <anchorfile>classchannel_1_1ActiveEntityState.html</anchorfile>
      <anchor>ad037282b3c14165da135e4205658a951</anchor>
      <arglist>(bool activate, libcomp::DefinitionManager *definitionManager, uint32_t now=0)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetZone</name>
      <anchorfile>classchannel_1_1ActiveEntityState.html</anchorfile>
      <anchor>a30007b72d6e529ca1bb069a699f4ed31</anchor>
      <arglist>(const std::shared_ptr&lt; Zone &gt; &amp;zone, bool updatePrevious=true)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>SkillAvailable</name>
      <anchorfile>classchannel_1_1ActiveEntityState.html</anchorfile>
      <anchor>a7aaf79e1f896744447d2db61abb9c9ec</anchor>
      <arglist>(uint32_t skillID)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>Stop</name>
      <anchorfile>classchannel_1_1ActiveEntityState.html</anchorfile>
      <anchor>a2cad211a8af9bca5239ab9f7579f3120</anchor>
      <arglist>(uint64_t now)</arglist>
    </member>
    <member kind="function">
      <type>float</type>
      <name>UpdateKnockback</name>
      <anchorfile>classchannel_1_1ActiveEntityState.html</anchorfile>
      <anchor>ab4c9670f327a31be928b619b000110d4</anchor>
      <arglist>(uint64_t now, float decrease, float recoveryBoost)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static float</type>
      <name>CorrectRotation</name>
      <anchorfile>classchannel_1_1ActiveEntityState.html</anchorfile>
      <anchor>a2d02b85123163c97fd1e593eb514640b</anchor>
      <arglist>(float rot)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>ActivateStatusEffect</name>
      <anchorfile>classchannel_1_1ActiveEntityState.html</anchorfile>
      <anchor>a002f85b0ac7e3213d13cce85ae1a5b1c</anchor>
      <arglist>(const std::shared_ptr&lt; objects::StatusEffect &gt; &amp;effect, libcomp::DefinitionManager *definitionManager, uint32_t now, bool timeOnly)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>AdjustStats</name>
      <anchorfile>classchannel_1_1ActiveEntityState.html</anchorfile>
      <anchor>a318eb1d9febb3704d218b14cde573230</anchor>
      <arglist>(const std::list&lt; std::shared_ptr&lt; objects::MiCorrectTbl &gt;&gt; &amp;adjustments, libcomp::EnumMap&lt; CorrectTbl, int16_t &gt; &amp;stats, std::shared_ptr&lt; objects::CalculatedEntityState &gt; calcState, bool baseMode)</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>BaseStatsCalculated</name>
      <anchorfile>classchannel_1_1ActiveEntityState.html</anchorfile>
      <anchor>aa348c1deb923b21e640c586dbfc35506</anchor>
      <arglist>(libcomp::DefinitionManager *definitionManager, std::shared_ptr&lt; objects::CalculatedEntityState &gt; calcState, libcomp::EnumMap&lt; CorrectTbl, int16_t &gt; &amp;stats, std::list&lt; std::shared_ptr&lt; objects::MiCorrectTbl &gt;&gt; &amp;adjustments)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>uint8_t</type>
      <name>CalculateLNCType</name>
      <anchorfile>classchannel_1_1ActiveEntityState.html</anchorfile>
      <anchor>a34960657093fd4872631e886df4998e2</anchor>
      <arglist>(int16_t lncPoints) const </arglist>
    </member>
    <member kind="function" protection="protected">
      <type>uint8_t</type>
      <name>CompareAndResetStats</name>
      <anchorfile>classchannel_1_1ActiveEntityState.html</anchorfile>
      <anchor>a3441ec808c0da0ebddb044fce70b52d4</anchor>
      <arglist>(libcomp::EnumMap&lt; CorrectTbl, int16_t &gt; &amp;stats, int32_t extraHP=0)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>GetAdditionalCorrectTbls</name>
      <anchorfile>classchannel_1_1ActiveEntityState.html</anchorfile>
      <anchor>af5fda23fe92a4383277c28073712d106</anchor>
      <arglist>(libcomp::DefinitionManager *definitionManager, std::shared_ptr&lt; objects::CalculatedEntityState &gt; calcState, std::list&lt; std::shared_ptr&lt; objects::MiCorrectTbl &gt;&gt; &amp;adjustments)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>uint32_t</type>
      <name>GetCurrentExpiration</name>
      <anchorfile>classchannel_1_1ActiveEntityState.html</anchorfile>
      <anchor>af93288af34867c22340a7da9f699b2fc</anchor>
      <arglist>(const std::shared_ptr&lt; objects::StatusEffect &gt; &amp;effect, libcomp::DefinitionManager *definitionManager, uint32_t nextTime, uint32_t now)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>std::set&lt; uint32_t &gt;</type>
      <name>GetEffectiveTokuseiSkills</name>
      <anchorfile>classchannel_1_1ActiveEntityState.html</anchorfile>
      <anchor>af5d0540419e8c3d02bb6485603c81133</anchor>
      <arglist>(libcomp::DefinitionManager *definitionManager)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>uint8_t</type>
      <name>RecalculateDemonStats</name>
      <anchorfile>classchannel_1_1ActiveEntityState.html</anchorfile>
      <anchor>aa116a03fff76b59e8577b87cb6070365</anchor>
      <arglist>(libcomp::DefinitionManager *definitionManager, std::shared_ptr&lt; objects::CalculatedEntityState &gt; calcState)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>RegisterNextEffectTime</name>
      <anchorfile>classchannel_1_1ActiveEntityState.html</anchorfile>
      <anchor>abb971ac4a2f29be3a316a5e12a4b51bb</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>RemoveInactiveSwitchSkills</name>
      <anchorfile>classchannel_1_1ActiveEntityState.html</anchorfile>
      <anchor>a7b31da8ab8cf7529a93ae5ab43d8e6cb</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>RemoveStatusEffects</name>
      <anchorfile>classchannel_1_1ActiveEntityState.html</anchorfile>
      <anchor>af048315581b26430c0dc62d15d5078dc</anchor>
      <arglist>(const std::set&lt; uint32_t &gt; &amp;effectTypes)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>SetNextEffectTime</name>
      <anchorfile>classchannel_1_1ActiveEntityState.html</anchorfile>
      <anchor>af9d56a631bf512f8ac22671e78fb3864</anchor>
      <arglist>(uint32_t effectType, uint32_t time)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>SetStatusEffects</name>
      <anchorfile>classchannel_1_1ActiveEntityState.html</anchorfile>
      <anchor>a67dc06dcf10274170f0728f5f066588f</anchor>
      <arglist>(const std::list&lt; libcomp::ObjectReference&lt; objects::StatusEffect &gt;&gt; &amp;effects)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>UpdateNRAChances</name>
      <anchorfile>classchannel_1_1ActiveEntityState.html</anchorfile>
      <anchor>ab085e16b7b68c89e4f92763dbdf8e87d</anchor>
      <arglist>(libcomp::EnumMap&lt; CorrectTbl, int16_t &gt; &amp;stats, std::shared_ptr&lt; objects::CalculatedEntityState &gt; calcState, const std::list&lt; std::shared_ptr&lt; objects::MiCorrectTbl &gt;&gt; &amp;adjustments={})</arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>std::unordered_map&lt; std::string, uint64_t &gt;</type>
      <name>mActionTimes</name>
      <anchorfile>classchannel_1_1ActiveEntityState.html</anchorfile>
      <anchor>a54a791fd0f100e1e098d0c8579cd6298</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>std::shared_ptr&lt; AIState &gt;</type>
      <name>mAIState</name>
      <anchorfile>classchannel_1_1ActiveEntityState.html</anchorfile>
      <anchor>aafcef9fb7f80ea09775a6f00a008ee11</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>bool</type>
      <name>mAlive</name>
      <anchorfile>classchannel_1_1ActiveEntityState.html</anchorfile>
      <anchor>ab1f143a1f6904fd063477232e7477b92</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>std::unordered_map&lt; uint8_t, std::set&lt; uint32_t &gt; &gt;</type>
      <name>mCancelConditions</name>
      <anchorfile>classchannel_1_1ActiveEntityState.html</anchorfile>
      <anchor>a2878947ed3b4a723ba1804841658323b</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>std::shared_ptr&lt; Zone &gt;</type>
      <name>mCurrentZone</name>
      <anchorfile>classchannel_1_1ActiveEntityState.html</anchorfile>
      <anchor>a1dc568369cb1ff4d78a9db83c08375f8</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>bool</type>
      <name>mEffectsActive</name>
      <anchorfile>classchannel_1_1ActiveEntityState.html</anchorfile>
      <anchor>ae7e6dc8b0b6c2ecf09c634c1e7cb701f</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>bool</type>
      <name>mInitialCalc</name>
      <anchorfile>classchannel_1_1ActiveEntityState.html</anchorfile>
      <anchor>ace2da752766739a6149fc2b07b158d59</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>uint64_t</type>
      <name>mLastRefresh</name>
      <anchorfile>classchannel_1_1ActiveEntityState.html</anchorfile>
      <anchor>ade34713c4aec7ca929822a292b0223d3</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>std::mutex</type>
      <name>mLock</name>
      <anchorfile>classchannel_1_1ActiveEntityState.html</anchorfile>
      <anchor>a8ba2ead908829f41707bdd3b36bcbb0a</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>int8_t</type>
      <name>mNextActivatedAbilityID</name>
      <anchorfile>classchannel_1_1ActiveEntityState.html</anchorfile>
      <anchor>a201d4512bc8abb8059a6589999a48bdb</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>std::map&lt; uint32_t, std::set&lt; uint32_t &gt; &gt;</type>
      <name>mNextEffectTimes</name>
      <anchorfile>classchannel_1_1ActiveEntityState.html</anchorfile>
      <anchor>a7cec5b66c750593b2ad1f2b86c03e233</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>std::unordered_map&lt; uint32_t, libcomp::EnumMap&lt; CorrectTbl, std::set&lt; uint8_t &gt; &gt; &gt;</type>
      <name>mNRAShields</name>
      <anchorfile>classchannel_1_1ActiveEntityState.html</anchorfile>
      <anchor>a203b30260e6d7f760c0b8071b6babc51</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>std::set&lt; int32_t &gt;</type>
      <name>mOpponentIDs</name>
      <anchorfile>classchannel_1_1ActiveEntityState.html</anchorfile>
      <anchor>ac62ddc39f590dd556479f21152f0fb47</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>std::unordered_map&lt; uint32_t, std::shared_ptr&lt; objects::StatusEffect &gt; &gt;</type>
      <name>mStatusEffects</name>
      <anchorfile>classchannel_1_1ActiveEntityState.html</anchorfile>
      <anchor>a8339cd0b835314682a8419496ab3ff94</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>std::set&lt; uint32_t &gt;</type>
      <name>mTimeDamageEffects</name>
      <anchorfile>classchannel_1_1ActiveEntityState.html</anchorfile>
      <anchor>ab6b71c46b84f4cb073667dd823ea0491</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>std::shared_ptr&lt; objects::Enemy &gt;</type>
      <name>mEntity</name>
      <anchorfile>classchannel_1_1ActiveEntityStateImp.html</anchorfile>
      <anchor>a287ca63507001a26ac4e3f954d92f363</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>channel::AICommand</name>
    <filename>classchannel_1_1AICommand.html</filename>
    <member kind="function">
      <type></type>
      <name>AICommand</name>
      <anchorfile>classchannel_1_1AICommand.html</anchorfile>
      <anchor>aba0acf59c3ff167a6e03a3ab101e1920</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~AICommand</name>
      <anchorfile>classchannel_1_1AICommand.html</anchorfile>
      <anchor>a489e8fde7eeab6f2585924cabada7ef8</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>uint64_t</type>
      <name>GetDelay</name>
      <anchorfile>classchannel_1_1AICommand.html</anchorfile>
      <anchor>ab101e10bc85b83f9519a220f80dbc2b2</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>AICommandType_t</type>
      <name>GetType</name>
      <anchorfile>classchannel_1_1AICommand.html</anchorfile>
      <anchor>ac770cd7345a7cb02befb6143097f13b7</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetDelay</name>
      <anchorfile>classchannel_1_1AICommand.html</anchorfile>
      <anchor>accdaf0ca0a5f4a5fb9ca0a298d843918</anchor>
      <arglist>(uint64_t delay)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>Start</name>
      <anchorfile>classchannel_1_1AICommand.html</anchorfile>
      <anchor>a7b47c1e8c12cf485f4a85d2288f47313</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>Started</name>
      <anchorfile>classchannel_1_1AICommand.html</anchorfile>
      <anchor>a939b7ec968290d22f41f9d214b40bfb5</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>uint64_t</type>
      <name>mDelay</name>
      <anchorfile>classchannel_1_1AICommand.html</anchorfile>
      <anchor>a09b7fb5df9a176691c3d06a6a77e0179</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>bool</type>
      <name>mStarted</name>
      <anchorfile>classchannel_1_1AICommand.html</anchorfile>
      <anchor>a71314d2af764f261b5c2cb165186f8fb</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>AICommandType_t</type>
      <name>mType</name>
      <anchorfile>classchannel_1_1AICommand.html</anchorfile>
      <anchor>a45e5dfbf56e2c66d9f31e1eed21b629e</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>channel::AIManager</name>
    <filename>classchannel_1_1AIManager.html</filename>
    <member kind="function">
      <type></type>
      <name>AIManager</name>
      <anchorfile>classchannel_1_1AIManager.html</anchorfile>
      <anchor>a02d9effe0270bd2a353acdf45f11b360</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>AIManager</name>
      <anchorfile>classchannel_1_1AIManager.html</anchorfile>
      <anchor>a936b03d8bc5724c5fd1f3d2b41285f9c</anchor>
      <arglist>(const std::weak_ptr&lt; ChannelServer &gt; &amp;server)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~AIManager</name>
      <anchorfile>classchannel_1_1AIManager.html</anchorfile>
      <anchor>a07762cbbf5de6bffd7499f86987a8dd5</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>Move</name>
      <anchorfile>classchannel_1_1AIManager.html</anchorfile>
      <anchor>a83a4e1f877ad774c284c7ecf9366a13b</anchor>
      <arglist>(const std::shared_ptr&lt; ActiveEntityState &gt; &amp;eState, float xPos, float yPos, uint64_t now)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>Prepare</name>
      <anchorfile>classchannel_1_1AIManager.html</anchorfile>
      <anchor>a94545244181e48b5313976eaf2236f1e</anchor>
      <arglist>(const std::shared_ptr&lt; ActiveEntityState &gt; &amp;eState, const libcomp::String &amp;aiType, uint8_t aggression=100)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>QueueScriptCommand</name>
      <anchorfile>classchannel_1_1AIManager.html</anchorfile>
      <anchor>a0231540458179721eab53252f04b7833</anchor>
      <arglist>(const std::shared_ptr&lt; AIState &gt; aiState, const libcomp::String &amp;functionName)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>QueueWaitCommand</name>
      <anchorfile>classchannel_1_1AIManager.html</anchorfile>
      <anchor>a5dd3cc400544d1d81c11983b6884bb19</anchor>
      <arglist>(const std::shared_ptr&lt; AIState &gt; aiState, uint32_t waitTime)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>UpdateActiveStates</name>
      <anchorfile>classchannel_1_1AIManager.html</anchorfile>
      <anchor>a868f20ec32b0392d6582cb3b615c15be</anchor>
      <arglist>(const std::shared_ptr&lt; Zone &gt; &amp;zone, uint64_t now)</arglist>
    </member>
    <member kind="function" protection="private">
      <type>bool</type>
      <name>ExecuteScriptFunction</name>
      <anchorfile>classchannel_1_1AIManager.html</anchorfile>
      <anchor>adff2a27355971b0e345d2c1955e2ca59</anchor>
      <arglist>(const std::shared_ptr&lt; ActiveEntityState &gt; &amp;eState, const libcomp::String &amp;functionName, uint64_t now, T &amp;result)</arglist>
    </member>
    <member kind="function" protection="private">
      <type>std::shared_ptr&lt; AIMoveCommand &gt;</type>
      <name>GetMoveCommand</name>
      <anchorfile>classchannel_1_1AIManager.html</anchorfile>
      <anchor>a39077202e01e32f7b12934049327fbe6</anchor>
      <arglist>(const std::shared_ptr&lt; Zone &gt; &amp;zone, const Point &amp;source, const Point &amp;dest, float reduce=0.f) const </arglist>
    </member>
    <member kind="function" protection="private">
      <type>std::shared_ptr&lt; AICommand &gt;</type>
      <name>GetWaitCommand</name>
      <anchorfile>classchannel_1_1AIManager.html</anchorfile>
      <anchor>a5d610e35d974216d237bcd58ae31d74d</anchor>
      <arglist>(uint32_t waitTime) const </arglist>
    </member>
    <member kind="function" protection="private">
      <type>void</type>
      <name>RefreshSkillMap</name>
      <anchorfile>classchannel_1_1AIManager.html</anchorfile>
      <anchor>a5152cbb62f5e1e068c3560530ac4059c</anchor>
      <arglist>(const std::shared_ptr&lt; ActiveEntityState &gt; &amp;eState, const std::shared_ptr&lt; AIState &gt; &amp;aiState)</arglist>
    </member>
    <member kind="function" protection="private">
      <type>std::shared_ptr&lt; ActiveEntityState &gt;</type>
      <name>Retarget</name>
      <anchorfile>classchannel_1_1AIManager.html</anchorfile>
      <anchor>a7d3694d659637813c299c6361f14bebc</anchor>
      <arglist>(const std::shared_ptr&lt; EnemyState &gt; &amp;eState, uint64_t now, bool isNight)</arglist>
    </member>
    <member kind="function" protection="private">
      <type>bool</type>
      <name>UpdateEnemyState</name>
      <anchorfile>classchannel_1_1AIManager.html</anchorfile>
      <anchor>a1ce928906ea4775098043748301c060c</anchor>
      <arglist>(const std::shared_ptr&lt; EnemyState &gt; &amp;eState, uint64_t now, bool isNight)</arglist>
    </member>
    <member kind="function" protection="private">
      <type>bool</type>
      <name>UpdateState</name>
      <anchorfile>classchannel_1_1AIManager.html</anchorfile>
      <anchor>ab962be2a02d62bb195bee4cb602401d6</anchor>
      <arglist>(const std::shared_ptr&lt; ActiveEntityState &gt; &amp;eState, uint64_t now, bool isNight)</arglist>
    </member>
    <member kind="variable" protection="private">
      <type>std::weak_ptr&lt; ChannelServer &gt;</type>
      <name>mServer</name>
      <anchorfile>classchannel_1_1AIManager.html</anchorfile>
      <anchor>ad28f5cf4474c3cc881c947f829d8331c</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private" static="yes">
      <type>static std::unordered_map&lt; std::string, std::shared_ptr&lt; libcomp::ScriptEngine &gt; &gt;</type>
      <name>sPreparedScripts</name>
      <anchorfile>classchannel_1_1AIManager.html</anchorfile>
      <anchor>a3a645806683e14818bf1061f61d0a13b</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>channel::AIMoveCommand</name>
    <filename>classchannel_1_1AIMoveCommand.html</filename>
    <base>channel::AICommand</base>
    <member kind="function">
      <type></type>
      <name>AIMoveCommand</name>
      <anchorfile>classchannel_1_1AIMoveCommand.html</anchorfile>
      <anchor>a1acc6135b823e0d9eedf9af6c36c2378</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~AIMoveCommand</name>
      <anchorfile>classchannel_1_1AIMoveCommand.html</anchorfile>
      <anchor>a1a8de14b6b8ea0940812e26828e0d380</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>GetCurrentDestination</name>
      <anchorfile>classchannel_1_1AIMoveCommand.html</anchorfile>
      <anchor>a988f76e5673f3174a3d9eafcfd8148ef</anchor>
      <arglist>(float &amp;x, float &amp;y) const </arglist>
    </member>
    <member kind="function">
      <type>uint64_t</type>
      <name>GetDelay</name>
      <anchorfile>classchannel_1_1AICommand.html</anchorfile>
      <anchor>ab101e10bc85b83f9519a220f80dbc2b2</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>GetEndDestination</name>
      <anchorfile>classchannel_1_1AIMoveCommand.html</anchorfile>
      <anchor>ad62ebc9aacc7e001429903d2fcacafc3</anchor>
      <arglist>(float &amp;x, float &amp;y) const </arglist>
    </member>
    <member kind="function">
      <type>AICommandType_t</type>
      <name>GetType</name>
      <anchorfile>classchannel_1_1AICommand.html</anchorfile>
      <anchor>ac770cd7345a7cb02befb6143097f13b7</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetDelay</name>
      <anchorfile>classchannel_1_1AICommand.html</anchorfile>
      <anchor>accdaf0ca0a5f4a5fb9ca0a298d843918</anchor>
      <arglist>(uint64_t delay)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>SetNextDestination</name>
      <anchorfile>classchannel_1_1AIMoveCommand.html</anchorfile>
      <anchor>a11e7822a7777d9152cb0119e5698fea6</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetPathing</name>
      <anchorfile>classchannel_1_1AIMoveCommand.html</anchorfile>
      <anchor>affd36e07607de5d7ff8861ba8b5591ee</anchor>
      <arglist>(const std::list&lt; std::pair&lt; float, float &gt;&gt; &amp;pathing)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>Start</name>
      <anchorfile>classchannel_1_1AICommand.html</anchorfile>
      <anchor>a7b47c1e8c12cf485f4a85d2288f47313</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>Started</name>
      <anchorfile>classchannel_1_1AICommand.html</anchorfile>
      <anchor>a939b7ec968290d22f41f9d214b40bfb5</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>uint64_t</type>
      <name>mDelay</name>
      <anchorfile>classchannel_1_1AICommand.html</anchorfile>
      <anchor>a09b7fb5df9a176691c3d06a6a77e0179</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>bool</type>
      <name>mStarted</name>
      <anchorfile>classchannel_1_1AICommand.html</anchorfile>
      <anchor>a71314d2af764f261b5c2cb165186f8fb</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>AICommandType_t</type>
      <name>mType</name>
      <anchorfile>classchannel_1_1AICommand.html</anchorfile>
      <anchor>a45e5dfbf56e2c66d9f31e1eed21b629e</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>std::list&lt; std::pair&lt; float, float &gt; &gt;</type>
      <name>mPathing</name>
      <anchorfile>classchannel_1_1AIMoveCommand.html</anchorfile>
      <anchor>af0bf26f6098fa1dd63bb84675a9f6d0b</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>channel::AIScriptedCommand</name>
    <filename>classchannel_1_1AIScriptedCommand.html</filename>
    <base>channel::AICommand</base>
    <member kind="function">
      <type></type>
      <name>AIScriptedCommand</name>
      <anchorfile>classchannel_1_1AIScriptedCommand.html</anchorfile>
      <anchor>a615aa31fb22b9080669aa92b881518ec</anchor>
      <arglist>(const libcomp::String &amp;functionName)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~AIScriptedCommand</name>
      <anchorfile>classchannel_1_1AIScriptedCommand.html</anchorfile>
      <anchor>a6655fc91a28a42094baa8270b162e827</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>uint64_t</type>
      <name>GetDelay</name>
      <anchorfile>classchannel_1_1AICommand.html</anchorfile>
      <anchor>ab101e10bc85b83f9519a220f80dbc2b2</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>libcomp::String</type>
      <name>GetFunctionName</name>
      <anchorfile>classchannel_1_1AIScriptedCommand.html</anchorfile>
      <anchor>a18b622e338f5920109f8ee2f0b4142f8</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>AICommandType_t</type>
      <name>GetType</name>
      <anchorfile>classchannel_1_1AICommand.html</anchorfile>
      <anchor>ac770cd7345a7cb02befb6143097f13b7</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetDelay</name>
      <anchorfile>classchannel_1_1AICommand.html</anchorfile>
      <anchor>accdaf0ca0a5f4a5fb9ca0a298d843918</anchor>
      <arglist>(uint64_t delay)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>Start</name>
      <anchorfile>classchannel_1_1AICommand.html</anchorfile>
      <anchor>a7b47c1e8c12cf485f4a85d2288f47313</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>Started</name>
      <anchorfile>classchannel_1_1AICommand.html</anchorfile>
      <anchor>a939b7ec968290d22f41f9d214b40bfb5</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>uint64_t</type>
      <name>mDelay</name>
      <anchorfile>classchannel_1_1AICommand.html</anchorfile>
      <anchor>a09b7fb5df9a176691c3d06a6a77e0179</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>bool</type>
      <name>mStarted</name>
      <anchorfile>classchannel_1_1AICommand.html</anchorfile>
      <anchor>a71314d2af764f261b5c2cb165186f8fb</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>AICommandType_t</type>
      <name>mType</name>
      <anchorfile>classchannel_1_1AICommand.html</anchorfile>
      <anchor>a45e5dfbf56e2c66d9f31e1eed21b629e</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>libcomp::String</type>
      <name>mFunctionName</name>
      <anchorfile>classchannel_1_1AIScriptedCommand.html</anchorfile>
      <anchor>a2667640811991adbef83895d77a6f92c</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>channel::AIState</name>
    <filename>classchannel_1_1AIState.html</filename>
    <member kind="function">
      <type></type>
      <name>AIState</name>
      <anchorfile>classchannel_1_1AIState.html</anchorfile>
      <anchor>a830d0023e393a343ee80ee797bd9281b</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~AIState</name>
      <anchorfile>classchannel_1_1AIState.html</anchorfile>
      <anchor>a69afa0662fb5441e1f3bfa2893aa230e</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>ClearCommands</name>
      <anchorfile>classchannel_1_1AIState.html</anchorfile>
      <anchor>a3b87b227233104dea27e60eb4bfeb540</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>uint8_t</type>
      <name>GetAggression</name>
      <anchorfile>classchannel_1_1AIState.html</anchorfile>
      <anchor>affb9fcba2e074c306034899e3a7b4e5a</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>float</type>
      <name>GetAggroValue</name>
      <anchorfile>classchannel_1_1AIState.html</anchorfile>
      <anchor>ac0df4666db6d1eead403dca9b36db713</anchor>
      <arglist>(uint8_t mode, bool fov, float defaultVal)</arglist>
    </member>
    <member kind="function">
      <type>std::shared_ptr&lt; objects::MiAIData &gt;</type>
      <name>GetAIData</name>
      <anchorfile>classchannel_1_1AIState.html</anchorfile>
      <anchor>ac4d9a7f11c29bb69920448f1b7e4e00c</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>std::shared_ptr&lt; AICommand &gt;</type>
      <name>GetCurrentCommand</name>
      <anchorfile>classchannel_1_1AIState.html</anchorfile>
      <anchor>a42c29eaa6b757ecb124a2cb897ee4e94</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>AIStatus_t</type>
      <name>GetDefaultStatus</name>
      <anchorfile>classchannel_1_1AIState.html</anchorfile>
      <anchor>a653fc8203ee078b37980948efff9a427</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>AIStatus_t</type>
      <name>GetPreviousStatus</name>
      <anchorfile>classchannel_1_1AIState.html</anchorfile>
      <anchor>a23447bccd6d7ff3aa75a0fe3bdb5ee98</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>std::shared_ptr&lt; libcomp::ScriptEngine &gt;</type>
      <name>GetScript</name>
      <anchorfile>classchannel_1_1AIState.html</anchorfile>
      <anchor>a2d1c5044d04563652002913df7056d07</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>libcomp::String</type>
      <name>GetScriptFunction</name>
      <anchorfile>classchannel_1_1AIState.html</anchorfile>
      <anchor>a1548595ea9605c9891f5e6082e12b467</anchor>
      <arglist>(const libcomp::String &amp;action)</arglist>
    </member>
    <member kind="function">
      <type>std::unordered_map&lt; uint16_t, std::vector&lt; uint32_t &gt; &gt;</type>
      <name>GetSkillMap</name>
      <anchorfile>classchannel_1_1AIState.html</anchorfile>
      <anchor>ab38741f3fc6d79d73cdfeb6ea955bba5</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>uint16_t</type>
      <name>GetSkillSettings</name>
      <anchorfile>classchannel_1_1AIState.html</anchorfile>
      <anchor>a0829b1f53a88e6fa269467b8d2a74bbf</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>AIStatus_t</type>
      <name>GetStatus</name>
      <anchorfile>classchannel_1_1AIState.html</anchorfile>
      <anchor>a0ed60975725b6a489898191d7a122a0a</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>int32_t</type>
      <name>GetTarget</name>
      <anchorfile>classchannel_1_1AIState.html</anchorfile>
      <anchor>a45872de8d34170bc9a753ae0456bb8eb</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>int32_t</type>
      <name>GetThinkSpeed</name>
      <anchorfile>classchannel_1_1AIState.html</anchorfile>
      <anchor>a7bf677cd08d82109bce6e422577bdacc</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>IsIdle</name>
      <anchorfile>classchannel_1_1AIState.html</anchorfile>
      <anchor>a4661008aa8028e2043776c4315e3cae6</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>IsOverriden</name>
      <anchorfile>classchannel_1_1AIState.html</anchorfile>
      <anchor>acdc649eb9a4d5f0bcc17abff326205dd</anchor>
      <arglist>(const libcomp::String &amp;action)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>OverrideAction</name>
      <anchorfile>classchannel_1_1AIState.html</anchorfile>
      <anchor>adc9028d9ffa6bb7119eb9fd0667f02b2</anchor>
      <arglist>(const libcomp::String &amp;action, const libcomp::String &amp;functionName)</arglist>
    </member>
    <member kind="function">
      <type>std::shared_ptr&lt; AICommand &gt;</type>
      <name>PopCommand</name>
      <anchorfile>classchannel_1_1AIState.html</anchorfile>
      <anchor>a781f5b5e31e211f21fc3eed5e65057aa</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>QueueCommand</name>
      <anchorfile>classchannel_1_1AIState.html</anchorfile>
      <anchor>afeeee428384c9b2a5ca9109131de5135</anchor>
      <arglist>(const std::shared_ptr&lt; AICommand &gt; &amp;command)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>ResetSkillsMapped</name>
      <anchorfile>classchannel_1_1AIState.html</anchorfile>
      <anchor>a25a32344df4223e462646cffe31748ba</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>ResetStatusChanged</name>
      <anchorfile>classchannel_1_1AIState.html</anchorfile>
      <anchor>a79e0904246cd72fc91d8da1d3b95c374</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetAI</name>
      <anchorfile>classchannel_1_1AIState.html</anchorfile>
      <anchor>af62bf1d0e2938292bd321245dbbab284</anchor>
      <arglist>(const std::shared_ptr&lt; objects::MiAIData &gt; &amp;aiData, const std::shared_ptr&lt; libcomp::ScriptEngine &gt; &amp;aiScript, uint8_t aggression=100)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetSkillMap</name>
      <anchorfile>classchannel_1_1AIState.html</anchorfile>
      <anchor>a735e77da12dec9e2529fdcd64cc67571</anchor>
      <arglist>(const std::unordered_map&lt; uint16_t, std::vector&lt; uint32_t &gt;&gt; &amp;skillMap)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetSkillSettings</name>
      <anchorfile>classchannel_1_1AIState.html</anchorfile>
      <anchor>a5ef1bbb1fb5beb76345a483e9c726f75</anchor>
      <arglist>(uint16_t skillSettings)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetStatus</name>
      <anchorfile>classchannel_1_1AIState.html</anchorfile>
      <anchor>ad2f25c53776a161bf608f5e096f7d5ed</anchor>
      <arglist>(AIStatus_t status, bool isDefault=false)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetTarget</name>
      <anchorfile>classchannel_1_1AIState.html</anchorfile>
      <anchor>a92ded9c36572f5099c43f77ca414b0e5</anchor>
      <arglist>(int32_t targetEntityID)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>SkillsMapped</name>
      <anchorfile>classchannel_1_1AIState.html</anchorfile>
      <anchor>afae567760ca59f704ccfa51b8587e58d</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>StatusChanged</name>
      <anchorfile>classchannel_1_1AIState.html</anchorfile>
      <anchor>ab5b615ed4f414d7614fe184ea42cd7fb</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="variable" protection="private">
      <type>std::unordered_map&lt; std::string, libcomp::String &gt;</type>
      <name>mActionOverrides</name>
      <anchorfile>classchannel_1_1AIState.html</anchorfile>
      <anchor>a277bc5e8980ce58418f7b57510a96375</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>uint8_t</type>
      <name>mAggression</name>
      <anchorfile>classchannel_1_1AIState.html</anchorfile>
      <anchor>aa43b9eeebecab8aa29b56c83704680e7</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>std::shared_ptr&lt; objects::MiAIData &gt;</type>
      <name>mAIData</name>
      <anchorfile>classchannel_1_1AIState.html</anchorfile>
      <anchor>afd28d09583227e575e0d6df9bd714ef7</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>std::shared_ptr&lt; libcomp::ScriptEngine &gt;</type>
      <name>mAIScript</name>
      <anchorfile>classchannel_1_1AIState.html</anchorfile>
      <anchor>a79aebdfae1e3972d712492f1223c2152</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>std::list&lt; std::shared_ptr&lt; AICommand &gt; &gt;</type>
      <name>mCommandQueue</name>
      <anchorfile>classchannel_1_1AIState.html</anchorfile>
      <anchor>ab734433638e2d741d49e44daa60ed171</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>std::shared_ptr&lt; AICommand &gt;</type>
      <name>mCurrentCommand</name>
      <anchorfile>classchannel_1_1AIState.html</anchorfile>
      <anchor>a1199af1a1dbfe0a39fd4cae4423659d3</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>AIStatus_t</type>
      <name>mDefaultStatus</name>
      <anchorfile>classchannel_1_1AIState.html</anchorfile>
      <anchor>a0039dd0b0e9134383318ccf77caab1c0</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>std::mutex *</type>
      <name>mLock</name>
      <anchorfile>classchannel_1_1AIState.html</anchorfile>
      <anchor>a02b983db6f0f5b557969355158e7c0cc</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>AIStatus_t</type>
      <name>mPreviousStatus</name>
      <anchorfile>classchannel_1_1AIState.html</anchorfile>
      <anchor>a8b2e5766a4901fddb77c03f262dbcd64</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>std::unordered_map&lt; uint16_t, std::vector&lt; uint32_t &gt; &gt;</type>
      <name>mSkillMap</name>
      <anchorfile>classchannel_1_1AIState.html</anchorfile>
      <anchor>ae1b023fa371e36e4be7fc76f20fd14ab</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>uint16_t</type>
      <name>mSkillSettings</name>
      <anchorfile>classchannel_1_1AIState.html</anchorfile>
      <anchor>a23b0fcc75a75d264144b7ef3a09e703a</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>bool</type>
      <name>mSkillsMapped</name>
      <anchorfile>classchannel_1_1AIState.html</anchorfile>
      <anchor>adb8b9e5f31b7a8d2a4706273f59260d2</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>AIStatus_t</type>
      <name>mStatus</name>
      <anchorfile>classchannel_1_1AIState.html</anchorfile>
      <anchor>a4b84be60ef7078e4e488c537cd992d67</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>bool</type>
      <name>mStatusChanged</name>
      <anchorfile>classchannel_1_1AIState.html</anchorfile>
      <anchor>a1a0fd13425c218661d6ed9f9f4f6b02b</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>int32_t</type>
      <name>mTargetEntityID</name>
      <anchorfile>classchannel_1_1AIState.html</anchorfile>
      <anchor>a06e9c5baee8b59bd94e60d980d131859</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>channel::AIUseSkillCommand</name>
    <filename>classchannel_1_1AIUseSkillCommand.html</filename>
    <base>channel::AICommand</base>
    <member kind="function">
      <type></type>
      <name>AIUseSkillCommand</name>
      <anchorfile>classchannel_1_1AIUseSkillCommand.html</anchorfile>
      <anchor>a1dfddb064dd81f7c90061a07c1cbeb89</anchor>
      <arglist>(uint32_t skillID, int64_t targetObjectID)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>AIUseSkillCommand</name>
      <anchorfile>classchannel_1_1AIUseSkillCommand.html</anchorfile>
      <anchor>aa64237ab7007c89d400c9a9fa3f4ca60</anchor>
      <arglist>(const std::shared_ptr&lt; objects::ActivatedAbility &gt; &amp;activated)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~AIUseSkillCommand</name>
      <anchorfile>classchannel_1_1AIUseSkillCommand.html</anchorfile>
      <anchor>a0ba92de78010be3390f74dbfe2271184</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>std::shared_ptr&lt; objects::ActivatedAbility &gt;</type>
      <name>GetActivatedAbility</name>
      <anchorfile>classchannel_1_1AIUseSkillCommand.html</anchorfile>
      <anchor>aa9a5608e01fe3c0400a161daeb495b0c</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>uint64_t</type>
      <name>GetDelay</name>
      <anchorfile>classchannel_1_1AICommand.html</anchorfile>
      <anchor>ab101e10bc85b83f9519a220f80dbc2b2</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>uint32_t</type>
      <name>GetSkillID</name>
      <anchorfile>classchannel_1_1AIUseSkillCommand.html</anchorfile>
      <anchor>add7f92c3fa78adf5b7ad2386e4f6d983</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>int64_t</type>
      <name>GetTargetObjectID</name>
      <anchorfile>classchannel_1_1AIUseSkillCommand.html</anchorfile>
      <anchor>af4f4ee9f3497c44fc851760998d19941</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>AICommandType_t</type>
      <name>GetType</name>
      <anchorfile>classchannel_1_1AICommand.html</anchorfile>
      <anchor>ac770cd7345a7cb02befb6143097f13b7</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetActivatedAbility</name>
      <anchorfile>classchannel_1_1AIUseSkillCommand.html</anchorfile>
      <anchor>ab4b3ae26f5ea5264f9d1f9ac5bf29114</anchor>
      <arglist>(const std::shared_ptr&lt; objects::ActivatedAbility &gt; &amp;activated)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetDelay</name>
      <anchorfile>classchannel_1_1AICommand.html</anchorfile>
      <anchor>accdaf0ca0a5f4a5fb9ca0a298d843918</anchor>
      <arglist>(uint64_t delay)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>Start</name>
      <anchorfile>classchannel_1_1AICommand.html</anchorfile>
      <anchor>a7b47c1e8c12cf485f4a85d2288f47313</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>Started</name>
      <anchorfile>classchannel_1_1AICommand.html</anchorfile>
      <anchor>a939b7ec968290d22f41f9d214b40bfb5</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>uint64_t</type>
      <name>mDelay</name>
      <anchorfile>classchannel_1_1AICommand.html</anchorfile>
      <anchor>a09b7fb5df9a176691c3d06a6a77e0179</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>bool</type>
      <name>mStarted</name>
      <anchorfile>classchannel_1_1AICommand.html</anchorfile>
      <anchor>a71314d2af764f261b5c2cb165186f8fb</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>AICommandType_t</type>
      <name>mType</name>
      <anchorfile>classchannel_1_1AICommand.html</anchorfile>
      <anchor>a45e5dfbf56e2c66d9f31e1eed21b629e</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>std::shared_ptr&lt; objects::ActivatedAbility &gt;</type>
      <name>mActivated</name>
      <anchorfile>classchannel_1_1AIUseSkillCommand.html</anchorfile>
      <anchor>ae85ba79c0248ea6e936bed406b6de41a</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>uint32_t</type>
      <name>mSkillID</name>
      <anchorfile>classchannel_1_1AIUseSkillCommand.html</anchorfile>
      <anchor>aa8e17b96eb0f64e11b98907af5c05813</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>int64_t</type>
      <name>mTargetObjectID</name>
      <anchorfile>classchannel_1_1AIUseSkillCommand.html</anchorfile>
      <anchor>a3dbcccca362c8ec4a488315d58613a7a</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>channel::BazaarState</name>
    <filename>classchannel_1_1BazaarState.html</filename>
    <base>EntityState&lt; objects::ServerBazaar &gt;</base>
    <member kind="function">
      <type></type>
      <name>BazaarState</name>
      <anchorfile>classchannel_1_1BazaarState.html</anchorfile>
      <anchor>ae5829af1507be183a0cec2680fcad09c</anchor>
      <arglist>(const std::shared_ptr&lt; objects::ServerBazaar &gt; &amp;bazaar)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~BazaarState</name>
      <anchorfile>classchannel_1_1BazaarState.html</anchorfile>
      <anchor>a70ced0af5436bcf86e5fdb47d476a457</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>AddItem</name>
      <anchorfile>classchannel_1_1BazaarState.html</anchorfile>
      <anchor>a821264eee62b404a3bd05e5a9d7383f7</anchor>
      <arglist>(ClientState *state, int8_t slot, int64_t itemID, int32_t price, std::shared_ptr&lt; libcomp::DatabaseChangeSet &gt; &amp;dbChanges)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>BuyItem</name>
      <anchorfile>classchannel_1_1BazaarState.html</anchorfile>
      <anchor>abd299a1b946beb69b70d1f6f1cc75723</anchor>
      <arglist>(std::shared_ptr&lt; objects::BazaarItem &gt; bItem)</arglist>
    </member>
    <member kind="function">
      <type>std::shared_ptr&lt; objects::BazaarData &gt;</type>
      <name>GetCurrentMarket</name>
      <anchorfile>classchannel_1_1BazaarState.html</anchorfile>
      <anchor>a1a23a0d9e5e872c8f85c0388aa4437b6</anchor>
      <arglist>(uint32_t marketID)</arglist>
    </member>
    <member kind="function">
      <type>std::shared_ptr&lt; objects::ServerBazaar &gt;</type>
      <name>GetEntity</name>
      <anchorfile>classchannel_1_1EntityState.html</anchorfile>
      <anchor>a78ed793f6bd313a5167573938b18bb23</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>uint32_t</type>
      <name>GetNextExpiration</name>
      <anchorfile>classchannel_1_1BazaarState.html</anchorfile>
      <anchor>ae2782d0257151d8447032d37dcd62ee9</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetCurrentMarket</name>
      <anchorfile>classchannel_1_1BazaarState.html</anchorfile>
      <anchor>ae036bc95372e1e6c59b6d0c530d5b086</anchor>
      <arglist>(uint32_t marketID, const std::shared_ptr&lt; objects::BazaarData &gt; &amp;data)</arglist>
    </member>
    <member kind="function">
      <type>uint32_t</type>
      <name>SetNextExpiration</name>
      <anchorfile>classchannel_1_1BazaarState.html</anchorfile>
      <anchor>ae4d2adddadfac7547efc75edef7398e4</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>std::shared_ptr&lt; objects::BazaarItem &gt;</type>
      <name>TryBuyItem</name>
      <anchorfile>classchannel_1_1BazaarState.html</anchorfile>
      <anchor>a071f3b0259e55f148041453da7f044a5</anchor>
      <arglist>(ClientState *state, uint32_t marketID, int8_t slot, int64_t itemID, int32_t price)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static bool</type>
      <name>DropItemFromMarket</name>
      <anchorfile>classchannel_1_1BazaarState.html</anchorfile>
      <anchor>af9511269ee2b3fbaa43116402bb33315</anchor>
      <arglist>(ClientState *state, int8_t srcSlot, int64_t itemID, int8_t destSlot, std::shared_ptr&lt; libcomp::DatabaseChangeSet &gt; &amp;dbChanges)</arglist>
    </member>
    <member kind="function" protection="private">
      <type>bool</type>
      <name>DropItem</name>
      <anchorfile>classchannel_1_1BazaarState.html</anchorfile>
      <anchor>aac6faae1a53ac0549fb390abadd708fb</anchor>
      <arglist>(ClientState *state, int8_t srcSlot, int64_t itemID, int8_t destSlot, std::shared_ptr&lt; libcomp::DatabaseChangeSet &gt; &amp;dbChanges)</arglist>
    </member>
    <member kind="function" protection="private">
      <type>bool</type>
      <name>VerifyMarket</name>
      <anchorfile>classchannel_1_1BazaarState.html</anchorfile>
      <anchor>a1d67929c18d7b8f657a7eab3c27dac7b</anchor>
      <arglist>(const std::shared_ptr&lt; objects::BazaarData &gt; &amp;data)</arglist>
    </member>
    <member kind="function" protection="private" static="yes">
      <type>static bool</type>
      <name>DropItemInternal</name>
      <anchorfile>classchannel_1_1BazaarState.html</anchorfile>
      <anchor>a1267be7679dce35181b873f6219ec042</anchor>
      <arglist>(ClientState *state, int8_t srcSlot, int64_t itemID, int8_t destSlot, std::shared_ptr&lt; libcomp::DatabaseChangeSet &gt; &amp;dbChanges)</arglist>
    </member>
    <member kind="variable" protection="private">
      <type>std::unordered_map&lt; uint32_t, std::shared_ptr&lt; objects::BazaarData &gt; &gt;</type>
      <name>mCurrentMarkets</name>
      <anchorfile>classchannel_1_1BazaarState.html</anchorfile>
      <anchor>a2b7e44435fd4590abed1e164758a27f3</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>std::mutex</type>
      <name>mLock</name>
      <anchorfile>classchannel_1_1BazaarState.html</anchorfile>
      <anchor>a031277baa9e6ef8439b08c61df8921aa</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>uint32_t</type>
      <name>mNextExpiration</name>
      <anchorfile>classchannel_1_1BazaarState.html</anchorfile>
      <anchor>a6af7b8f566ce7978ec5c5e9f4c04e081</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>channel::ChannelClientConnection</name>
    <filename>classchannel_1_1ChannelClientConnection.html</filename>
    <base>libcomp::ChannelConnection</base>
    <member kind="function">
      <type></type>
      <name>ChannelClientConnection</name>
      <anchorfile>classchannel_1_1ChannelClientConnection.html</anchorfile>
      <anchor>a476743be4e993265609986a692cb0c9c</anchor>
      <arglist>(asio::ip::tcp::socket &amp;socket, DH *pDiffieHellman)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~ChannelClientConnection</name>
      <anchorfile>classchannel_1_1ChannelClientConnection.html</anchorfile>
      <anchor>a37c741edfcf46c98df96f076804e2c06</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>ClientState *</type>
      <name>GetClientState</name>
      <anchorfile>classchannel_1_1ChannelClientConnection.html</anchorfile>
      <anchor>aba7a329ed64fbedb5050e8b631887385</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>uint64_t</type>
      <name>GetTimeout</name>
      <anchorfile>classchannel_1_1ChannelClientConnection.html</anchorfile>
      <anchor>ab0a14eefb42d36b1df8d33453005126d</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>RefreshTimeout</name>
      <anchorfile>classchannel_1_1ChannelClientConnection.html</anchorfile>
      <anchor>a4d5f6eb4ecd7d1adeb9252fd91d572a8</anchor>
      <arglist>(uint64_t now, uint16_t aliveUntil)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>BroadcastPacket</name>
      <anchorfile>classchannel_1_1ChannelClientConnection.html</anchorfile>
      <anchor>a6ef55de5b3edab204ca4fc3ccd9d472b</anchor>
      <arglist>(const std::list&lt; std::shared_ptr&lt; ChannelClientConnection &gt;&gt; &amp;clients, libcomp::Packet &amp;packet, bool queue=false)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>BroadcastPackets</name>
      <anchorfile>classchannel_1_1ChannelClientConnection.html</anchorfile>
      <anchor>a75091b8b14080a3bfeae43205ebc38a8</anchor>
      <arglist>(const std::list&lt; std::shared_ptr&lt; ChannelClientConnection &gt;&gt; &amp;clients, std::list&lt; libcomp::Packet &gt; &amp;packets)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>FlushAllOutgoing</name>
      <anchorfile>classchannel_1_1ChannelClientConnection.html</anchorfile>
      <anchor>aa3fbaac7f4a58c36a0314d7244a19250</anchor>
      <arglist>(const std::list&lt; std::shared_ptr&lt; ChannelClientConnection &gt;&gt; &amp;clients)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>SendRelativeTimePacket</name>
      <anchorfile>classchannel_1_1ChannelClientConnection.html</anchorfile>
      <anchor>aea7c16f82fd6f26751493b67e3b9bef5</anchor>
      <arglist>(const std::list&lt; std::shared_ptr&lt; ChannelClientConnection &gt;&gt; &amp;clients, libcomp::Packet &amp;p, const RelativeTimeMap &amp;timeMap, bool queue=false)</arglist>
    </member>
    <member kind="variable" protection="private">
      <type>std::shared_ptr&lt; ClientState &gt;</type>
      <name>mClientState</name>
      <anchorfile>classchannel_1_1ChannelClientConnection.html</anchorfile>
      <anchor>aa79ead40199ba154b969081b92916318</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>uint64_t</type>
      <name>mTimeout</name>
      <anchorfile>classchannel_1_1ChannelClientConnection.html</anchorfile>
      <anchor>a4e3e1f354b8e90ef4f096ed7bbf304e3</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>channel::ChannelServer</name>
    <filename>classchannel_1_1ChannelServer.html</filename>
    <base>libcomp::BaseServer</base>
    <member kind="function">
      <type></type>
      <name>ChannelServer</name>
      <anchorfile>classchannel_1_1ChannelServer.html</anchorfile>
      <anchor>a345555654aab382c26928ee393c10e5d</anchor>
      <arglist>(const char *szProgram, std::shared_ptr&lt; objects::ServerConfig &gt; config, std::shared_ptr&lt; libcomp::ServerCommandLineParser &gt; commandLine)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~ChannelServer</name>
      <anchorfile>classchannel_1_1ChannelServer.html</anchorfile>
      <anchor>ad011c5d94cae61f3f1abb8dd5e39d5a8</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>Cleanup</name>
      <anchorfile>classchannel_1_1ChannelServer.html</anchorfile>
      <anchor>a5f7eaa961e26e6da8b0068c12fb3219d</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>AccountManager *</type>
      <name>GetAccountManager</name>
      <anchorfile>classchannel_1_1ChannelServer.html</anchorfile>
      <anchor>a2f31062a43ec96dc441957bc09b66e6f</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>ActionManager *</type>
      <name>GetActionManager</name>
      <anchorfile>classchannel_1_1ChannelServer.html</anchorfile>
      <anchor>aded5d71e3d0833613de8e3239f2a90b3</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>AIManager *</type>
      <name>GetAIManager</name>
      <anchorfile>classchannel_1_1ChannelServer.html</anchorfile>
      <anchor>a6be3423c47561212e7aaff5b55404025</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>const std::list&lt; std::shared_ptr&lt; objects::RegisteredChannel &gt; &gt;</type>
      <name>GetAllRegisteredChannels</name>
      <anchorfile>classchannel_1_1ChannelServer.html</anchorfile>
      <anchor>ab6913a3dafb51d079216fd53a98b0088</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>ChannelSyncManager *</type>
      <name>GetChannelSyncManager</name>
      <anchorfile>classchannel_1_1ChannelServer.html</anchorfile>
      <anchor>a97cc63d98b46baf8030c6e90552e3b7a</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>CharacterManager *</type>
      <name>GetCharacterManager</name>
      <anchorfile>classchannel_1_1ChannelServer.html</anchorfile>
      <anchor>a01ec52bcd8e51455bf9fe48abed512c7</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>ChatManager *</type>
      <name>GetChatManager</name>
      <anchorfile>classchannel_1_1ChannelServer.html</anchorfile>
      <anchor>aa39e2c0486b44f51d8c1074b6b39d2e6</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>PersistentObjectMap</type>
      <name>GetDefaultCharacterObjectMap</name>
      <anchorfile>classchannel_1_1ChannelServer.html</anchorfile>
      <anchor>aa8d74ab162cc698cac5748390da474c9</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>libcomp::DefinitionManager *</type>
      <name>GetDefinitionManager</name>
      <anchorfile>classchannel_1_1ChannelServer.html</anchorfile>
      <anchor>aacd7b273b283373056ad42d7c4dae0ad</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>EventManager *</type>
      <name>GetEventManager</name>
      <anchorfile>classchannel_1_1ChannelServer.html</anchorfile>
      <anchor>a244bb51b0a5abb52f9f6d17df3bf909e</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>FusionManager *</type>
      <name>GetFusionManager</name>
      <anchorfile>classchannel_1_1ChannelServer.html</anchorfile>
      <anchor>ac551d6e218df8e10b2a2f215fbcb15f6</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>std::shared_ptr&lt; libcomp::Database &gt;</type>
      <name>GetLobbyDatabase</name>
      <anchorfile>classchannel_1_1ChannelServer.html</anchorfile>
      <anchor>ab915200294d11b0f5d79029ee7fd9f74</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>std::shared_ptr&lt; ManagerConnection &gt;</type>
      <name>GetManagerConnection</name>
      <anchorfile>classchannel_1_1ChannelServer.html</anchorfile>
      <anchor>a50ccb06823904b53406446e7e09102c6</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>int32_t</type>
      <name>GetNextEntityID</name>
      <anchorfile>classchannel_1_1ChannelServer.html</anchorfile>
      <anchor>a981d3f4fd9bfca170dcb7e6ea0834174</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>int64_t</type>
      <name>GetNextObjectID</name>
      <anchorfile>classchannel_1_1ChannelServer.html</anchorfile>
      <anchor>a33f5349eb73ed0bef4287ec9bd752086</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>int32_t</type>
      <name>GetPAttributeDeadline</name>
      <anchorfile>classchannel_1_1ChannelServer.html</anchorfile>
      <anchor>a541bb714eaad630b3a1dfb25d20884c3</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>const std::shared_ptr&lt; objects::RegisteredChannel &gt;</type>
      <name>GetRegisteredChannel</name>
      <anchorfile>classchannel_1_1ChannelServer.html</anchorfile>
      <anchor>a4ead68debbb31e771c6863a54180bb0c</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>std::shared_ptr&lt; objects::RegisteredWorld &gt;</type>
      <name>GetRegisteredWorld</name>
      <anchorfile>classchannel_1_1ChannelServer.html</anchorfile>
      <anchor>a610ec407260c680565bc2afafa455445</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>libcomp::ServerDataManager *</type>
      <name>GetServerDataManager</name>
      <anchorfile>classchannel_1_1ChannelServer.html</anchorfile>
      <anchor>a10687cbb8559d3955f1acaa965567fea</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>SkillManager *</type>
      <name>GetSkillManager</name>
      <anchorfile>classchannel_1_1ChannelServer.html</anchorfile>
      <anchor>a751fb9214894f350e7755fe616d18a32</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>TokuseiManager *</type>
      <name>GetTokuseiManager</name>
      <anchorfile>classchannel_1_1ChannelServer.html</anchorfile>
      <anchor>aba74eb2545f1249d1b7a115b95354897</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>const WorldClock</type>
      <name>GetWorldClockTime</name>
      <anchorfile>classchannel_1_1ChannelServer.html</anchorfile>
      <anchor>a22dc9aacc059ab39839d2136dd5184e2</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>std::shared_ptr&lt; libcomp::Database &gt;</type>
      <name>GetWorldDatabase</name>
      <anchorfile>classchannel_1_1ChannelServer.html</anchorfile>
      <anchor>a7942e5878f1183e0f0a88504692ad74b</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>ZoneManager *</type>
      <name>GetZoneManager</name>
      <anchorfile>classchannel_1_1ChannelServer.html</anchorfile>
      <anchor>add8755ff0b0fae5d89d640de553c78e7</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>HandleClockEvents</name>
      <anchorfile>classchannel_1_1ChannelServer.html</anchorfile>
      <anchor>a5fad40c4909c15d2a568c55eadeec163</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual bool</type>
      <name>Initialize</name>
      <anchorfile>classchannel_1_1ChannelServer.html</anchorfile>
      <anchor>a29f9ad23185a05488f2a5824773abd6b</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>LoadAllRegisteredChannels</name>
      <anchorfile>classchannel_1_1ChannelServer.html</anchorfile>
      <anchor>a11ab381b1872d597ab82101e547ecccb</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>RegisterClockEvent</name>
      <anchorfile>classchannel_1_1ChannelServer.html</anchorfile>
      <anchor>a69b4df89220c910c2f893b88cd683c5d</anchor>
      <arglist>(WorldClockTime time, uint8_t type, bool remove)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>RegisterServer</name>
      <anchorfile>classchannel_1_1ChannelServer.html</anchorfile>
      <anchor>ae969a02d9e51783d8ba4f239ca8e5e35</anchor>
      <arglist>(uint8_t channelID)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>RegisterWorld</name>
      <anchorfile>classchannel_1_1ChannelServer.html</anchorfile>
      <anchor>a99fed75a086016efe1ee4917c14979d0</anchor>
      <arglist>(const std::shared_ptr&lt; objects::RegisteredWorld &gt; &amp;registeredWorld)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>ScheduleWork</name>
      <anchorfile>classchannel_1_1ChannelServer.html</anchorfile>
      <anchor>a3f46322193991c26d4f4ef079c6c00f9</anchor>
      <arglist>(ServerTime timestamp, Function &amp;&amp;f, Args &amp;&amp;...args)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>SendSystemMessage</name>
      <anchorfile>classchannel_1_1ChannelServer.html</anchorfile>
      <anchor>a3d0fe62af223acc61855de614359ca69</anchor>
      <arglist>(const std::shared_ptr&lt; channel::ChannelClientConnection &gt; &amp;client, libcomp::String message, int8_t type, bool broadcast)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetLobbyDatabase</name>
      <anchorfile>classchannel_1_1ChannelServer.html</anchorfile>
      <anchor>a3a5a6e9f5d11051f052f8858e0d60b33</anchor>
      <arglist>(const std::shared_ptr&lt; libcomp::Database &gt; &amp;database)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetTimeOffset</name>
      <anchorfile>classchannel_1_1ChannelServer.html</anchorfile>
      <anchor>adfe2acb833b336f979786cf7ae896648</anchor>
      <arglist>(uint32_t offset)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetWorldDatabase</name>
      <anchorfile>classchannel_1_1ChannelServer.html</anchorfile>
      <anchor>af6dd91bd20cde79347ae9f2b34b17206</anchor>
      <arglist>(const std::shared_ptr&lt; libcomp::Database &gt; &amp;database)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>Shutdown</name>
      <anchorfile>classchannel_1_1ChannelServer.html</anchorfile>
      <anchor>a6a99648dc49a207a83de662a90a056cb</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>StartGameTick</name>
      <anchorfile>classchannel_1_1ChannelServer.html</anchorfile>
      <anchor>afcb1bb264243548a4a40484526cf2506</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>Tick</name>
      <anchorfile>classchannel_1_1ChannelServer.html</anchorfile>
      <anchor>a577d8be08b656ac7ced875bb27bdcf9a</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static int32_t</type>
      <name>GetExpirationInSeconds</name>
      <anchorfile>classchannel_1_1ChannelServer.html</anchorfile>
      <anchor>a234227630f4670180786b68a0c9ba43f</anchor>
      <arglist>(uint32_t fixedTime, uint32_t relativeTo=0)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static ServerTime</type>
      <name>GetServerTime</name>
      <anchorfile>classchannel_1_1ChannelServer.html</anchorfile>
      <anchor>a92045fa1aaa248fb9bfdab9f3ecb2753</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual std::shared_ptr&lt; libcomp::TcpConnection &gt;</type>
      <name>CreateConnection</name>
      <anchorfile>classchannel_1_1ChannelServer.html</anchorfile>
      <anchor>a255bbd33606e2aa20c41219b7eb2fca5</anchor>
      <arglist>(asio::ip::tcp::socket &amp;socket)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>RecalcNextWorldEventTime</name>
      <anchorfile>classchannel_1_1ChannelServer.html</anchorfile>
      <anchor>acd027ac951c6576c1257311f8221a505</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected" static="yes">
      <type>static ServerTime</type>
      <name>GetServerTimeHighResolution</name>
      <anchorfile>classchannel_1_1ChannelServer.html</anchorfile>
      <anchor>ab5162e52342c8e17481d9f4461a9ec7c</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected" static="yes">
      <type>static ServerTime</type>
      <name>GetServerTimeSteady</name>
      <anchorfile>classchannel_1_1ChannelServer.html</anchorfile>
      <anchor>a7624fd49f864a73ba5a746d009ba6063</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>AccountManager *</type>
      <name>mAccountManager</name>
      <anchorfile>classchannel_1_1ChannelServer.html</anchorfile>
      <anchor>aec38e742f9345bb699c6d29c21a632d3</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>ActionManager *</type>
      <name>mActionManager</name>
      <anchorfile>classchannel_1_1ChannelServer.html</anchorfile>
      <anchor>ae1f6d84d3f6a1848c9fcfb3fcbe67484</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>AIManager *</type>
      <name>mAIManager</name>
      <anchorfile>classchannel_1_1ChannelServer.html</anchorfile>
      <anchor>a0a23bf092485a898442460bdb4e550b0</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>std::list&lt; std::shared_ptr&lt; objects::RegisteredChannel &gt; &gt;</type>
      <name>mAllRegisteredChannels</name>
      <anchorfile>classchannel_1_1ChannelServer.html</anchorfile>
      <anchor>a28e7916099524ec9fb7857e56dcbe790</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>CharacterManager *</type>
      <name>mCharacterManager</name>
      <anchorfile>classchannel_1_1ChannelServer.html</anchorfile>
      <anchor>ae243bedb5b765eeb08dc037396f0560f</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>ChatManager *</type>
      <name>mChatManager</name>
      <anchorfile>classchannel_1_1ChannelServer.html</anchorfile>
      <anchor>a4ffab65643134d8c9edcb79f6e51c801</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>PersistentObjectMap</type>
      <name>mDefaultCharacterObjectMap</name>
      <anchorfile>classchannel_1_1ChannelServer.html</anchorfile>
      <anchor>af180d3a96cc3853181df1a79fde9cf72</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>libcomp::DefinitionManager *</type>
      <name>mDefinitionManager</name>
      <anchorfile>classchannel_1_1ChannelServer.html</anchorfile>
      <anchor>a3c0c4f368b6b402125a1dcb250fef837</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>EventManager *</type>
      <name>mEventManager</name>
      <anchorfile>classchannel_1_1ChannelServer.html</anchorfile>
      <anchor>a656505fbc8826f59e2dac63cde820055</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>FusionManager *</type>
      <name>mFusionManager</name>
      <anchorfile>classchannel_1_1ChannelServer.html</anchorfile>
      <anchor>a075b6158f29c49304ee6265670fa1cc0</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>std::shared_ptr&lt; libcomp::Database &gt;</type>
      <name>mLobbyDatabase</name>
      <anchorfile>classchannel_1_1ChannelServer.html</anchorfile>
      <anchor>a44ed1e0fa4b2ba83fb1d5dd9befeb628</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>std::mutex</type>
      <name>mLock</name>
      <anchorfile>classchannel_1_1ChannelServer.html</anchorfile>
      <anchor>a2a00635a08c7337e56ee04022b7cacfc</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>std::shared_ptr&lt; ManagerConnection &gt;</type>
      <name>mManagerConnection</name>
      <anchorfile>classchannel_1_1ChannelServer.html</anchorfile>
      <anchor>a8bd675f078ebe8a25e4ce10366892f92</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>int32_t</type>
      <name>mMaxEntityID</name>
      <anchorfile>classchannel_1_1ChannelServer.html</anchorfile>
      <anchor>a910f55f1f98fc8391093218e04fa3a6b</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>int64_t</type>
      <name>mMaxObjectID</name>
      <anchorfile>classchannel_1_1ChannelServer.html</anchorfile>
      <anchor>a1d3eafb0edb9e8236c8c2290bf0e4a87</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>uint32_t</type>
      <name>mNextEventTime</name>
      <anchorfile>classchannel_1_1ChannelServer.html</anchorfile>
      <anchor>a6a9721776388673758cf385668e93958</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>bool</type>
      <name>mRecalcTimeDependents</name>
      <anchorfile>classchannel_1_1ChannelServer.html</anchorfile>
      <anchor>a6e60cec45ae926e5350e553637bfac1c</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>std::shared_ptr&lt; objects::RegisteredChannel &gt;</type>
      <name>mRegisteredChannel</name>
      <anchorfile>classchannel_1_1ChannelServer.html</anchorfile>
      <anchor>aa120f3cf8eca6ff168b3c3582f79f079</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>std::shared_ptr&lt; objects::RegisteredWorld &gt;</type>
      <name>mRegisteredWorld</name>
      <anchorfile>classchannel_1_1ChannelServer.html</anchorfile>
      <anchor>a1e1481149130355896749e1cb59ad5d1</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>std::map&lt; ServerTime, std::list&lt; libcomp::Message::Execute * &gt; &gt;</type>
      <name>mScheduledWork</name>
      <anchorfile>classchannel_1_1ChannelServer.html</anchorfile>
      <anchor>a3db12cbc8586ae51bd102976a38e613c</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>libcomp::ServerDataManager *</type>
      <name>mServerDataManager</name>
      <anchorfile>classchannel_1_1ChannelServer.html</anchorfile>
      <anchor>a6493fa2fd2c667a52d0740697293736e</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>SkillManager *</type>
      <name>mSkillManager</name>
      <anchorfile>classchannel_1_1ChannelServer.html</anchorfile>
      <anchor>a650c6cb83f96e4b4fb8b8f96fabc20bb</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>ChannelSyncManager *</type>
      <name>mSyncManager</name>
      <anchorfile>classchannel_1_1ChannelServer.html</anchorfile>
      <anchor>a74891f7870db30cab95e807b01df789c</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>volatile bool</type>
      <name>mTickRunning</name>
      <anchorfile>classchannel_1_1ChannelServer.html</anchorfile>
      <anchor>ad89e6d66185abd19658a66e4fbd9a256</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>std::thread</type>
      <name>mTickThread</name>
      <anchorfile>classchannel_1_1ChannelServer.html</anchorfile>
      <anchor>a706aebd85bb3fac124e3b669e69da0b1</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>std::mutex</type>
      <name>mTimeLock</name>
      <anchorfile>classchannel_1_1ChannelServer.html</anchorfile>
      <anchor>acb1a8daf225cf4af4b392ad1b71b4e73</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>TokuseiManager *</type>
      <name>mTokuseiManager</name>
      <anchorfile>classchannel_1_1ChannelServer.html</anchorfile>
      <anchor>a39efc037c0718dc6f838e4c99d395747</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>WorldClock</type>
      <name>mWorldClock</name>
      <anchorfile>classchannel_1_1ChannelServer.html</anchorfile>
      <anchor>ab2ca2fd95be292d106695dadcc800f00</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>std::map&lt; WorldClockTime, std::set&lt; uint8_t &gt; &gt;</type>
      <name>mWorldClockEvents</name>
      <anchorfile>classchannel_1_1ChannelServer.html</anchorfile>
      <anchor>a6b72c5c29da87d3e0b3723f903606aad</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>std::shared_ptr&lt; libcomp::Database &gt;</type>
      <name>mWorldDatabase</name>
      <anchorfile>classchannel_1_1ChannelServer.html</anchorfile>
      <anchor>a2bb383a4072a19e07060cb0e96350f72</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>ZoneManager *</type>
      <name>mZoneManager</name>
      <anchorfile>classchannel_1_1ChannelServer.html</anchorfile>
      <anchor>a2db79d34889ce23ae107d0547c5c38db</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected" static="yes">
      <type>static GET_SERVER_TIME</type>
      <name>sGetServerTime</name>
      <anchorfile>classchannel_1_1ChannelServer.html</anchorfile>
      <anchor>a7fa8237f195096014508ed03dd46ed23</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>channel::ChannelSyncManager</name>
    <filename>classchannel_1_1ChannelSyncManager.html</filename>
    <base>libcomp::DataSyncManager</base>
    <member kind="function">
      <type></type>
      <name>ChannelSyncManager</name>
      <anchorfile>classchannel_1_1ChannelSyncManager.html</anchorfile>
      <anchor>a61d3cc6f0df850b6d94b0d557643d8fa</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>ChannelSyncManager</name>
      <anchorfile>classchannel_1_1ChannelSyncManager.html</anchorfile>
      <anchor>a25efd3a1d17f2e475a7d34306c7e182f</anchor>
      <arglist>(const std::weak_ptr&lt; ChannelServer &gt; &amp;server)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~ChannelSyncManager</name>
      <anchorfile>classchannel_1_1ChannelSyncManager.html</anchorfile>
      <anchor>a97cfeffb4b77e17901418b200db536b2</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>libcomp::EnumMap&lt; objects::SearchEntry::Type_t, std::list&lt; std::shared_ptr&lt; objects::SearchEntry &gt; &gt; &gt;</type>
      <name>GetSearchEntries</name>
      <anchorfile>classchannel_1_1ChannelSyncManager.html</anchorfile>
      <anchor>a11b078ff285328189a9eca5e0d228764</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>std::list&lt; std::shared_ptr&lt; objects::SearchEntry &gt; &gt;</type>
      <name>GetSearchEntries</name>
      <anchorfile>classchannel_1_1ChannelSyncManager.html</anchorfile>
      <anchor>a3a3ed7066598efb94c4009f093b0f44d</anchor>
      <arglist>(objects::SearchEntry::Type_t type)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>Initialize</name>
      <anchorfile>classchannel_1_1ChannelSyncManager.html</anchorfile>
      <anchor>a66fea86f3621b8e6dfea5986c4cb7a6b</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>int8_t</type>
      <name>Update</name>
      <anchorfile>classchannel_1_1ChannelSyncManager.html</anchorfile>
      <anchor>ac3d48da05dd164c35285ad526c3c33dd</anchor>
      <arglist>(const libcomp::String &amp;type, const std::shared_ptr&lt; libcomp::Object &gt; &amp;obj, bool isRemove, const libcomp::String &amp;source)</arglist>
    </member>
    <member kind="variable" protection="private">
      <type>libcomp::EnumMap&lt; objects::SearchEntry::Type_t, std::list&lt; std::shared_ptr&lt; objects::SearchEntry &gt; &gt; &gt;</type>
      <name>mSearchEntries</name>
      <anchorfile>classchannel_1_1ChannelSyncManager.html</anchorfile>
      <anchor>ad7b36fd49ff5233304842c054d8e367a</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>std::weak_ptr&lt; ChannelServer &gt;</type>
      <name>mServer</name>
      <anchorfile>classchannel_1_1ChannelSyncManager.html</anchorfile>
      <anchor>a45938f7695bd9a66b393b90556d2131f</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>channel::CharacterManager</name>
    <filename>classchannel_1_1CharacterManager.html</filename>
    <member kind="function">
      <type></type>
      <name>CharacterManager</name>
      <anchorfile>classchannel_1_1CharacterManager.html</anchorfile>
      <anchor>af1874f10df07e654a57e9f1c8e851460</anchor>
      <arglist>(const std::weak_ptr&lt; ChannelServer &gt; &amp;server)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~CharacterManager</name>
      <anchorfile>classchannel_1_1CharacterManager.html</anchorfile>
      <anchor>a0f47c4d30d5d863f09e6665927f158a0</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>AddMap</name>
      <anchorfile>classchannel_1_1CharacterManager.html</anchorfile>
      <anchor>a616624f5b27baaa9d238b8315773caa4</anchor>
      <arglist>(const std::shared_ptr&lt; channel::ChannelClientConnection &gt; &amp;client, uint16_t mapID)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>AddPlugin</name>
      <anchorfile>classchannel_1_1CharacterManager.html</anchorfile>
      <anchor>aeeaf001fc508ef18546a7639b08c3168</anchor>
      <arglist>(const std::shared_ptr&lt; channel::ChannelClientConnection &gt; &amp;client, uint16_t pluginID)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>AddRemoveItems</name>
      <anchorfile>classchannel_1_1CharacterManager.html</anchorfile>
      <anchor>a1483b47032cc4cf1e81e1a2554332849</anchor>
      <arglist>(const std::shared_ptr&lt; channel::ChannelClientConnection &gt; &amp;client, std::unordered_map&lt; uint32_t, uint32_t &gt; itemCounts, bool add, int64_t skillTargetID=0)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>AddRemoveOpponent</name>
      <anchorfile>classchannel_1_1CharacterManager.html</anchorfile>
      <anchor>a71e5e799087ca3f3492a713d55453e2c</anchor>
      <arglist>(bool add, const std::shared_ptr&lt; ActiveEntityState &gt; &amp;eState1, const std::shared_ptr&lt; ActiveEntityState &gt; &amp;eState2)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>AddRemoveValuable</name>
      <anchorfile>classchannel_1_1CharacterManager.html</anchorfile>
      <anchor>aea12319bd4266e73ffeb36ae02780ab0</anchor>
      <arglist>(const std::shared_ptr&lt; channel::ChannelClientConnection &gt; &amp;client, uint16_t valuableID, bool remove)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>CalculateCharacterBaseStats</name>
      <anchorfile>classchannel_1_1CharacterManager.html</anchorfile>
      <anchor>afe445bad364b97c639d4de516d88b268</anchor>
      <arglist>(const std::shared_ptr&lt; objects::EntityStats &gt; &amp;cs)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>CalculateDemonBaseStats</name>
      <anchorfile>classchannel_1_1CharacterManager.html</anchorfile>
      <anchor>a24951d96662b03ed592e189f700cc4f7</anchor>
      <arglist>(const std::shared_ptr&lt; objects::Demon &gt; &amp;demon, std::shared_ptr&lt; objects::EntityStats &gt; ds=nullptr, std::shared_ptr&lt; objects::MiDevilData &gt; demonData=nullptr)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>CalculateMaccaPayment</name>
      <anchorfile>classchannel_1_1CharacterManager.html</anchorfile>
      <anchor>ad7022c11bdba415d9977ede8e80fc068</anchor>
      <arglist>(const std::shared_ptr&lt; channel::ChannelClientConnection &gt; &amp;client, uint64_t amount, std::list&lt; std::shared_ptr&lt; objects::Item &gt;&gt; &amp;insertItems, std::unordered_map&lt; std::shared_ptr&lt; objects::Item &gt;, uint16_t &gt; &amp;stackAdjustItems)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>CancelStatusEffects</name>
      <anchorfile>classchannel_1_1CharacterManager.html</anchorfile>
      <anchor>acc1641b0ffee2d4238783c3b1dfeac24</anchor>
      <arglist>(const std::shared_ptr&lt; ChannelClientConnection &gt; &amp;client, uint8_t cancelFlags)</arglist>
    </member>
    <member kind="function">
      <type>std::shared_ptr&lt; objects::Demon &gt;</type>
      <name>ContractDemon</name>
      <anchorfile>classchannel_1_1CharacterManager.html</anchorfile>
      <anchor>a5109b80887e8664e5c80f9041de2ff2e</anchor>
      <arglist>(const std::shared_ptr&lt; channel::ChannelClientConnection &gt; &amp;client, const std::shared_ptr&lt; objects::MiDevilData &gt; &amp;demonData, int32_t sourceEntityID, uint16_t familiarity=0)</arglist>
    </member>
    <member kind="function">
      <type>std::shared_ptr&lt; objects::Demon &gt;</type>
      <name>ContractDemon</name>
      <anchorfile>classchannel_1_1CharacterManager.html</anchorfile>
      <anchor>a6ffbe93088e6b6562d0cbeed232200e9</anchor>
      <arglist>(const std::shared_ptr&lt; objects::Character &gt; &amp;character, const std::shared_ptr&lt; objects::MiDevilData &gt; &amp;demonData, uint16_t familiarity=0)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>ConvertIDToMaskValues</name>
      <anchorfile>classchannel_1_1CharacterManager.html</anchorfile>
      <anchor>a93b24c18ece5446e1867e61aed6c64fc</anchor>
      <arglist>(uint16_t id, size_t &amp;index, uint8_t &amp;shiftVal)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>CreateLootFromDrops</name>
      <anchorfile>classchannel_1_1CharacterManager.html</anchorfile>
      <anchor>a85f6c524a852fd7e46938ffb4c94e2b2</anchor>
      <arglist>(const std::shared_ptr&lt; objects::LootBox &gt; &amp;box, const std::list&lt; std::shared_ptr&lt; objects::ItemDrop &gt;&gt; &amp;drops, int16_t luck, bool minLast=false)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>DeleteDemon</name>
      <anchorfile>classchannel_1_1CharacterManager.html</anchorfile>
      <anchor>a3985a8367e28f2826d17db8f2fe10ec0</anchor>
      <arglist>(const std::shared_ptr&lt; objects::Demon &gt; &amp;demon, const std::shared_ptr&lt; libcomp::DatabaseChangeSet &gt; &amp;changes)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>EndExchange</name>
      <anchorfile>classchannel_1_1CharacterManager.html</anchorfile>
      <anchor>af548ae53a39f246eeaccc2c28fdd8bc2</anchor>
      <arglist>(const std::shared_ptr&lt; channel::ChannelClientConnection &gt; &amp;client, int32_t outcome=1)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>EquipItem</name>
      <anchorfile>classchannel_1_1CharacterManager.html</anchorfile>
      <anchor>ac8dc412aa3bcef4d227796d42a4c1cc4</anchor>
      <arglist>(const std::shared_ptr&lt; channel::ChannelClientConnection &gt; &amp;client, int64_t itemID)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>ExperienceGain</name>
      <anchorfile>classchannel_1_1CharacterManager.html</anchorfile>
      <anchor>a9430cb0ae3b4bab1a91ea5790b943a00</anchor>
      <arglist>(const std::shared_ptr&lt; channel::ChannelClientConnection &gt; &amp;client, uint64_t xpGain, int32_t entityID)</arglist>
    </member>
    <member kind="function">
      <type>std::shared_ptr&lt; objects::Demon &gt;</type>
      <name>GenerateDemon</name>
      <anchorfile>classchannel_1_1CharacterManager.html</anchorfile>
      <anchor>a6802d4adc3947f684985ff6af777d4d9</anchor>
      <arglist>(const std::shared_ptr&lt; objects::MiDevilData &gt; &amp;demonData, uint16_t familiarity=0)</arglist>
    </member>
    <member kind="function">
      <type>std::shared_ptr&lt; objects::Item &gt;</type>
      <name>GenerateItem</name>
      <anchorfile>classchannel_1_1CharacterManager.html</anchorfile>
      <anchor>a25630fce8afa984bd86ee4e08ff52b59</anchor>
      <arglist>(uint32_t itemID, uint16_t stackSize)</arglist>
    </member>
    <member kind="function">
      <type>std::shared_ptr&lt; objects::DemonBox &gt;</type>
      <name>GetDemonBox</name>
      <anchorfile>classchannel_1_1CharacterManager.html</anchorfile>
      <anchor>a98f95d6bffb555cc0b9eb9039be23e34</anchor>
      <arglist>(ClientState *state, int8_t boxID)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>GetDemonPacketData</name>
      <anchorfile>classchannel_1_1CharacterManager.html</anchorfile>
      <anchor>ab51facd0d1b3a7924f84df7879486f00</anchor>
      <arglist>(libcomp::Packet &amp;p, const std::shared_ptr&lt; channel::ChannelClientConnection &gt; &amp;client, const std::shared_ptr&lt; objects::DemonBox &gt; &amp;box, int8_t slot)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>GetEntityRevivalPacket</name>
      <anchorfile>classchannel_1_1CharacterManager.html</anchorfile>
      <anchor>a507eea9130c0499fd774a34b01c23c52</anchor>
      <arglist>(libcomp::Packet &amp;p, const std::shared_ptr&lt; ActiveEntityState &gt; &amp;eState, int8_t action)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>GetEntityStatsPacketData</name>
      <anchorfile>classchannel_1_1CharacterManager.html</anchorfile>
      <anchor>aafea48ed8547da2002304a6510d27b94</anchor>
      <arglist>(libcomp::Packet &amp;p, const std::shared_ptr&lt; objects::EntityStats &gt; &amp;coreStats, const std::shared_ptr&lt; ActiveEntityState &gt; &amp;state, uint8_t format)</arglist>
    </member>
    <member kind="function">
      <type>std::list&lt; std::shared_ptr&lt; objects::Item &gt; &gt;</type>
      <name>GetExistingItems</name>
      <anchorfile>classchannel_1_1CharacterManager.html</anchorfile>
      <anchor>a6bd247619309362ccea7a0cb49805a1c</anchor>
      <arglist>(const std::shared_ptr&lt; objects::Character &gt; &amp;character, uint32_t itemID, std::shared_ptr&lt; objects::ItemBox &gt; box=nullptr)</arglist>
    </member>
    <member kind="function">
      <type>int8_t</type>
      <name>GetFamiliarityRank</name>
      <anchorfile>classchannel_1_1CharacterManager.html</anchorfile>
      <anchor>aea6d27408da8d70849621b639ef6726b</anchor>
      <arglist>(uint16_t familiarity) const </arglist>
    </member>
    <member kind="function">
      <type>std::set&lt; size_t &gt;</type>
      <name>GetFreeSlots</name>
      <anchorfile>classchannel_1_1CharacterManager.html</anchorfile>
      <anchor>a901c7673c165668b43fbbbe81b7d53a9</anchor>
      <arglist>(const std::shared_ptr&lt; ChannelClientConnection &gt; &amp;client, std::shared_ptr&lt; objects::ItemBox &gt; box=nullptr)</arglist>
    </member>
    <member kind="function">
      <type>std::shared_ptr&lt; objects::ItemBox &gt;</type>
      <name>GetItemBox</name>
      <anchorfile>classchannel_1_1CharacterManager.html</anchorfile>
      <anchor>a5f095b62b1999d085838c19c11aa88c9</anchor>
      <arglist>(ClientState *state, int8_t boxType, int64_t boxID)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>GetItemDetailPacketData</name>
      <anchorfile>classchannel_1_1CharacterManager.html</anchorfile>
      <anchor>ada94a92c31a85541870130d24dec7856</anchor>
      <arglist>(libcomp::Packet &amp;p, const std::shared_ptr&lt; objects::Item &gt; &amp;item, uint8_t detailLevel=2)</arglist>
    </member>
    <member kind="function">
      <type>int32_t</type>
      <name>GetMaxExpertisePoints</name>
      <anchorfile>classchannel_1_1CharacterManager.html</anchorfile>
      <anchor>a02b36a8fe9b037b711fd56d46162d603</anchor>
      <arglist>(const std::shared_ptr&lt; objects::Character &gt; &amp;character)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>GetSynthOutcome</name>
      <anchorfile>classchannel_1_1CharacterManager.html</anchorfile>
      <anchor>a7baab039d30bb335d01d2ae40f500d86</anchor>
      <arglist>(ClientState *synthState, const std::shared_ptr&lt; objects::PlayerExchangeSession &gt; &amp;exchangeSession, uint32_t &amp;outcomeItemType, std::list&lt; int32_t &gt; &amp;successRates, int16_t *effectID=0)</arglist>
    </member>
    <member kind="function">
      <type>uint64_t</type>
      <name>GetTotalMacca</name>
      <anchorfile>classchannel_1_1CharacterManager.html</anchorfile>
      <anchor>a0933004ba58d1a2cce72ded576c9c5aa</anchor>
      <arglist>(const std::shared_ptr&lt; objects::Character &gt; &amp;character)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>HasValuable</name>
      <anchorfile>classchannel_1_1CharacterManager.html</anchorfile>
      <anchor>a680d68e198dd5fb75f5186d7cef26065</anchor>
      <arglist>(const std::shared_ptr&lt; objects::Character &gt; &amp;character, uint16_t valuableID)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>IsCPItem</name>
      <anchorfile>classchannel_1_1CharacterManager.html</anchorfile>
      <anchor>acb0541ff9bee829dbd9e63d86ed2ecc1</anchor>
      <arglist>(const std::shared_ptr&lt; objects::MiItemData &gt; &amp;itemData) const </arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>LearnSkill</name>
      <anchorfile>classchannel_1_1CharacterManager.html</anchorfile>
      <anchor>a819a8084f0e92fbb13f2c7324b49918b</anchor>
      <arglist>(const std::shared_ptr&lt; channel::ChannelClientConnection &gt; &amp;client, int32_t entityID, uint32_t skillID)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>LevelUp</name>
      <anchorfile>classchannel_1_1CharacterManager.html</anchorfile>
      <anchor>a85855154f41babdd31d2c9354aed6bea</anchor>
      <arglist>(const std::shared_ptr&lt; channel::ChannelClientConnection &gt; &amp;client, int8_t level, int32_t entityID)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>PayMacca</name>
      <anchorfile>classchannel_1_1CharacterManager.html</anchorfile>
      <anchor>a9bff56d4ac894c4a2de216381fda6f11</anchor>
      <arglist>(const std::shared_ptr&lt; channel::ChannelClientConnection &gt; &amp;client, uint64_t amount)</arglist>
    </member>
    <member kind="function">
      <type>uint8_t</type>
      <name>RecalculateStats</name>
      <anchorfile>classchannel_1_1CharacterManager.html</anchorfile>
      <anchor>add8b8e9003f73d17e900963dc98ea93f</anchor>
      <arglist>(const std::shared_ptr&lt; ActiveEntityState &gt; &amp;eState, std::shared_ptr&lt; ChannelClientConnection &gt; client=nullptr, bool updateSourceClient=true)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SendCharacterData</name>
      <anchorfile>classchannel_1_1CharacterManager.html</anchorfile>
      <anchor>ad3a72db14e6a1f12f9f8b7f0280fef20</anchor>
      <arglist>(const std::shared_ptr&lt; ChannelClientConnection &gt; &amp;client)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SendDemonBoxData</name>
      <anchorfile>classchannel_1_1CharacterManager.html</anchorfile>
      <anchor>ad88643a8b5d589d1e2cb7afe5eb46742</anchor>
      <arglist>(const std::shared_ptr&lt; ChannelClientConnection &gt; &amp;client, int8_t boxID, std::set&lt; int8_t &gt; slots={})</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SendDemonData</name>
      <anchorfile>classchannel_1_1CharacterManager.html</anchorfile>
      <anchor>a5ae6ffad745e187a3a087b4ab5c1a6e5</anchor>
      <arglist>(const std::shared_ptr&lt; ChannelClientConnection &gt; &amp;client, int8_t boxID, int8_t slot, int64_t demonID)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SendDevilBook</name>
      <anchorfile>classchannel_1_1CharacterManager.html</anchorfile>
      <anchor>a18a529c1fa2b38ba8f3db864890eec81</anchor>
      <arglist>(const std::shared_ptr&lt; ChannelClientConnection &gt; &amp;client)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SendEntityStats</name>
      <anchorfile>classchannel_1_1CharacterManager.html</anchorfile>
      <anchor>a91946073aad00bc3a2f343c56f556832</anchor>
      <arglist>(std::shared_ptr&lt; ChannelClientConnection &gt; client, int32_t entityID, bool includeSelf=true)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SendExertiseExtension</name>
      <anchorfile>classchannel_1_1CharacterManager.html</anchorfile>
      <anchor>aa1281732e45282ab8ac44f14e58d18bb</anchor>
      <arglist>(const std::shared_ptr&lt; channel::ChannelClientConnection &gt; &amp;client)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SendItemBoxData</name>
      <anchorfile>classchannel_1_1CharacterManager.html</anchorfile>
      <anchor>af192a98b0835840b159aa30673fb9432</anchor>
      <arglist>(const std::shared_ptr&lt; ChannelClientConnection &gt; &amp;client, const std::shared_ptr&lt; objects::ItemBox &gt; &amp;box)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SendItemBoxData</name>
      <anchorfile>classchannel_1_1CharacterManager.html</anchorfile>
      <anchor>aeb113f98b4773fd1f3603242b3b4878c</anchor>
      <arglist>(const std::shared_ptr&lt; ChannelClientConnection &gt; &amp;client, const std::shared_ptr&lt; objects::ItemBox &gt; &amp;box, const std::list&lt; uint16_t &gt; &amp;slots)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SendLootItemData</name>
      <anchorfile>classchannel_1_1CharacterManager.html</anchorfile>
      <anchor>acf6d3c24a23cbf45305cf1f715a49e10</anchor>
      <arglist>(const std::list&lt; std::shared_ptr&lt; ChannelClientConnection &gt;&gt; &amp;clients, const std::shared_ptr&lt; LootBoxState &gt; &amp;lState, bool queue=false)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SendMapFlags</name>
      <anchorfile>classchannel_1_1CharacterManager.html</anchorfile>
      <anchor>a2144f385f43a1e51d6ad76b1cf6e1403</anchor>
      <arglist>(const std::shared_ptr&lt; ChannelClientConnection &gt; &amp;client)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SendMaterials</name>
      <anchorfile>classchannel_1_1CharacterManager.html</anchorfile>
      <anchor>a000fc326cfa9cf4a58559fecee05bf85</anchor>
      <arglist>(const std::shared_ptr&lt; ChannelClientConnection &gt; &amp;client, std::set&lt; uint32_t &gt; updates={})</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SendMovementSpeed</name>
      <anchorfile>classchannel_1_1CharacterManager.html</anchorfile>
      <anchor>ae0191ac62452e4d0dba2bae9c9f41fc8</anchor>
      <arglist>(const std::shared_ptr&lt; channel::ChannelClientConnection &gt; &amp;client, const std::shared_ptr&lt; ActiveEntityState &gt; &amp;eState, bool diffOnly, bool queue=false)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SendOtherCharacterData</name>
      <anchorfile>classchannel_1_1CharacterManager.html</anchorfile>
      <anchor>a009b15dacec40ec6c96b93d962d21cce</anchor>
      <arglist>(const std::list&lt; std::shared_ptr&lt; ChannelClientConnection &gt;&gt; &amp;clients, ClientState *otherState)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SendOtherPartnerData</name>
      <anchorfile>classchannel_1_1CharacterManager.html</anchorfile>
      <anchor>a6bfe0dbb2a1a8fb7e05aa6d4965c2c58</anchor>
      <arglist>(const std::list&lt; std::shared_ptr&lt; ChannelClientConnection &gt;&gt; &amp;clients, ClientState *otherState)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SendPartnerData</name>
      <anchorfile>classchannel_1_1CharacterManager.html</anchorfile>
      <anchor>ad5744c0f13cb04fead45ab44d97995dd</anchor>
      <arglist>(const std::shared_ptr&lt; ChannelClientConnection &gt; &amp;client)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SendPluginFlags</name>
      <anchorfile>classchannel_1_1CharacterManager.html</anchorfile>
      <anchor>a3d37a183244b0943d1daa87d498e76ac</anchor>
      <arglist>(const std::shared_ptr&lt; ChannelClientConnection &gt; &amp;client)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SendValuableFlags</name>
      <anchorfile>classchannel_1_1CharacterManager.html</anchorfile>
      <anchor>a84b614b513085a6dac3d79958aa611bb</anchor>
      <arglist>(const std::shared_ptr&lt; ChannelClientConnection &gt; &amp;client)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetStatusIcon</name>
      <anchorfile>classchannel_1_1CharacterManager.html</anchorfile>
      <anchor>a5939126c0694d2b2e6ecdb1ced0c72d7</anchor>
      <arglist>(const std::shared_ptr&lt; channel::ChannelClientConnection &gt; &amp;client, int8_t icon=0)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>StoreDemon</name>
      <anchorfile>classchannel_1_1CharacterManager.html</anchorfile>
      <anchor>ac7790719cc2b664cab799f8f3bf37fca</anchor>
      <arglist>(const std::shared_ptr&lt; channel::ChannelClientConnection &gt; &amp;client, bool updatePartyState=true, int32_t removeMode=2)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SummonDemon</name>
      <anchorfile>classchannel_1_1CharacterManager.html</anchorfile>
      <anchor>a2cf353f50a3a7da4850594b32516a7db</anchor>
      <arglist>(const std::shared_ptr&lt; channel::ChannelClientConnection &gt; &amp;client, int64_t demonID, bool updatePartyState=true)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>UnequipItem</name>
      <anchorfile>classchannel_1_1CharacterManager.html</anchorfile>
      <anchor>af695df55fef8f1f979b5471acd335120</anchor>
      <arglist>(const std::shared_ptr&lt; channel::ChannelClientConnection &gt; &amp;client, const std::shared_ptr&lt; objects::Item &gt; &amp;item)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>UpdateDurability</name>
      <anchorfile>classchannel_1_1CharacterManager.html</anchorfile>
      <anchor>aa440ebbe4771fc1fda69024d0e6d9ba8</anchor>
      <arglist>(const std::shared_ptr&lt; channel::ChannelClientConnection &gt; &amp;client, const std::shared_ptr&lt; objects::Item &gt; &amp;item, int32_t points, bool isAdjust=true, bool updateMax=false, bool sendPacket=true)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>UpdateDurability</name>
      <anchorfile>classchannel_1_1CharacterManager.html</anchorfile>
      <anchor>aa30afba1da3289d40e0a83073aaa77d1</anchor>
      <arglist>(const std::shared_ptr&lt; channel::ChannelClientConnection &gt; &amp;client, const std::unordered_map&lt; std::shared_ptr&lt; objects::Item &gt;, int32_t &gt; &amp;items, bool isAdjust=true, bool updateMax=false, bool sendPacket=true)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>UpdateExpertise</name>
      <anchorfile>classchannel_1_1CharacterManager.html</anchorfile>
      <anchor>a596af658b1964b3d1bc2369a2e0c8225</anchor>
      <arglist>(const std::shared_ptr&lt; channel::ChannelClientConnection &gt; &amp;client, uint32_t skillID, float multiplier=-1.0f)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>UpdateExpertisePoints</name>
      <anchorfile>classchannel_1_1CharacterManager.html</anchorfile>
      <anchor>a052b3b6e969ba2e45cc6b0031382fc64</anchor>
      <arglist>(const std::shared_ptr&lt; channel::ChannelClientConnection &gt; &amp;client, const std::list&lt; std::pair&lt; uint8_t, int32_t &gt;&gt; &amp;pointMap)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>UpdateFamiliarity</name>
      <anchorfile>classchannel_1_1CharacterManager.html</anchorfile>
      <anchor>a8a14311b0919dba5634b954c57dc8e6d</anchor>
      <arglist>(const std::shared_ptr&lt; channel::ChannelClientConnection &gt; &amp;client, int32_t familiarity, bool isAdjust=false, bool sendPacket=true)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>UpdateItems</name>
      <anchorfile>classchannel_1_1CharacterManager.html</anchorfile>
      <anchor>a1e3563a5520544cc15825f80e00f30bf</anchor>
      <arglist>(const std::shared_ptr&lt; channel::ChannelClientConnection &gt; &amp;client, bool validateOnly, std::list&lt; std::shared_ptr&lt; objects::Item &gt;&gt; &amp;insertItems, std::unordered_map&lt; std::shared_ptr&lt; objects::Item &gt;, uint16_t &gt; stackAdjustItems)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>UpdateLNC</name>
      <anchorfile>classchannel_1_1CharacterManager.html</anchorfile>
      <anchor>acce6083979c3bcd39245f63b8a9f4115</anchor>
      <arglist>(const std::shared_ptr&lt; channel::ChannelClientConnection &gt; &amp;client, int16_t lnc)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>UpdateSkillPoints</name>
      <anchorfile>classchannel_1_1CharacterManager.html</anchorfile>
      <anchor>a1bffcfac2ff7ced02d3eb0af6238e217</anchor>
      <arglist>(const std::shared_ptr&lt; channel::ChannelClientConnection &gt; &amp;client, int32_t points)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>UpdateSoulPoints</name>
      <anchorfile>classchannel_1_1CharacterManager.html</anchorfile>
      <anchor>a0c2fe74ade843973c2146200402fc55e</anchor>
      <arglist>(const std::shared_ptr&lt; channel::ChannelClientConnection &gt; &amp;client, int32_t points, bool isAdjust=false)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>UpdateStatusEffects</name>
      <anchorfile>classchannel_1_1CharacterManager.html</anchorfile>
      <anchor>a98b74f2446836083e4f991f4b0df7dab</anchor>
      <arglist>(const std::shared_ptr&lt; ActiveEntityState &gt; &amp;eState, bool queueSave=false)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>UpdateWorldDisplayState</name>
      <anchorfile>classchannel_1_1CharacterManager.html</anchorfile>
      <anchor>a856e6410ae3f414f2451cfcb59ada432</anchor>
      <arglist>(const std::set&lt; std::shared_ptr&lt; ActiveEntityState &gt;&gt; &amp;entities)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>AdjustStatBounds</name>
      <anchorfile>classchannel_1_1CharacterManager.html</anchorfile>
      <anchor>a586ba42b36f9d71af9f7246395f0eb99</anchor>
      <arglist>(libcomp::EnumMap&lt; CorrectTbl, int16_t &gt; &amp;stats)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>CalculateDependentStats</name>
      <anchorfile>classchannel_1_1CharacterManager.html</anchorfile>
      <anchor>a7d3d66646e46f13d6c01d9ece2419699</anchor>
      <arglist>(libcomp::EnumMap&lt; CorrectTbl, int16_t &gt; &amp;stats, int8_t level, bool isDemon)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static libcomp::EnumMap&lt; CorrectTbl, int16_t &gt;</type>
      <name>GetCharacterBaseStatMap</name>
      <anchorfile>classchannel_1_1CharacterManager.html</anchorfile>
      <anchor>a7b1affc94f77ac7634ddf6c6387af725</anchor>
      <arglist>(const std::shared_ptr&lt; objects::EntityStats &gt; &amp;cs)</arglist>
    </member>
    <member kind="function" protection="private">
      <type>void</type>
      <name>BoostStats</name>
      <anchorfile>classchannel_1_1CharacterManager.html</anchorfile>
      <anchor>a41d45a6c0bff3fede173fb190559cf6d</anchor>
      <arglist>(libcomp::EnumMap&lt; CorrectTbl, int16_t &gt; &amp;stats, const std::shared_ptr&lt; objects::MiDevilLVUpData &gt; &amp;data, int boostLevel)</arglist>
    </member>
    <member kind="variable" protection="private">
      <type>std::weak_ptr&lt; ChannelServer &gt;</type>
      <name>mServer</name>
      <anchorfile>classchannel_1_1CharacterManager.html</anchorfile>
      <anchor>ab492ee0001c184164b55c06dce3ddcdc</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>channel::CharacterState</name>
    <filename>classchannel_1_1CharacterState.html</filename>
    <base>ActiveEntityStateImp&lt; objects::Character &gt;</base>
    <member kind="function">
      <type></type>
      <name>CharacterState</name>
      <anchorfile>classchannel_1_1CharacterState.html</anchorfile>
      <anchor>abe9bcd871b173ad3312d71e3165b1bfb</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~CharacterState</name>
      <anchorfile>classchannel_1_1CharacterState.html</anchorfile>
      <anchor>a5435a681a631dda2719db8b2c937389c</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>size_t</type>
      <name>AddRemoveOpponent</name>
      <anchorfile>classchannel_1_1ActiveEntityState.html</anchorfile>
      <anchor>ae1945edacc9db9dd0c0b8fc57ef0ba5a</anchor>
      <arglist>(bool add, int32_t opponentID)</arglist>
    </member>
    <member kind="function">
      <type>std::set&lt; uint32_t &gt;</type>
      <name>AddStatusEffects</name>
      <anchorfile>classchannel_1_1ActiveEntityState.html</anchorfile>
      <anchor>a66bf7fb8d7cd4587e53b9f51128857f2</anchor>
      <arglist>(const AddStatusEffectMap &amp;effects, libcomp::DefinitionManager *definitionManager, uint32_t now=0, bool queueChanges=true)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>CanAct</name>
      <anchorfile>classchannel_1_1ActiveEntityState.html</anchorfile>
      <anchor>ae18bb9a1c3476876a23040c08b5ce37a</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>CancelStatusEffects</name>
      <anchorfile>classchannel_1_1ActiveEntityState.html</anchorfile>
      <anchor>affba706127bff8c636e153cb69c29910</anchor>
      <arglist>(uint8_t cancelFlags)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>CanMove</name>
      <anchorfile>classchannel_1_1ActiveEntityState.html</anchorfile>
      <anchor>af56db75ec5333f4d99949f271c6a38de</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>ExpireStatusEffects</name>
      <anchorfile>classchannel_1_1ActiveEntityState.html</anchorfile>
      <anchor>a513eb93dd9e9b3d8956459355bc08a98</anchor>
      <arglist>(const std::set&lt; uint32_t &gt; &amp;effectTypes)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>ExpireStatusTimes</name>
      <anchorfile>classchannel_1_1ActiveEntityState.html</anchorfile>
      <anchor>a209bb96b9316bf12724e0a48891acc97</anchor>
      <arglist>(uint64_t now)</arglist>
    </member>
    <member kind="function">
      <type>uint64_t</type>
      <name>GetActionTime</name>
      <anchorfile>classchannel_1_1ActiveEntityState.html</anchorfile>
      <anchor>a66d0c35bb1d4ee3e361fafb02fcf629a</anchor>
      <arglist>(const libcomp::String &amp;action)</arglist>
    </member>
    <member kind="function">
      <type>std::shared_ptr&lt; channel::AIState &gt;</type>
      <name>GetAIState</name>
      <anchorfile>classchannel_1_1ActiveEntityState.html</anchorfile>
      <anchor>a7683912a1ff2b1a5dd162b5441a7dcc5</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual std::set&lt; uint32_t &gt;</type>
      <name>GetAllSkills</name>
      <anchorfile>classchannel_1_1ActiveEntityStateImp.html</anchorfile>
      <anchor>ab49cdbfc8d64fb90019f421a9f182597</anchor>
      <arglist>(libcomp::DefinitionManager *definitionManager, bool includeTokusei)</arglist>
    </member>
    <member kind="function">
      <type>std::list&lt; std::shared_ptr&lt; objects::MiSpecialConditionData &gt; &gt;</type>
      <name>GetConditionalTokusei</name>
      <anchorfile>classchannel_1_1CharacterState.html</anchorfile>
      <anchor>a6d480d2be70ca6789e01c542843f68a9</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual std::shared_ptr&lt; objects::EntityStats &gt;</type>
      <name>GetCoreStats</name>
      <anchorfile>classchannel_1_1ActiveEntityStateImp.html</anchorfile>
      <anchor>a9f5302b984250a7215f0fd2ba9987d57</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>int16_t</type>
      <name>GetCorrectValue</name>
      <anchorfile>classchannel_1_1ActiveEntityState.html</anchorfile>
      <anchor>aa960f7643649ac1fc26d8baef048f5df</anchor>
      <arglist>(CorrectTbl tableID, std::shared_ptr&lt; objects::CalculatedEntityState &gt; calcState=nullptr)</arglist>
    </member>
    <member kind="function">
      <type>std::list&lt; std::pair&lt; std::shared_ptr&lt; objects::StatusEffect &gt;, uint32_t &gt; &gt;</type>
      <name>GetCurrentStatusEffectStates</name>
      <anchorfile>classchannel_1_1ActiveEntityState.html</anchorfile>
      <anchor>a9364c47b242a5691d9500504c2a3e2f8</anchor>
      <arglist>(libcomp::DefinitionManager *definitionManager, uint32_t now=0)</arglist>
    </member>
    <member kind="function">
      <type>float</type>
      <name>GetDistance</name>
      <anchorfile>classchannel_1_1ActiveEntityState.html</anchorfile>
      <anchor>a38d4d0eba28e2c3dec7bee89df6c244a</anchor>
      <arglist>(float x, float y, bool squared=false)</arglist>
    </member>
    <member kind="function">
      <type>std::shared_ptr&lt; objects::Character &gt;</type>
      <name>GetEntity</name>
      <anchorfile>classchannel_1_1ActiveEntityStateImp.html</anchorfile>
      <anchor>af4221fa010303086a166e69ca54345ea</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual const libobjgen::UUID</type>
      <name>GetEntityUUID</name>
      <anchorfile>classchannel_1_1ActiveEntityStateImp.html</anchorfile>
      <anchor>aa1e73078f5e79d3b16ecd0e1119ee9f7</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>std::list&lt; int32_t &gt;</type>
      <name>GetEquipmentTokuseiIDs</name>
      <anchorfile>classchannel_1_1CharacterState.html</anchorfile>
      <anchor>ae7fd9287b1226cd096fe44b80108e353</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>uint8_t</type>
      <name>GetExpertiseRank</name>
      <anchorfile>classchannel_1_1CharacterState.html</anchorfile>
      <anchor>ac5133d08b88d3f6732909a4da3b10c34</anchor>
      <arglist>(libcomp::DefinitionManager *definitionManager, uint32_t expertiseID)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual uint8_t</type>
      <name>GetLNCType</name>
      <anchorfile>classchannel_1_1ActiveEntityStateImp.html</anchorfile>
      <anchor>a4100067bbe779db70c897cf343f7943c</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>float</type>
      <name>GetMovementSpeed</name>
      <anchorfile>classchannel_1_1ActiveEntityState.html</anchorfile>
      <anchor>a3a11050fb65a386e982332da21db2c87</anchor>
      <arglist>(bool altSpeed=false)</arglist>
    </member>
    <member kind="function">
      <type>int8_t</type>
      <name>GetNextActivatedAbilityID</name>
      <anchorfile>classchannel_1_1ActiveEntityState.html</anchorfile>
      <anchor>a3d841d6660fa605b5ca4f5628ec0c667</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>int16_t</type>
      <name>GetNRAChance</name>
      <anchorfile>classchannel_1_1ActiveEntityState.html</anchorfile>
      <anchor>ac468fcaa3b7dd039c9924d1ef55e880a</anchor>
      <arglist>(uint8_t nraIdx, CorrectTbl type, std::shared_ptr&lt; objects::CalculatedEntityState &gt; calcState=nullptr)</arglist>
    </member>
    <member kind="function">
      <type>std::set&lt; int32_t &gt;</type>
      <name>GetOpponentIDs</name>
      <anchorfile>classchannel_1_1ActiveEntityState.html</anchorfile>
      <anchor>a28eb0b46ea358d21487b2f855ef3bfd3</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>const std::unordered_map&lt; uint32_t, std::shared_ptr&lt; objects::StatusEffect &gt; &gt; &amp;</type>
      <name>GetStatusEffects</name>
      <anchorfile>classchannel_1_1ActiveEntityState.html</anchorfile>
      <anchor>af08840e2fef8a61e0737b61a85bb9c20</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>std::shared_ptr&lt; Zone &gt;</type>
      <name>GetZone</name>
      <anchorfile>classchannel_1_1ActiveEntityState.html</anchorfile>
      <anchor>ab75cc6f82b822318ec0816b6ccebd30a</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>HasOpponent</name>
      <anchorfile>classchannel_1_1ActiveEntityState.html</anchorfile>
      <anchor>ad2260cd031d413d44dd727a014cffc8a</anchor>
      <arglist>(int32_t opponentID=0)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>IsAlive</name>
      <anchorfile>classchannel_1_1ActiveEntityState.html</anchorfile>
      <anchor>ab6edd9f3b8abd577890af858d5dc85dc</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>IsLNCType</name>
      <anchorfile>classchannel_1_1ActiveEntityState.html</anchorfile>
      <anchor>ae897ad90fe5cb5f505f2de5a0da374c7</anchor>
      <arglist>(uint8_t lncType, bool invertFlag)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>IsMoving</name>
      <anchorfile>classchannel_1_1ActiveEntityState.html</anchorfile>
      <anchor>aa86a6658fd24aeafde4b18c0c97d0433</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>IsRotating</name>
      <anchorfile>classchannel_1_1ActiveEntityState.html</anchorfile>
      <anchor>af995e3c25687f8b2692dc523f08c04b1</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>Move</name>
      <anchorfile>classchannel_1_1ActiveEntityState.html</anchorfile>
      <anchor>ae83be0aeee9a600a99286fc1db8fc8d1</anchor>
      <arglist>(float xPos, float yPos, uint64_t now)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>PopEffectTicks</name>
      <anchorfile>classchannel_1_1ActiveEntityState.html</anchorfile>
      <anchor>a0539c15041b0ac7c49aa586f4b28eceb</anchor>
      <arglist>(libcomp::DefinitionManager *definitionManager, uint32_t time, int32_t &amp;hpTDamage, int32_t &amp;mpTDamage, std::set&lt; uint32_t &gt; &amp;added, std::set&lt; uint32_t &gt; &amp;updated, std::set&lt; uint32_t &gt; &amp;removed)</arglist>
    </member>
    <member kind="function">
      <type>std::set&lt; uint8_t &gt;</type>
      <name>PopNRAShields</name>
      <anchorfile>classchannel_1_1ActiveEntityState.html</anchorfile>
      <anchor>aa40113ab2ad642f5a232f1807dcaca76</anchor>
      <arglist>(const std::list&lt; CorrectTbl &gt; &amp;types)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual bool</type>
      <name>Ready</name>
      <anchorfile>classchannel_1_1ActiveEntityStateImp.html</anchorfile>
      <anchor>a66ce4e4014373250c4e7a32108fdda78</anchor>
      <arglist>(bool ignoreDisplayState=false)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual bool</type>
      <name>RecalcDisabledSkills</name>
      <anchorfile>classchannel_1_1CharacterState.html</anchorfile>
      <anchor>ae9ae03995aab6df6229fdcdfcac94ef2</anchor>
      <arglist>(libcomp::DefinitionManager *definitionManager)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>RecalcEquipState</name>
      <anchorfile>classchannel_1_1CharacterState.html</anchorfile>
      <anchor>a043802378e2fd9e4765b9ccc9ce6fc0e</anchor>
      <arglist>(libcomp::DefinitionManager *definitionManager)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual uint8_t</type>
      <name>RecalculateStats</name>
      <anchorfile>classchannel_1_1ActiveEntityStateImp.html</anchorfile>
      <anchor>aa13eeaec58b7c32b8d8569f026b59e3f</anchor>
      <arglist>(libcomp::DefinitionManager *definitionManager, std::shared_ptr&lt; objects::CalculatedEntityState &gt; calcState=nullptr)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>RefreshCurrentPosition</name>
      <anchorfile>classchannel_1_1ActiveEntityState.html</anchorfile>
      <anchor>ad58ca1704077c66eae6e6cfa5f93d137</anchor>
      <arglist>(uint64_t now)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>RefreshKnockback</name>
      <anchorfile>classchannel_1_1ActiveEntityState.html</anchorfile>
      <anchor>ad61a7487707c26af826391961d0fd7a5</anchor>
      <arglist>(uint64_t now, float recoveryBoost)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>Rotate</name>
      <anchorfile>classchannel_1_1ActiveEntityState.html</anchorfile>
      <anchor>ae22c1b7e0c0ff0217bf4d5d255e4db13</anchor>
      <arglist>(float rot, uint64_t now)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetActionTime</name>
      <anchorfile>classchannel_1_1ActiveEntityState.html</anchorfile>
      <anchor>a5eca26bba7bcac79034d2adfa7f584f7</anchor>
      <arglist>(const libcomp::String &amp;action, uint64_t time)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetAIState</name>
      <anchorfile>classchannel_1_1ActiveEntityState.html</anchorfile>
      <anchor>a23f9604c12ecf053dab3cb4511c7a624</anchor>
      <arglist>(const std::shared_ptr&lt; channel::AIState &gt; &amp;aiState)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetEntity</name>
      <anchorfile>classchannel_1_1ActiveEntityStateImp.html</anchorfile>
      <anchor>a081b5d9be8d1e94e5ac3a1c04e33a6cc</anchor>
      <arglist>(const std::shared_ptr&lt; objects::Character &gt; &amp;entity, const std::shared_ptr&lt; objects::MiDevilData &gt; &amp;devilData)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>SetHPMP</name>
      <anchorfile>classchannel_1_1ActiveEntityState.html</anchorfile>
      <anchor>a6616f760c961b349baf3b81d0bea31dc</anchor>
      <arglist>(int32_t hp, int32_t mp, bool adjust, bool canOverflow=false)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>SetHPMP</name>
      <anchorfile>classchannel_1_1ActiveEntityState.html</anchorfile>
      <anchor>a7c6d6218e677353ee81718c7a821be17</anchor>
      <arglist>(int32_t hp, int32_t mp, bool adjust, bool canOverflow, int32_t clenchChance, int32_t &amp;hpAdjusted, int32_t &amp;mpAdjusted)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetStatusEffects</name>
      <anchorfile>classchannel_1_1ActiveEntityState.html</anchorfile>
      <anchor>abc6fe40cb7d3047ea41b17ff76c3f7df</anchor>
      <arglist>(const std::list&lt; std::shared_ptr&lt; objects::StatusEffect &gt;&gt; &amp;effects)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetStatusEffectsActive</name>
      <anchorfile>classchannel_1_1ActiveEntityState.html</anchorfile>
      <anchor>ad037282b3c14165da135e4205658a951</anchor>
      <arglist>(bool activate, libcomp::DefinitionManager *definitionManager, uint32_t now=0)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetZone</name>
      <anchorfile>classchannel_1_1ActiveEntityState.html</anchorfile>
      <anchor>a30007b72d6e529ca1bb069a699f4ed31</anchor>
      <arglist>(const std::shared_ptr&lt; Zone &gt; &amp;zone, bool updatePrevious=true)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>SkillAvailable</name>
      <anchorfile>classchannel_1_1ActiveEntityState.html</anchorfile>
      <anchor>a7aaf79e1f896744447d2db61abb9c9ec</anchor>
      <arglist>(uint32_t skillID)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>Stop</name>
      <anchorfile>classchannel_1_1ActiveEntityState.html</anchorfile>
      <anchor>a2cad211a8af9bca5239ab9f7579f3120</anchor>
      <arglist>(uint64_t now)</arglist>
    </member>
    <member kind="function">
      <type>float</type>
      <name>UpdateKnockback</name>
      <anchorfile>classchannel_1_1ActiveEntityState.html</anchorfile>
      <anchor>ab4c9670f327a31be928b619b000110d4</anchor>
      <arglist>(uint64_t now, float decrease, float recoveryBoost)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static float</type>
      <name>CorrectRotation</name>
      <anchorfile>classchannel_1_1ActiveEntityState.html</anchorfile>
      <anchor>a2d02b85123163c97fd1e593eb514640b</anchor>
      <arglist>(float rot)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>ActivateStatusEffect</name>
      <anchorfile>classchannel_1_1ActiveEntityState.html</anchorfile>
      <anchor>a002f85b0ac7e3213d13cce85ae1a5b1c</anchor>
      <arglist>(const std::shared_ptr&lt; objects::StatusEffect &gt; &amp;effect, libcomp::DefinitionManager *definitionManager, uint32_t now, bool timeOnly)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>AdjustStats</name>
      <anchorfile>classchannel_1_1ActiveEntityState.html</anchorfile>
      <anchor>a318eb1d9febb3704d218b14cde573230</anchor>
      <arglist>(const std::list&lt; std::shared_ptr&lt; objects::MiCorrectTbl &gt;&gt; &amp;adjustments, libcomp::EnumMap&lt; CorrectTbl, int16_t &gt; &amp;stats, std::shared_ptr&lt; objects::CalculatedEntityState &gt; calcState, bool baseMode)</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>BaseStatsCalculated</name>
      <anchorfile>classchannel_1_1CharacterState.html</anchorfile>
      <anchor>a029527a9a8a2699c49e47fbeda95d634</anchor>
      <arglist>(libcomp::DefinitionManager *definitionManager, std::shared_ptr&lt; objects::CalculatedEntityState &gt; calcState, libcomp::EnumMap&lt; CorrectTbl, int16_t &gt; &amp;stats, std::list&lt; std::shared_ptr&lt; objects::MiCorrectTbl &gt;&gt; &amp;adjustments)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>uint8_t</type>
      <name>CalculateLNCType</name>
      <anchorfile>classchannel_1_1ActiveEntityState.html</anchorfile>
      <anchor>a34960657093fd4872631e886df4998e2</anchor>
      <arglist>(int16_t lncPoints) const </arglist>
    </member>
    <member kind="function" protection="protected">
      <type>uint8_t</type>
      <name>CompareAndResetStats</name>
      <anchorfile>classchannel_1_1ActiveEntityState.html</anchorfile>
      <anchor>a3441ec808c0da0ebddb044fce70b52d4</anchor>
      <arglist>(libcomp::EnumMap&lt; CorrectTbl, int16_t &gt; &amp;stats, int32_t extraHP=0)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>GetAdditionalCorrectTbls</name>
      <anchorfile>classchannel_1_1ActiveEntityState.html</anchorfile>
      <anchor>af5fda23fe92a4383277c28073712d106</anchor>
      <arglist>(libcomp::DefinitionManager *definitionManager, std::shared_ptr&lt; objects::CalculatedEntityState &gt; calcState, std::list&lt; std::shared_ptr&lt; objects::MiCorrectTbl &gt;&gt; &amp;adjustments)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>uint32_t</type>
      <name>GetCurrentExpiration</name>
      <anchorfile>classchannel_1_1ActiveEntityState.html</anchorfile>
      <anchor>af93288af34867c22340a7da9f699b2fc</anchor>
      <arglist>(const std::shared_ptr&lt; objects::StatusEffect &gt; &amp;effect, libcomp::DefinitionManager *definitionManager, uint32_t nextTime, uint32_t now)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>std::set&lt; uint32_t &gt;</type>
      <name>GetEffectiveTokuseiSkills</name>
      <anchorfile>classchannel_1_1ActiveEntityState.html</anchorfile>
      <anchor>af5d0540419e8c3d02bb6485603c81133</anchor>
      <arglist>(libcomp::DefinitionManager *definitionManager)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>uint8_t</type>
      <name>RecalculateDemonStats</name>
      <anchorfile>classchannel_1_1ActiveEntityState.html</anchorfile>
      <anchor>aa116a03fff76b59e8577b87cb6070365</anchor>
      <arglist>(libcomp::DefinitionManager *definitionManager, std::shared_ptr&lt; objects::CalculatedEntityState &gt; calcState)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>RegisterNextEffectTime</name>
      <anchorfile>classchannel_1_1ActiveEntityState.html</anchorfile>
      <anchor>abb971ac4a2f29be3a316a5e12a4b51bb</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>RemoveInactiveSwitchSkills</name>
      <anchorfile>classchannel_1_1ActiveEntityState.html</anchorfile>
      <anchor>a7b31da8ab8cf7529a93ae5ab43d8e6cb</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>RemoveStatusEffects</name>
      <anchorfile>classchannel_1_1ActiveEntityState.html</anchorfile>
      <anchor>af048315581b26430c0dc62d15d5078dc</anchor>
      <arglist>(const std::set&lt; uint32_t &gt; &amp;effectTypes)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>SetNextEffectTime</name>
      <anchorfile>classchannel_1_1ActiveEntityState.html</anchorfile>
      <anchor>af9d56a631bf512f8ac22671e78fb3864</anchor>
      <arglist>(uint32_t effectType, uint32_t time)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>SetStatusEffects</name>
      <anchorfile>classchannel_1_1ActiveEntityState.html</anchorfile>
      <anchor>a67dc06dcf10274170f0728f5f066588f</anchor>
      <arglist>(const std::list&lt; libcomp::ObjectReference&lt; objects::StatusEffect &gt;&gt; &amp;effects)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>UpdateNRAChances</name>
      <anchorfile>classchannel_1_1ActiveEntityState.html</anchorfile>
      <anchor>ab085e16b7b68c89e4f92763dbdf8e87d</anchor>
      <arglist>(libcomp::EnumMap&lt; CorrectTbl, int16_t &gt; &amp;stats, std::shared_ptr&lt; objects::CalculatedEntityState &gt; calcState, const std::list&lt; std::shared_ptr&lt; objects::MiCorrectTbl &gt;&gt; &amp;adjustments={})</arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>std::unordered_map&lt; std::string, uint64_t &gt;</type>
      <name>mActionTimes</name>
      <anchorfile>classchannel_1_1ActiveEntityState.html</anchorfile>
      <anchor>a54a791fd0f100e1e098d0c8579cd6298</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>std::shared_ptr&lt; AIState &gt;</type>
      <name>mAIState</name>
      <anchorfile>classchannel_1_1ActiveEntityState.html</anchorfile>
      <anchor>aafcef9fb7f80ea09775a6f00a008ee11</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>bool</type>
      <name>mAlive</name>
      <anchorfile>classchannel_1_1ActiveEntityState.html</anchorfile>
      <anchor>ab1f143a1f6904fd063477232e7477b92</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>std::unordered_map&lt; uint8_t, std::set&lt; uint32_t &gt; &gt;</type>
      <name>mCancelConditions</name>
      <anchorfile>classchannel_1_1ActiveEntityState.html</anchorfile>
      <anchor>a2878947ed3b4a723ba1804841658323b</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>std::shared_ptr&lt; Zone &gt;</type>
      <name>mCurrentZone</name>
      <anchorfile>classchannel_1_1ActiveEntityState.html</anchorfile>
      <anchor>a1dc568369cb1ff4d78a9db83c08375f8</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>bool</type>
      <name>mEffectsActive</name>
      <anchorfile>classchannel_1_1ActiveEntityState.html</anchorfile>
      <anchor>ae7e6dc8b0b6c2ecf09c634c1e7cb701f</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>bool</type>
      <name>mInitialCalc</name>
      <anchorfile>classchannel_1_1ActiveEntityState.html</anchorfile>
      <anchor>ace2da752766739a6149fc2b07b158d59</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>uint64_t</type>
      <name>mLastRefresh</name>
      <anchorfile>classchannel_1_1ActiveEntityState.html</anchorfile>
      <anchor>ade34713c4aec7ca929822a292b0223d3</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>std::mutex</type>
      <name>mLock</name>
      <anchorfile>classchannel_1_1ActiveEntityState.html</anchorfile>
      <anchor>a8ba2ead908829f41707bdd3b36bcbb0a</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>int8_t</type>
      <name>mNextActivatedAbilityID</name>
      <anchorfile>classchannel_1_1ActiveEntityState.html</anchorfile>
      <anchor>a201d4512bc8abb8059a6589999a48bdb</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>std::map&lt; uint32_t, std::set&lt; uint32_t &gt; &gt;</type>
      <name>mNextEffectTimes</name>
      <anchorfile>classchannel_1_1ActiveEntityState.html</anchorfile>
      <anchor>a7cec5b66c750593b2ad1f2b86c03e233</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>std::unordered_map&lt; uint32_t, libcomp::EnumMap&lt; CorrectTbl, std::set&lt; uint8_t &gt; &gt; &gt;</type>
      <name>mNRAShields</name>
      <anchorfile>classchannel_1_1ActiveEntityState.html</anchorfile>
      <anchor>a203b30260e6d7f760c0b8071b6babc51</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>std::set&lt; int32_t &gt;</type>
      <name>mOpponentIDs</name>
      <anchorfile>classchannel_1_1ActiveEntityState.html</anchorfile>
      <anchor>ac62ddc39f590dd556479f21152f0fb47</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>std::unordered_map&lt; uint32_t, std::shared_ptr&lt; objects::StatusEffect &gt; &gt;</type>
      <name>mStatusEffects</name>
      <anchorfile>classchannel_1_1ActiveEntityState.html</anchorfile>
      <anchor>a8339cd0b835314682a8419496ab3ff94</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>std::set&lt; uint32_t &gt;</type>
      <name>mTimeDamageEffects</name>
      <anchorfile>classchannel_1_1ActiveEntityState.html</anchorfile>
      <anchor>ab6b71c46b84f4cb073667dd823ea0491</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>std::list&lt; std::shared_ptr&lt; objects::MiSpecialConditionData &gt; &gt;</type>
      <name>mConditionalTokusei</name>
      <anchorfile>classchannel_1_1CharacterState.html</anchorfile>
      <anchor>a572209222e430824adeb9ee69e85e039</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>std::list&lt; int32_t &gt;</type>
      <name>mEquipmentTokuseiIDs</name>
      <anchorfile>classchannel_1_1CharacterState.html</anchorfile>
      <anchor>a00d94fdccafd909026b84bf514404f50</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>std::list&lt; std::shared_ptr&lt; objects::MiSpecialConditionData &gt; &gt;</type>
      <name>mStatConditionalTokusei</name>
      <anchorfile>classchannel_1_1CharacterState.html</anchorfile>
      <anchor>af9345087807c81da15361e463df70b1e</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>channel::ChatManager</name>
    <filename>classchannel_1_1ChatManager.html</filename>
    <member kind="function">
      <type></type>
      <name>ChatManager</name>
      <anchorfile>classchannel_1_1ChatManager.html</anchorfile>
      <anchor>a22e0c728bf32f44287b595746f07649a</anchor>
      <arglist>(const std::weak_ptr&lt; ChannelServer &gt; &amp;server)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~ChatManager</name>
      <anchorfile>classchannel_1_1ChatManager.html</anchorfile>
      <anchor>aacd4b5d72b7b1622c7da0980c8c0dc19</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>ExecuteGMCommand</name>
      <anchorfile>classchannel_1_1ChatManager.html</anchorfile>
      <anchor>ac320ce3efb2ca985d96d7ac3dbf776b2</anchor>
      <arglist>(const std::shared_ptr&lt; channel::ChannelClientConnection &gt; &amp;client, const libcomp::String &amp;cmd, const std::list&lt; libcomp::String &gt; &amp;args)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>SendChatMessage</name>
      <anchorfile>classchannel_1_1ChatManager.html</anchorfile>
      <anchor>a3460c9195b305403095d53dcba1b63e9</anchor>
      <arglist>(const std::shared_ptr&lt; channel::ChannelClientConnection &gt; &amp;client, ChatType_t chatChannel, const libcomp::String &amp;message)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>SendTellMessage</name>
      <anchorfile>classchannel_1_1ChatManager.html</anchorfile>
      <anchor>adce8e1a899bdee3266904f337824275c</anchor>
      <arglist>(const std::shared_ptr&lt; ChannelClientConnection &gt; &amp;client, const libcomp::String &amp;message, const libcomp::String &amp;targetName)</arglist>
    </member>
    <member kind="function" protection="private">
      <type>bool</type>
      <name>GetDecimalArg</name>
      <anchorfile>classchannel_1_1ChatManager.html</anchorfile>
      <anchor>a648aa9073b31e7344defb2af4b7145ad</anchor>
      <arglist>(T &amp;outVal, std::list&lt; libcomp::String &gt; &amp;args) const </arglist>
    </member>
    <member kind="function" protection="private">
      <type>bool</type>
      <name>GetIntegerArg</name>
      <anchorfile>classchannel_1_1ChatManager.html</anchorfile>
      <anchor>a6ef1f0c598c0410afb5f4ba4ebba5161</anchor>
      <arglist>(T &amp;outVal, std::list&lt; libcomp::String &gt; &amp;args) const </arglist>
    </member>
    <member kind="function" protection="private">
      <type>bool</type>
      <name>GetStringArg</name>
      <anchorfile>classchannel_1_1ChatManager.html</anchorfile>
      <anchor>a9ec0e4e64dfd2fdf7868a3c1d8cc36d3</anchor>
      <arglist>(libcomp::String &amp;outVal, std::list&lt; libcomp::String &gt; &amp;args, libcomp::Convert::Encoding_t encoding=libcomp::Convert::Encoding_t::ENCODING_UTF8) const </arglist>
    </member>
    <member kind="function" protection="private">
      <type>bool</type>
      <name>GetTargetCharacterAccount</name>
      <anchorfile>classchannel_1_1ChatManager.html</anchorfile>
      <anchor>a91b1598b49ed5a320d5104ec08cf6087</anchor>
      <arglist>(libcomp::String &amp;targetName, bool currentOnly, std::shared_ptr&lt; objects::Character &gt; &amp;targetCharacter, std::shared_ptr&lt; objects::Account &gt; &amp;targetAccount, std::shared_ptr&lt; channel::ChannelClientConnection &gt; &amp;targetClient)</arglist>
    </member>
    <member kind="function" protection="private">
      <type>bool</type>
      <name>GMCommand_AddCP</name>
      <anchorfile>classchannel_1_1ChatManager.html</anchorfile>
      <anchor>a1eb1ac3382ac9d35605e27aac519e387</anchor>
      <arglist>(const std::shared_ptr&lt; channel::ChannelClientConnection &gt; &amp;client, const std::list&lt; libcomp::String &gt; &amp;args)</arglist>
    </member>
    <member kind="function" protection="private">
      <type>bool</type>
      <name>GMCommand_Announce</name>
      <anchorfile>classchannel_1_1ChatManager.html</anchorfile>
      <anchor>a07d4ec55a818470d90284c4049e884cd</anchor>
      <arglist>(const std::shared_ptr&lt; channel::ChannelClientConnection &gt; &amp;client, const std::list&lt; libcomp::String &gt; &amp;args)</arglist>
    </member>
    <member kind="function" protection="private">
      <type>bool</type>
      <name>GMCommand_Ban</name>
      <anchorfile>classchannel_1_1ChatManager.html</anchorfile>
      <anchor>adb22a8f75bf4e1f0554263f82a2790f7</anchor>
      <arglist>(const std::shared_ptr&lt; channel::ChannelClientConnection &gt; &amp;client, const std::list&lt; libcomp::String &gt; &amp;args)</arglist>
    </member>
    <member kind="function" protection="private">
      <type>bool</type>
      <name>GMCommand_Contract</name>
      <anchorfile>classchannel_1_1ChatManager.html</anchorfile>
      <anchor>ac3ff99a3aec84bf389c03114a3c15fb9</anchor>
      <arglist>(const std::shared_ptr&lt; channel::ChannelClientConnection &gt; &amp;client, const std::list&lt; libcomp::String &gt; &amp;args)</arglist>
    </member>
    <member kind="function" protection="private">
      <type>bool</type>
      <name>GMCommand_Crash</name>
      <anchorfile>classchannel_1_1ChatManager.html</anchorfile>
      <anchor>a5d8bc756f08ec71ff7e5ea7e6014bed4</anchor>
      <arglist>(const std::shared_ptr&lt; channel::ChannelClientConnection &gt; &amp;client, const std::list&lt; libcomp::String &gt; &amp;args)</arglist>
    </member>
    <member kind="function" protection="private">
      <type>bool</type>
      <name>GMCommand_Effect</name>
      <anchorfile>classchannel_1_1ChatManager.html</anchorfile>
      <anchor>a33cd9c6973eb5c867f322bd8d1f0d430</anchor>
      <arglist>(const std::shared_ptr&lt; channel::ChannelClientConnection &gt; &amp;client, const std::list&lt; libcomp::String &gt; &amp;args)</arglist>
    </member>
    <member kind="function" protection="private">
      <type>bool</type>
      <name>GMCommand_Enemy</name>
      <anchorfile>classchannel_1_1ChatManager.html</anchorfile>
      <anchor>a82c448a5cd1f5590bdd5db64a9b29c67</anchor>
      <arglist>(const std::shared_ptr&lt; channel::ChannelClientConnection &gt; &amp;client, const std::list&lt; libcomp::String &gt; &amp;args)</arglist>
    </member>
    <member kind="function" protection="private">
      <type>bool</type>
      <name>GMCommand_ExpertiseExtend</name>
      <anchorfile>classchannel_1_1ChatManager.html</anchorfile>
      <anchor>a5d2ae9858c3fc69d213504e735473701</anchor>
      <arglist>(const std::shared_ptr&lt; channel::ChannelClientConnection &gt; &amp;client, const std::list&lt; libcomp::String &gt; &amp;args)</arglist>
    </member>
    <member kind="function" protection="private">
      <type>bool</type>
      <name>GMCommand_ExpertiseUpdate</name>
      <anchorfile>classchannel_1_1ChatManager.html</anchorfile>
      <anchor>aad78dae278f47660c49b37b908a9eee0</anchor>
      <arglist>(const std::shared_ptr&lt; channel::ChannelClientConnection &gt; &amp;client, const std::list&lt; libcomp::String &gt; &amp;args)</arglist>
    </member>
    <member kind="function" protection="private">
      <type>bool</type>
      <name>GMCommand_Familiarity</name>
      <anchorfile>classchannel_1_1ChatManager.html</anchorfile>
      <anchor>a204695ddc603c95ce33465e2d68bbc22</anchor>
      <arglist>(const std::shared_ptr&lt; channel::ChannelClientConnection &gt; &amp;client, const std::list&lt; libcomp::String &gt; &amp;args)</arglist>
    </member>
    <member kind="function" protection="private">
      <type>bool</type>
      <name>GMCommand_Flag</name>
      <anchorfile>classchannel_1_1ChatManager.html</anchorfile>
      <anchor>a1a51801d26b114fe95f265369271e1ee</anchor>
      <arglist>(const std::shared_ptr&lt; channel::ChannelClientConnection &gt; &amp;client, const std::list&lt; libcomp::String &gt; &amp;args)</arglist>
    </member>
    <member kind="function" protection="private">
      <type>bool</type>
      <name>GMCommand_Goto</name>
      <anchorfile>classchannel_1_1ChatManager.html</anchorfile>
      <anchor>aa33296cbdb520ad66ae39895597d1fc9</anchor>
      <arglist>(const std::shared_ptr&lt; channel::ChannelClientConnection &gt; &amp;client, const std::list&lt; libcomp::String &gt; &amp;args)</arglist>
    </member>
    <member kind="function" protection="private">
      <type>bool</type>
      <name>GMCommand_Help</name>
      <anchorfile>classchannel_1_1ChatManager.html</anchorfile>
      <anchor>a8cbba2279bc57a6121544c052b04f52e</anchor>
      <arglist>(const std::shared_ptr&lt; channel::ChannelClientConnection &gt; &amp;client, const std::list&lt; libcomp::String &gt; &amp;args)</arglist>
    </member>
    <member kind="function" protection="private">
      <type>bool</type>
      <name>GMCommand_Homepoint</name>
      <anchorfile>classchannel_1_1ChatManager.html</anchorfile>
      <anchor>a2c6d1ec34037c27f2f220102449e6f97</anchor>
      <arglist>(const std::shared_ptr&lt; channel::ChannelClientConnection &gt; &amp;client, const std::list&lt; libcomp::String &gt; &amp;args)</arglist>
    </member>
    <member kind="function" protection="private">
      <type>bool</type>
      <name>GMCommand_Instance</name>
      <anchorfile>classchannel_1_1ChatManager.html</anchorfile>
      <anchor>a90363296ab6eea4961ef35d1fd318267</anchor>
      <arglist>(const std::shared_ptr&lt; channel::ChannelClientConnection &gt; &amp;client, const std::list&lt; libcomp::String &gt; &amp;args)</arglist>
    </member>
    <member kind="function" protection="private">
      <type>bool</type>
      <name>GMCommand_Item</name>
      <anchorfile>classchannel_1_1ChatManager.html</anchorfile>
      <anchor>a28a5abeac9111f357b544b35f7eb825e</anchor>
      <arglist>(const std::shared_ptr&lt; channel::ChannelClientConnection &gt; &amp;client, const std::list&lt; libcomp::String &gt; &amp;args)</arglist>
    </member>
    <member kind="function" protection="private">
      <type>bool</type>
      <name>GMCommand_Kick</name>
      <anchorfile>classchannel_1_1ChatManager.html</anchorfile>
      <anchor>a6f1bed489b6a825457ffeeab6eb425bc</anchor>
      <arglist>(const std::shared_ptr&lt; channel::ChannelClientConnection &gt; &amp;client, const std::list&lt; libcomp::String &gt; &amp;args)</arglist>
    </member>
    <member kind="function" protection="private">
      <type>bool</type>
      <name>GMCommand_Kill</name>
      <anchorfile>classchannel_1_1ChatManager.html</anchorfile>
      <anchor>ada2802a7c2f215881395c364542ba5bc</anchor>
      <arglist>(const std::shared_ptr&lt; channel::ChannelClientConnection &gt; &amp;client, const std::list&lt; libcomp::String &gt; &amp;args)</arglist>
    </member>
    <member kind="function" protection="private">
      <type>bool</type>
      <name>GMCommand_LevelUp</name>
      <anchorfile>classchannel_1_1ChatManager.html</anchorfile>
      <anchor>ae79fffdf09d167844efa76b1c068ebcb</anchor>
      <arglist>(const std::shared_ptr&lt; channel::ChannelClientConnection &gt; &amp;client, const std::list&lt; libcomp::String &gt; &amp;args)</arglist>
    </member>
    <member kind="function" protection="private">
      <type>bool</type>
      <name>GMCommand_LNC</name>
      <anchorfile>classchannel_1_1ChatManager.html</anchorfile>
      <anchor>a4d364922112d283d5724052fa86d9347</anchor>
      <arglist>(const std::shared_ptr&lt; channel::ChannelClientConnection &gt; &amp;client, const std::list&lt; libcomp::String &gt; &amp;args)</arglist>
    </member>
    <member kind="function" protection="private">
      <type>bool</type>
      <name>GMCommand_Map</name>
      <anchorfile>classchannel_1_1ChatManager.html</anchorfile>
      <anchor>aee66e3287ae941567d200e72e35bac8f</anchor>
      <arglist>(const std::shared_ptr&lt; channel::ChannelClientConnection &gt; &amp;client, const std::list&lt; libcomp::String &gt; &amp;args)</arglist>
    </member>
    <member kind="function" protection="private">
      <type>bool</type>
      <name>GMCommand_Plugin</name>
      <anchorfile>classchannel_1_1ChatManager.html</anchorfile>
      <anchor>a257cad0883553c1d16964cefa33a010a</anchor>
      <arglist>(const std::shared_ptr&lt; channel::ChannelClientConnection &gt; &amp;client, const std::list&lt; libcomp::String &gt; &amp;args)</arglist>
    </member>
    <member kind="function" protection="private">
      <type>bool</type>
      <name>GMCommand_Position</name>
      <anchorfile>classchannel_1_1ChatManager.html</anchorfile>
      <anchor>a99807021e249fffa2ef45f874b365168</anchor>
      <arglist>(const std::shared_ptr&lt; channel::ChannelClientConnection &gt; &amp;client, const std::list&lt; libcomp::String &gt; &amp;args)</arglist>
    </member>
    <member kind="function" protection="private">
      <type>bool</type>
      <name>GMCommand_Post</name>
      <anchorfile>classchannel_1_1ChatManager.html</anchorfile>
      <anchor>a57e5f40157614bc80a73ff5fde824706</anchor>
      <arglist>(const std::shared_ptr&lt; channel::ChannelClientConnection &gt; &amp;client, const std::list&lt; libcomp::String &gt; &amp;args)</arglist>
    </member>
    <member kind="function" protection="private">
      <type>bool</type>
      <name>GMCommand_Quest</name>
      <anchorfile>classchannel_1_1ChatManager.html</anchorfile>
      <anchor>ab07f4ce39ae94df45b1becd7e637d8a0</anchor>
      <arglist>(const std::shared_ptr&lt; channel::ChannelClientConnection &gt; &amp;client, const std::list&lt; libcomp::String &gt; &amp;args)</arglist>
    </member>
    <member kind="function" protection="private">
      <type>bool</type>
      <name>GMCommand_Scrap</name>
      <anchorfile>classchannel_1_1ChatManager.html</anchorfile>
      <anchor>acdcb5d878ba9d58e1b51c8639291ba6c</anchor>
      <arglist>(const std::shared_ptr&lt; channel::ChannelClientConnection &gt; &amp;client, const std::list&lt; libcomp::String &gt; &amp;args)</arglist>
    </member>
    <member kind="function" protection="private">
      <type>bool</type>
      <name>GMCommand_Skill</name>
      <anchorfile>classchannel_1_1ChatManager.html</anchorfile>
      <anchor>aea968388a2020618a6df23c98ab17ef9</anchor>
      <arglist>(const std::shared_ptr&lt; channel::ChannelClientConnection &gt; &amp;client, const std::list&lt; libcomp::String &gt; &amp;args)</arglist>
    </member>
    <member kind="function" protection="private">
      <type>bool</type>
      <name>GMCommand_SkillPoint</name>
      <anchorfile>classchannel_1_1ChatManager.html</anchorfile>
      <anchor>a5bcafc9cd24bea805d2bae2b5eedce20</anchor>
      <arglist>(const std::shared_ptr&lt; channel::ChannelClientConnection &gt; &amp;client, const std::list&lt; libcomp::String &gt; &amp;args)</arglist>
    </member>
    <member kind="function" protection="private">
      <type>bool</type>
      <name>GMCommand_SlotAdd</name>
      <anchorfile>classchannel_1_1ChatManager.html</anchorfile>
      <anchor>a9f032acc085ff1c49b97906a4cbc3653</anchor>
      <arglist>(const std::shared_ptr&lt; channel::ChannelClientConnection &gt; &amp;client, const std::list&lt; libcomp::String &gt; &amp;args)</arglist>
    </member>
    <member kind="function" protection="private">
      <type>bool</type>
      <name>GMCommand_SoulPoints</name>
      <anchorfile>classchannel_1_1ChatManager.html</anchorfile>
      <anchor>ad9f10107929216425ee5a41c6f61dd66</anchor>
      <arglist>(const std::shared_ptr&lt; channel::ChannelClientConnection &gt; &amp;client, const std::list&lt; libcomp::String &gt; &amp;args)</arglist>
    </member>
    <member kind="function" protection="private">
      <type>bool</type>
      <name>GMCommand_Spawn</name>
      <anchorfile>classchannel_1_1ChatManager.html</anchorfile>
      <anchor>a9ab8bab69ba66fe5298fccc29a54d518</anchor>
      <arglist>(const std::shared_ptr&lt; channel::ChannelClientConnection &gt; &amp;client, const std::list&lt; libcomp::String &gt; &amp;args)</arglist>
    </member>
    <member kind="function" protection="private">
      <type>bool</type>
      <name>GMCommand_Speed</name>
      <anchorfile>classchannel_1_1ChatManager.html</anchorfile>
      <anchor>a48de93332ff9e0cfadd719177ea7a1de</anchor>
      <arglist>(const std::shared_ptr&lt; channel::ChannelClientConnection &gt; &amp;client, const std::list&lt; libcomp::String &gt; &amp;args)</arglist>
    </member>
    <member kind="function" protection="private">
      <type>bool</type>
      <name>GMCommand_TickerMessage</name>
      <anchorfile>classchannel_1_1ChatManager.html</anchorfile>
      <anchor>a95a3c1961f44e43106b4c4b708dbead1</anchor>
      <arglist>(const std::shared_ptr&lt; channel::ChannelClientConnection &gt; &amp;client, const std::list&lt; libcomp::String &gt; &amp;args)</arglist>
    </member>
    <member kind="function" protection="private">
      <type>bool</type>
      <name>GMCommand_Tokusei</name>
      <anchorfile>classchannel_1_1ChatManager.html</anchorfile>
      <anchor>ab5ea1521a27ce38ce220b5093786bc63</anchor>
      <arglist>(const std::shared_ptr&lt; channel::ChannelClientConnection &gt; &amp;client, const std::list&lt; libcomp::String &gt; &amp;args)</arglist>
    </member>
    <member kind="function" protection="private">
      <type>bool</type>
      <name>GMCommand_Valuable</name>
      <anchorfile>classchannel_1_1ChatManager.html</anchorfile>
      <anchor>af3da3fa79e0a41124fa17b0d33ba1d12</anchor>
      <arglist>(const std::shared_ptr&lt; channel::ChannelClientConnection &gt; &amp;client, const std::list&lt; libcomp::String &gt; &amp;args)</arglist>
    </member>
    <member kind="function" protection="private">
      <type>bool</type>
      <name>GMCommand_Version</name>
      <anchorfile>classchannel_1_1ChatManager.html</anchorfile>
      <anchor>ae0b239b8a19de5ea613ef8536d84ef26</anchor>
      <arglist>(const std::shared_ptr&lt; channel::ChannelClientConnection &gt; &amp;client, const std::list&lt; libcomp::String &gt; &amp;args)</arglist>
    </member>
    <member kind="function" protection="private">
      <type>bool</type>
      <name>GMCommand_WorldTime</name>
      <anchorfile>classchannel_1_1ChatManager.html</anchorfile>
      <anchor>a1d0a01479fcb3402bac6a93f5963c372</anchor>
      <arglist>(const std::shared_ptr&lt; channel::ChannelClientConnection &gt; &amp;client, const std::list&lt; libcomp::String &gt; &amp;args)</arglist>
    </member>
    <member kind="function" protection="private">
      <type>bool</type>
      <name>GMCommand_XP</name>
      <anchorfile>classchannel_1_1ChatManager.html</anchorfile>
      <anchor>a951b67909aafa2527ab1fe9577e930e4</anchor>
      <arglist>(const std::shared_ptr&lt; channel::ChannelClientConnection &gt; &amp;client, const std::list&lt; libcomp::String &gt; &amp;args)</arglist>
    </member>
    <member kind="function" protection="private">
      <type>bool</type>
      <name>GMCommand_Zone</name>
      <anchorfile>classchannel_1_1ChatManager.html</anchorfile>
      <anchor>ae0e4db86faa38538dbfd66716a7cb858</anchor>
      <arglist>(const std::shared_ptr&lt; channel::ChannelClientConnection &gt; &amp;client, const std::list&lt; libcomp::String &gt; &amp;args)</arglist>
    </member>
    <member kind="function" protection="private">
      <type>bool</type>
      <name>HaveUserLevel</name>
      <anchorfile>classchannel_1_1ChatManager.html</anchorfile>
      <anchor>a6bbbf9104b5f9252916d62fddd4662ec</anchor>
      <arglist>(const std::shared_ptr&lt; channel::ChannelClientConnection &gt; &amp;client, int32_t requiredLevel)</arglist>
    </member>
    <member kind="variable" protection="private">
      <type>std::unordered_map&lt; libcomp::String, std::function&lt; bool(ChatManager &amp;, const std::shared_ptr&lt; channel::ChannelClientConnection &gt; &amp;, const std::list&lt; libcomp::String &gt; &amp;)&gt; &gt;</type>
      <name>mGMands</name>
      <anchorfile>classchannel_1_1ChatManager.html</anchorfile>
      <anchor>a5c04d943e89034eaee9f071c3aa9e541</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>std::weak_ptr&lt; ChannelServer &gt;</type>
      <name>mServer</name>
      <anchorfile>classchannel_1_1ChatManager.html</anchorfile>
      <anchor>a650e3908ebc6e06544c44601649b683f</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>channel::ClientState</name>
    <filename>classchannel_1_1ClientState.html</filename>
    <member kind="function">
      <type></type>
      <name>ClientState</name>
      <anchorfile>classchannel_1_1ClientState.html</anchorfile>
      <anchor>a32823cd62161db3e695df3119401e244</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~ClientState</name>
      <anchorfile>classchannel_1_1ClientState.html</anchorfile>
      <anchor>a2f6580ab7ae22ec07205da16b3c13e0c</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>const libobjgen::UUID</type>
      <name>GetAccountUID</name>
      <anchorfile>classchannel_1_1ClientState.html</anchorfile>
      <anchor>ad1cb0407e9b71cadbf6e9763e11b6b7b</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>std::shared_ptr&lt; BazaarState &gt;</type>
      <name>GetBazaarState</name>
      <anchorfile>classchannel_1_1ClientState.html</anchorfile>
      <anchor>af3273a2b98ec248e7c9fee87c2eb2533</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>std::shared_ptr&lt; CharacterState &gt;</type>
      <name>GetCharacterState</name>
      <anchorfile>classchannel_1_1ClientState.html</anchorfile>
      <anchor>a94627e19d02a38e00f716adedea18503</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>int32_t</type>
      <name>GetClanID</name>
      <anchorfile>classchannel_1_1ClientState.html</anchorfile>
      <anchor>aea296ed846fbb9c679dd9ec7f4cd97c4</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>libcomp::Convert::Encoding_t</type>
      <name>GetClientStringEncoding</name>
      <anchorfile>classchannel_1_1ClientState.html</anchorfile>
      <anchor>a3c8a216bf04f6a6afd884ac527342aff</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>std::list&lt; std::shared_ptr&lt; objects::ClientCostAdjustment &gt; &gt;</type>
      <name>GetCostAdjustments</name>
      <anchorfile>classchannel_1_1ClientState.html</anchorfile>
      <anchor>ae168a8b817d6098988d485a0deda9e9b</anchor>
      <arglist>(int32_t entityID)</arglist>
    </member>
    <member kind="function">
      <type>std::shared_ptr&lt; DemonState &gt;</type>
      <name>GetDemonState</name>
      <anchorfile>classchannel_1_1ClientState.html</anchorfile>
      <anchor>a3a2cf5885225de5e0fbf4a7485411a3f</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>std::shared_ptr&lt; ActiveEntityState &gt;</type>
      <name>GetEntityState</name>
      <anchorfile>classchannel_1_1ClientState.html</anchorfile>
      <anchor>ae8d70dc0474d84337fa2dd0d46af95ed</anchor>
      <arglist>(int32_t entityID, bool readyOnly=true)</arglist>
    </member>
    <member kind="function">
      <type>int32_t</type>
      <name>GetLocalObjectID</name>
      <anchorfile>classchannel_1_1ClientState.html</anchorfile>
      <anchor>ab53b595b193b38390b53bf393ead0943</anchor>
      <arglist>(const libobjgen::UUID &amp;uuid)</arglist>
    </member>
    <member kind="function">
      <type>const libobjgen::UUID</type>
      <name>GetLocalObjectUUID</name>
      <anchorfile>classchannel_1_1ClientState.html</anchorfile>
      <anchor>a72dda0be86f351373e38bd47643ff04a</anchor>
      <arglist>(int32_t objectID)</arglist>
    </member>
    <member kind="function">
      <type>int64_t</type>
      <name>GetObjectID</name>
      <anchorfile>classchannel_1_1ClientState.html</anchorfile>
      <anchor>a9be86f60b323c002ae00e219f7448df4</anchor>
      <arglist>(const libobjgen::UUID &amp;uuid)</arglist>
    </member>
    <member kind="function">
      <type>const libobjgen::UUID</type>
      <name>GetObjectUUID</name>
      <anchorfile>classchannel_1_1ClientState.html</anchorfile>
      <anchor>a7be480b899fd35df68ff2d1dd52cc2dd</anchor>
      <arglist>(int64_t objectID)</arglist>
    </member>
    <member kind="function">
      <type>std::shared_ptr&lt; objects::PartyCharacter &gt;</type>
      <name>GetPartyCharacter</name>
      <anchorfile>classchannel_1_1ClientState.html</anchorfile>
      <anchor>ab20e1ea8dbca63d6d500567048491e39</anchor>
      <arglist>(bool includeDemon) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>GetPartyCharacterPacket</name>
      <anchorfile>classchannel_1_1ClientState.html</anchorfile>
      <anchor>a2ee337011701200646bb92c5dc6d75b1</anchor>
      <arglist>(libcomp::Packet &amp;p) const </arglist>
    </member>
    <member kind="function">
      <type>std::shared_ptr&lt; objects::PartyMember &gt;</type>
      <name>GetPartyDemon</name>
      <anchorfile>classchannel_1_1ClientState.html</anchorfile>
      <anchor>aa7d17818fd875fc0caee23b6d95d7717</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>GetPartyDemonPacket</name>
      <anchorfile>classchannel_1_1ClientState.html</anchorfile>
      <anchor>aa8bf6b41d7e47e54549012a1fac54fa4</anchor>
      <arglist>(libcomp::Packet &amp;p) const </arglist>
    </member>
    <member kind="function">
      <type>uint32_t</type>
      <name>GetPartyID</name>
      <anchorfile>classchannel_1_1ClientState.html</anchorfile>
      <anchor>af042bf665d6d933b77be74a3b05bf85f</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>int32_t</type>
      <name>GetUserLevel</name>
      <anchorfile>classchannel_1_1ClientState.html</anchorfile>
      <anchor>abc177c9dc256571307bfcad674149518</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>int32_t</type>
      <name>GetWorldCID</name>
      <anchorfile>classchannel_1_1ClientState.html</anchorfile>
      <anchor>a4e91326e3913b3f0026c9074588492a9</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>std::shared_ptr&lt; Zone &gt;</type>
      <name>GetZone</name>
      <anchorfile>classchannel_1_1ClientState.html</anchorfile>
      <anchor>ad7a7616c9aad7e314086e76920642de9</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>Register</name>
      <anchorfile>classchannel_1_1ClientState.html</anchorfile>
      <anchor>a829f834b5d9fe947c95b8ab643527468</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>std::list&lt; std::shared_ptr&lt; objects::ClientCostAdjustment &gt; &gt;</type>
      <name>SetCostAdjustments</name>
      <anchorfile>classchannel_1_1ClientState.html</anchorfile>
      <anchor>a574472f41eaf2029e8a34e40424bbbff</anchor>
      <arglist>(int32_t entityID, std::list&lt; std::shared_ptr&lt; objects::ClientCostAdjustment &gt;&gt; adjustments)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>SetObjectID</name>
      <anchorfile>classchannel_1_1ClientState.html</anchorfile>
      <anchor>ad4f4edb0adac21a9cdf4d5bf0f445a80</anchor>
      <arglist>(const libobjgen::UUID &amp;uuid, int64_t objectID)</arglist>
    </member>
    <member kind="function">
      <type>ClientTime</type>
      <name>ToClientTime</name>
      <anchorfile>classchannel_1_1ClientState.html</anchorfile>
      <anchor>aaf1783ced9cf5ae449a3f27546d41e15</anchor>
      <arglist>(ServerTime time) const </arglist>
    </member>
    <member kind="function">
      <type>ServerTime</type>
      <name>ToServerTime</name>
      <anchorfile>classchannel_1_1ClientState.html</anchorfile>
      <anchor>ae60187036ffe5b1e03ae32c516c5daa9</anchor>
      <arglist>(ClientTime time) const </arglist>
    </member>
    <member kind="function" static="yes">
      <type>static ClientState *</type>
      <name>GetEntityClientState</name>
      <anchorfile>classchannel_1_1ClientState.html</anchorfile>
      <anchor>adfda568072305ea8850278decd14ae0c</anchor>
      <arglist>(int32_t id, bool worldID=false)</arglist>
    </member>
    <member kind="variable" protection="private">
      <type>std::shared_ptr&lt; CharacterState &gt;</type>
      <name>mCharacterState</name>
      <anchorfile>classchannel_1_1ClientState.html</anchorfile>
      <anchor>a79cf6a619d40779d4b6edc8aa7d6f4a0</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>std::unordered_map&lt; int32_t, std::list&lt; std::shared_ptr&lt; objects::ClientCostAdjustment &gt; &gt; &gt;</type>
      <name>mCostAdjustments</name>
      <anchorfile>classchannel_1_1ClientState.html</anchorfile>
      <anchor>aad2c9dc93589172b54ece21d2976916d</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>std::shared_ptr&lt; DemonState &gt;</type>
      <name>mDemonState</name>
      <anchorfile>classchannel_1_1ClientState.html</anchorfile>
      <anchor>aaafda1ea601105884f173ff5057784f1</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>std::unordered_map&lt; libcomp::String, int32_t &gt;</type>
      <name>mLocalObjectIDs</name>
      <anchorfile>classchannel_1_1ClientState.html</anchorfile>
      <anchor>ae006020114ce6a2fa5305f27fe97904d</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>std::unordered_map&lt; int32_t, libobjgen::UUID &gt;</type>
      <name>mLocalObjectUUIDs</name>
      <anchorfile>classchannel_1_1ClientState.html</anchorfile>
      <anchor>a7e9c89d454b9126852dfeb80e4f317ff</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>std::mutex</type>
      <name>mLock</name>
      <anchorfile>classchannel_1_1ClientState.html</anchorfile>
      <anchor>add2c12ef51362e9491f9d1af2fbe0a56</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>int32_t</type>
      <name>mNextLocalObjectID</name>
      <anchorfile>classchannel_1_1ClientState.html</anchorfile>
      <anchor>a14da4b2c94729b8191d2c16486b8356d</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>std::unordered_map&lt; libcomp::String, int64_t &gt;</type>
      <name>mObjectIDs</name>
      <anchorfile>classchannel_1_1ClientState.html</anchorfile>
      <anchor>aa7251ba525d73e61857304540b940013</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>std::unordered_map&lt; int64_t, libobjgen::UUID &gt;</type>
      <name>mObjectUUIDs</name>
      <anchorfile>classchannel_1_1ClientState.html</anchorfile>
      <anchor>a1bd4aa8053d05ccbff9c58313fc60c51</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>ServerTime</type>
      <name>mStartTime</name>
      <anchorfile>classchannel_1_1ClientState.html</anchorfile>
      <anchor>af20ce5f4b90f4f0ee71648a6ad95bdd6</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private" static="yes">
      <type>static std::unordered_map&lt; bool, std::unordered_map&lt; int32_t, ClientState * &gt; &gt;</type>
      <name>sEntityClients</name>
      <anchorfile>classchannel_1_1ClientState.html</anchorfile>
      <anchor>a603dc0aede2b91ded8e4e9d3a3212281</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private" static="yes">
      <type>static std::mutex</type>
      <name>sLock</name>
      <anchorfile>classchannel_1_1ClientState.html</anchorfile>
      <anchor>a85097fcd54191350decbc8e434ce831f</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>channel::DemonState</name>
    <filename>classchannel_1_1DemonState.html</filename>
    <base>ActiveEntityStateImp&lt; objects::Demon &gt;</base>
    <member kind="function">
      <type></type>
      <name>DemonState</name>
      <anchorfile>classchannel_1_1DemonState.html</anchorfile>
      <anchor>aec6ab56513575294bb7024bd36be5d7c</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~DemonState</name>
      <anchorfile>classchannel_1_1DemonState.html</anchorfile>
      <anchor>ad3f7d2d303c897ad48260c41399d0bf0</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>size_t</type>
      <name>AddRemoveOpponent</name>
      <anchorfile>classchannel_1_1ActiveEntityState.html</anchorfile>
      <anchor>ae1945edacc9db9dd0c0b8fc57ef0ba5a</anchor>
      <arglist>(bool add, int32_t opponentID)</arglist>
    </member>
    <member kind="function">
      <type>std::set&lt; uint32_t &gt;</type>
      <name>AddStatusEffects</name>
      <anchorfile>classchannel_1_1ActiveEntityState.html</anchorfile>
      <anchor>a66bf7fb8d7cd4587e53b9f51128857f2</anchor>
      <arglist>(const AddStatusEffectMap &amp;effects, libcomp::DefinitionManager *definitionManager, uint32_t now=0, bool queueChanges=true)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>CanAct</name>
      <anchorfile>classchannel_1_1ActiveEntityState.html</anchorfile>
      <anchor>ae18bb9a1c3476876a23040c08b5ce37a</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>CancelStatusEffects</name>
      <anchorfile>classchannel_1_1ActiveEntityState.html</anchorfile>
      <anchor>affba706127bff8c636e153cb69c29910</anchor>
      <arglist>(uint8_t cancelFlags)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>CanMove</name>
      <anchorfile>classchannel_1_1ActiveEntityState.html</anchorfile>
      <anchor>af56db75ec5333f4d99949f271c6a38de</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>ExpireStatusEffects</name>
      <anchorfile>classchannel_1_1ActiveEntityState.html</anchorfile>
      <anchor>a513eb93dd9e9b3d8956459355bc08a98</anchor>
      <arglist>(const std::set&lt; uint32_t &gt; &amp;effectTypes)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>ExpireStatusTimes</name>
      <anchorfile>classchannel_1_1ActiveEntityState.html</anchorfile>
      <anchor>a209bb96b9316bf12724e0a48891acc97</anchor>
      <arglist>(uint64_t now)</arglist>
    </member>
    <member kind="function">
      <type>uint64_t</type>
      <name>GetActionTime</name>
      <anchorfile>classchannel_1_1ActiveEntityState.html</anchorfile>
      <anchor>a66d0c35bb1d4ee3e361fafb02fcf629a</anchor>
      <arglist>(const libcomp::String &amp;action)</arglist>
    </member>
    <member kind="function">
      <type>std::shared_ptr&lt; channel::AIState &gt;</type>
      <name>GetAIState</name>
      <anchorfile>classchannel_1_1ActiveEntityState.html</anchorfile>
      <anchor>a7683912a1ff2b1a5dd162b5441a7dcc5</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual std::set&lt; uint32_t &gt;</type>
      <name>GetAllSkills</name>
      <anchorfile>classchannel_1_1ActiveEntityStateImp.html</anchorfile>
      <anchor>ab49cdbfc8d64fb90019f421a9f182597</anchor>
      <arglist>(libcomp::DefinitionManager *definitionManager, bool includeTokusei)</arglist>
    </member>
    <member kind="function">
      <type>uint32_t</type>
      <name>GetCompendiumCount</name>
      <anchorfile>classchannel_1_1DemonState.html</anchorfile>
      <anchor>a3b2eecde376c681b08eee90120194bc9</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>std::list&lt; int32_t &gt;</type>
      <name>GetCompendiumTokuseiIDs</name>
      <anchorfile>classchannel_1_1DemonState.html</anchorfile>
      <anchor>a87ac6c182987e4dd109eb176d7398c45</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual std::shared_ptr&lt; objects::EntityStats &gt;</type>
      <name>GetCoreStats</name>
      <anchorfile>classchannel_1_1ActiveEntityStateImp.html</anchorfile>
      <anchor>a9f5302b984250a7215f0fd2ba9987d57</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>int16_t</type>
      <name>GetCorrectValue</name>
      <anchorfile>classchannel_1_1ActiveEntityState.html</anchorfile>
      <anchor>aa960f7643649ac1fc26d8baef048f5df</anchor>
      <arglist>(CorrectTbl tableID, std::shared_ptr&lt; objects::CalculatedEntityState &gt; calcState=nullptr)</arglist>
    </member>
    <member kind="function">
      <type>std::list&lt; std::pair&lt; std::shared_ptr&lt; objects::StatusEffect &gt;, uint32_t &gt; &gt;</type>
      <name>GetCurrentStatusEffectStates</name>
      <anchorfile>classchannel_1_1ActiveEntityState.html</anchorfile>
      <anchor>a9364c47b242a5691d9500504c2a3e2f8</anchor>
      <arglist>(libcomp::DefinitionManager *definitionManager, uint32_t now=0)</arglist>
    </member>
    <member kind="function">
      <type>float</type>
      <name>GetDistance</name>
      <anchorfile>classchannel_1_1ActiveEntityState.html</anchorfile>
      <anchor>a38d4d0eba28e2c3dec7bee89df6c244a</anchor>
      <arglist>(float x, float y, bool squared=false)</arglist>
    </member>
    <member kind="function">
      <type>std::shared_ptr&lt; objects::Demon &gt;</type>
      <name>GetEntity</name>
      <anchorfile>classchannel_1_1ActiveEntityStateImp.html</anchorfile>
      <anchor>af4221fa010303086a166e69ca54345ea</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual const libobjgen::UUID</type>
      <name>GetEntityUUID</name>
      <anchorfile>classchannel_1_1ActiveEntityStateImp.html</anchorfile>
      <anchor>aa1e73078f5e79d3b16ecd0e1119ee9f7</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>std::list&lt; std::shared_ptr&lt; objects::InheritedSkill &gt; &gt;</type>
      <name>GetLearningSkills</name>
      <anchorfile>classchannel_1_1DemonState.html</anchorfile>
      <anchor>a30082a84673d10c339fa501b8153ef8d</anchor>
      <arglist>(uint8_t affinity)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual uint8_t</type>
      <name>GetLNCType</name>
      <anchorfile>classchannel_1_1ActiveEntityStateImp.html</anchorfile>
      <anchor>a4100067bbe779db70c897cf343f7943c</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>float</type>
      <name>GetMovementSpeed</name>
      <anchorfile>classchannel_1_1ActiveEntityState.html</anchorfile>
      <anchor>a3a11050fb65a386e982332da21db2c87</anchor>
      <arglist>(bool altSpeed=false)</arglist>
    </member>
    <member kind="function">
      <type>int8_t</type>
      <name>GetNextActivatedAbilityID</name>
      <anchorfile>classchannel_1_1ActiveEntityState.html</anchorfile>
      <anchor>a3d841d6660fa605b5ca4f5628ec0c667</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>int16_t</type>
      <name>GetNRAChance</name>
      <anchorfile>classchannel_1_1ActiveEntityState.html</anchorfile>
      <anchor>ac468fcaa3b7dd039c9924d1ef55e880a</anchor>
      <arglist>(uint8_t nraIdx, CorrectTbl type, std::shared_ptr&lt; objects::CalculatedEntityState &gt; calcState=nullptr)</arglist>
    </member>
    <member kind="function">
      <type>std::set&lt; int32_t &gt;</type>
      <name>GetOpponentIDs</name>
      <anchorfile>classchannel_1_1ActiveEntityState.html</anchorfile>
      <anchor>a28eb0b46ea358d21487b2f855ef3bfd3</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>const std::unordered_map&lt; uint32_t, std::shared_ptr&lt; objects::StatusEffect &gt; &gt; &amp;</type>
      <name>GetStatusEffects</name>
      <anchorfile>classchannel_1_1ActiveEntityState.html</anchorfile>
      <anchor>af08840e2fef8a61e0737b61a85bb9c20</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>std::shared_ptr&lt; Zone &gt;</type>
      <name>GetZone</name>
      <anchorfile>classchannel_1_1ActiveEntityState.html</anchorfile>
      <anchor>ab75cc6f82b822318ec0816b6ccebd30a</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>HasOpponent</name>
      <anchorfile>classchannel_1_1ActiveEntityState.html</anchorfile>
      <anchor>ad2260cd031d413d44dd727a014cffc8a</anchor>
      <arglist>(int32_t opponentID=0)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>IsAlive</name>
      <anchorfile>classchannel_1_1ActiveEntityState.html</anchorfile>
      <anchor>ab6edd9f3b8abd577890af858d5dc85dc</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>IsLNCType</name>
      <anchorfile>classchannel_1_1ActiveEntityState.html</anchorfile>
      <anchor>ae897ad90fe5cb5f505f2de5a0da374c7</anchor>
      <arglist>(uint8_t lncType, bool invertFlag)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>IsMoving</name>
      <anchorfile>classchannel_1_1ActiveEntityState.html</anchorfile>
      <anchor>aa86a6658fd24aeafde4b18c0c97d0433</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>IsRotating</name>
      <anchorfile>classchannel_1_1ActiveEntityState.html</anchorfile>
      <anchor>af995e3c25687f8b2692dc523f08c04b1</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>Move</name>
      <anchorfile>classchannel_1_1ActiveEntityState.html</anchorfile>
      <anchor>ae83be0aeee9a600a99286fc1db8fc8d1</anchor>
      <arglist>(float xPos, float yPos, uint64_t now)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>PopEffectTicks</name>
      <anchorfile>classchannel_1_1ActiveEntityState.html</anchorfile>
      <anchor>a0539c15041b0ac7c49aa586f4b28eceb</anchor>
      <arglist>(libcomp::DefinitionManager *definitionManager, uint32_t time, int32_t &amp;hpTDamage, int32_t &amp;mpTDamage, std::set&lt; uint32_t &gt; &amp;added, std::set&lt; uint32_t &gt; &amp;updated, std::set&lt; uint32_t &gt; &amp;removed)</arglist>
    </member>
    <member kind="function">
      <type>std::set&lt; uint8_t &gt;</type>
      <name>PopNRAShields</name>
      <anchorfile>classchannel_1_1ActiveEntityState.html</anchorfile>
      <anchor>aa40113ab2ad642f5a232f1807dcaca76</anchor>
      <arglist>(const std::list&lt; CorrectTbl &gt; &amp;types)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual bool</type>
      <name>Ready</name>
      <anchorfile>classchannel_1_1ActiveEntityStateImp.html</anchorfile>
      <anchor>a66ce4e4014373250c4e7a32108fdda78</anchor>
      <arglist>(bool ignoreDisplayState=false)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual bool</type>
      <name>RecalcDisabledSkills</name>
      <anchorfile>classchannel_1_1ActiveEntityState.html</anchorfile>
      <anchor>a59bfa238a72ef7535e35ebfd356c60d8</anchor>
      <arglist>(libcomp::DefinitionManager *definitionManager)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual uint8_t</type>
      <name>RecalculateStats</name>
      <anchorfile>classchannel_1_1ActiveEntityStateImp.html</anchorfile>
      <anchor>aa13eeaec58b7c32b8d8569f026b59e3f</anchor>
      <arglist>(libcomp::DefinitionManager *definitionManager, std::shared_ptr&lt; objects::CalculatedEntityState &gt; calcState=nullptr)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>RefreshCurrentPosition</name>
      <anchorfile>classchannel_1_1ActiveEntityState.html</anchorfile>
      <anchor>ad58ca1704077c66eae6e6cfa5f93d137</anchor>
      <arglist>(uint64_t now)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>RefreshKnockback</name>
      <anchorfile>classchannel_1_1ActiveEntityState.html</anchorfile>
      <anchor>ad61a7487707c26af826391961d0fd7a5</anchor>
      <arglist>(uint64_t now, float recoveryBoost)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>RefreshLearningSkills</name>
      <anchorfile>classchannel_1_1DemonState.html</anchorfile>
      <anchor>ac9aa95d923fba2483c2568b23154e6d2</anchor>
      <arglist>(uint8_t affinity, libcomp::DefinitionManager *definitionManager)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>Rotate</name>
      <anchorfile>classchannel_1_1ActiveEntityState.html</anchorfile>
      <anchor>ae22c1b7e0c0ff0217bf4d5d255e4db13</anchor>
      <arglist>(float rot, uint64_t now)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetActionTime</name>
      <anchorfile>classchannel_1_1ActiveEntityState.html</anchorfile>
      <anchor>a5eca26bba7bcac79034d2adfa7f584f7</anchor>
      <arglist>(const libcomp::String &amp;action, uint64_t time)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetAIState</name>
      <anchorfile>classchannel_1_1ActiveEntityState.html</anchorfile>
      <anchor>a23f9604c12ecf053dab3cb4511c7a624</anchor>
      <arglist>(const std::shared_ptr&lt; channel::AIState &gt; &amp;aiState)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetEntity</name>
      <anchorfile>classchannel_1_1ActiveEntityStateImp.html</anchorfile>
      <anchor>a081b5d9be8d1e94e5ac3a1c04e33a6cc</anchor>
      <arglist>(const std::shared_ptr&lt; objects::Demon &gt; &amp;entity, const std::shared_ptr&lt; objects::MiDevilData &gt; &amp;devilData)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>SetHPMP</name>
      <anchorfile>classchannel_1_1ActiveEntityState.html</anchorfile>
      <anchor>a6616f760c961b349baf3b81d0bea31dc</anchor>
      <arglist>(int32_t hp, int32_t mp, bool adjust, bool canOverflow=false)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>SetHPMP</name>
      <anchorfile>classchannel_1_1ActiveEntityState.html</anchorfile>
      <anchor>a7c6d6218e677353ee81718c7a821be17</anchor>
      <arglist>(int32_t hp, int32_t mp, bool adjust, bool canOverflow, int32_t clenchChance, int32_t &amp;hpAdjusted, int32_t &amp;mpAdjusted)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetStatusEffects</name>
      <anchorfile>classchannel_1_1ActiveEntityState.html</anchorfile>
      <anchor>abc6fe40cb7d3047ea41b17ff76c3f7df</anchor>
      <arglist>(const std::list&lt; std::shared_ptr&lt; objects::StatusEffect &gt;&gt; &amp;effects)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetStatusEffectsActive</name>
      <anchorfile>classchannel_1_1ActiveEntityState.html</anchorfile>
      <anchor>ad037282b3c14165da135e4205658a951</anchor>
      <arglist>(bool activate, libcomp::DefinitionManager *definitionManager, uint32_t now=0)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetZone</name>
      <anchorfile>classchannel_1_1ActiveEntityState.html</anchorfile>
      <anchor>a30007b72d6e529ca1bb069a699f4ed31</anchor>
      <arglist>(const std::shared_ptr&lt; Zone &gt; &amp;zone, bool updatePrevious=true)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>SkillAvailable</name>
      <anchorfile>classchannel_1_1ActiveEntityState.html</anchorfile>
      <anchor>a7aaf79e1f896744447d2db61abb9c9ec</anchor>
      <arglist>(uint32_t skillID)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>Stop</name>
      <anchorfile>classchannel_1_1ActiveEntityState.html</anchorfile>
      <anchor>a2cad211a8af9bca5239ab9f7579f3120</anchor>
      <arglist>(uint64_t now)</arglist>
    </member>
    <member kind="function">
      <type>float</type>
      <name>UpdateKnockback</name>
      <anchorfile>classchannel_1_1ActiveEntityState.html</anchorfile>
      <anchor>ab4c9670f327a31be928b619b000110d4</anchor>
      <arglist>(uint64_t now, float decrease, float recoveryBoost)</arglist>
    </member>
    <member kind="function">
      <type>int16_t</type>
      <name>UpdateLearningSkill</name>
      <anchorfile>classchannel_1_1DemonState.html</anchorfile>
      <anchor>acaac07576fd3a17377618bd2e889bed7</anchor>
      <arglist>(const std::shared_ptr&lt; objects::InheritedSkill &gt; &amp;iSkill, uint16_t points)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>UpdateSharedState</name>
      <anchorfile>classchannel_1_1DemonState.html</anchorfile>
      <anchor>af074f7c3ed57cb219c9bc15c840a0e26</anchor>
      <arglist>(const std::shared_ptr&lt; objects::Character &gt; &amp;character, libcomp::DefinitionManager *definitionManager)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static float</type>
      <name>CorrectRotation</name>
      <anchorfile>classchannel_1_1ActiveEntityState.html</anchorfile>
      <anchor>a2d02b85123163c97fd1e593eb514640b</anchor>
      <arglist>(float rot)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>ActivateStatusEffect</name>
      <anchorfile>classchannel_1_1ActiveEntityState.html</anchorfile>
      <anchor>a002f85b0ac7e3213d13cce85ae1a5b1c</anchor>
      <arglist>(const std::shared_ptr&lt; objects::StatusEffect &gt; &amp;effect, libcomp::DefinitionManager *definitionManager, uint32_t now, bool timeOnly)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>AdjustStats</name>
      <anchorfile>classchannel_1_1ActiveEntityState.html</anchorfile>
      <anchor>a318eb1d9febb3704d218b14cde573230</anchor>
      <arglist>(const std::list&lt; std::shared_ptr&lt; objects::MiCorrectTbl &gt;&gt; &amp;adjustments, libcomp::EnumMap&lt; CorrectTbl, int16_t &gt; &amp;stats, std::shared_ptr&lt; objects::CalculatedEntityState &gt; calcState, bool baseMode)</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>BaseStatsCalculated</name>
      <anchorfile>classchannel_1_1ActiveEntityState.html</anchorfile>
      <anchor>aa348c1deb923b21e640c586dbfc35506</anchor>
      <arglist>(libcomp::DefinitionManager *definitionManager, std::shared_ptr&lt; objects::CalculatedEntityState &gt; calcState, libcomp::EnumMap&lt; CorrectTbl, int16_t &gt; &amp;stats, std::list&lt; std::shared_ptr&lt; objects::MiCorrectTbl &gt;&gt; &amp;adjustments)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>uint8_t</type>
      <name>CalculateLNCType</name>
      <anchorfile>classchannel_1_1ActiveEntityState.html</anchorfile>
      <anchor>a34960657093fd4872631e886df4998e2</anchor>
      <arglist>(int16_t lncPoints) const </arglist>
    </member>
    <member kind="function" protection="protected">
      <type>uint8_t</type>
      <name>CompareAndResetStats</name>
      <anchorfile>classchannel_1_1ActiveEntityState.html</anchorfile>
      <anchor>a3441ec808c0da0ebddb044fce70b52d4</anchor>
      <arglist>(libcomp::EnumMap&lt; CorrectTbl, int16_t &gt; &amp;stats, int32_t extraHP=0)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>GetAdditionalCorrectTbls</name>
      <anchorfile>classchannel_1_1ActiveEntityState.html</anchorfile>
      <anchor>af5fda23fe92a4383277c28073712d106</anchor>
      <arglist>(libcomp::DefinitionManager *definitionManager, std::shared_ptr&lt; objects::CalculatedEntityState &gt; calcState, std::list&lt; std::shared_ptr&lt; objects::MiCorrectTbl &gt;&gt; &amp;adjustments)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>uint32_t</type>
      <name>GetCurrentExpiration</name>
      <anchorfile>classchannel_1_1ActiveEntityState.html</anchorfile>
      <anchor>af93288af34867c22340a7da9f699b2fc</anchor>
      <arglist>(const std::shared_ptr&lt; objects::StatusEffect &gt; &amp;effect, libcomp::DefinitionManager *definitionManager, uint32_t nextTime, uint32_t now)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>std::set&lt; uint32_t &gt;</type>
      <name>GetEffectiveTokuseiSkills</name>
      <anchorfile>classchannel_1_1ActiveEntityState.html</anchorfile>
      <anchor>af5d0540419e8c3d02bb6485603c81133</anchor>
      <arglist>(libcomp::DefinitionManager *definitionManager)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>uint8_t</type>
      <name>RecalculateDemonStats</name>
      <anchorfile>classchannel_1_1ActiveEntityState.html</anchorfile>
      <anchor>aa116a03fff76b59e8577b87cb6070365</anchor>
      <arglist>(libcomp::DefinitionManager *definitionManager, std::shared_ptr&lt; objects::CalculatedEntityState &gt; calcState)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>RegisterNextEffectTime</name>
      <anchorfile>classchannel_1_1ActiveEntityState.html</anchorfile>
      <anchor>abb971ac4a2f29be3a316a5e12a4b51bb</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>RemoveInactiveSwitchSkills</name>
      <anchorfile>classchannel_1_1ActiveEntityState.html</anchorfile>
      <anchor>a7b31da8ab8cf7529a93ae5ab43d8e6cb</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>RemoveStatusEffects</name>
      <anchorfile>classchannel_1_1ActiveEntityState.html</anchorfile>
      <anchor>af048315581b26430c0dc62d15d5078dc</anchor>
      <arglist>(const std::set&lt; uint32_t &gt; &amp;effectTypes)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>SetNextEffectTime</name>
      <anchorfile>classchannel_1_1ActiveEntityState.html</anchorfile>
      <anchor>af9d56a631bf512f8ac22671e78fb3864</anchor>
      <arglist>(uint32_t effectType, uint32_t time)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>SetStatusEffects</name>
      <anchorfile>classchannel_1_1ActiveEntityState.html</anchorfile>
      <anchor>a67dc06dcf10274170f0728f5f066588f</anchor>
      <arglist>(const std::list&lt; libcomp::ObjectReference&lt; objects::StatusEffect &gt;&gt; &amp;effects)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>UpdateNRAChances</name>
      <anchorfile>classchannel_1_1ActiveEntityState.html</anchorfile>
      <anchor>ab085e16b7b68c89e4f92763dbdf8e87d</anchor>
      <arglist>(libcomp::EnumMap&lt; CorrectTbl, int16_t &gt; &amp;stats, std::shared_ptr&lt; objects::CalculatedEntityState &gt; calcState, const std::list&lt; std::shared_ptr&lt; objects::MiCorrectTbl &gt;&gt; &amp;adjustments={})</arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>std::unordered_map&lt; std::string, uint64_t &gt;</type>
      <name>mActionTimes</name>
      <anchorfile>classchannel_1_1ActiveEntityState.html</anchorfile>
      <anchor>a54a791fd0f100e1e098d0c8579cd6298</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>std::shared_ptr&lt; AIState &gt;</type>
      <name>mAIState</name>
      <anchorfile>classchannel_1_1ActiveEntityState.html</anchorfile>
      <anchor>aafcef9fb7f80ea09775a6f00a008ee11</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>bool</type>
      <name>mAlive</name>
      <anchorfile>classchannel_1_1ActiveEntityState.html</anchorfile>
      <anchor>ab1f143a1f6904fd063477232e7477b92</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>std::unordered_map&lt; uint8_t, std::set&lt; uint32_t &gt; &gt;</type>
      <name>mCancelConditions</name>
      <anchorfile>classchannel_1_1ActiveEntityState.html</anchorfile>
      <anchor>a2878947ed3b4a723ba1804841658323b</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>std::shared_ptr&lt; Zone &gt;</type>
      <name>mCurrentZone</name>
      <anchorfile>classchannel_1_1ActiveEntityState.html</anchorfile>
      <anchor>a1dc568369cb1ff4d78a9db83c08375f8</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>bool</type>
      <name>mEffectsActive</name>
      <anchorfile>classchannel_1_1ActiveEntityState.html</anchorfile>
      <anchor>ae7e6dc8b0b6c2ecf09c634c1e7cb701f</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>bool</type>
      <name>mInitialCalc</name>
      <anchorfile>classchannel_1_1ActiveEntityState.html</anchorfile>
      <anchor>ace2da752766739a6149fc2b07b158d59</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>uint64_t</type>
      <name>mLastRefresh</name>
      <anchorfile>classchannel_1_1ActiveEntityState.html</anchorfile>
      <anchor>ade34713c4aec7ca929822a292b0223d3</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>std::mutex</type>
      <name>mLock</name>
      <anchorfile>classchannel_1_1ActiveEntityState.html</anchorfile>
      <anchor>a8ba2ead908829f41707bdd3b36bcbb0a</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>int8_t</type>
      <name>mNextActivatedAbilityID</name>
      <anchorfile>classchannel_1_1ActiveEntityState.html</anchorfile>
      <anchor>a201d4512bc8abb8059a6589999a48bdb</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>std::map&lt; uint32_t, std::set&lt; uint32_t &gt; &gt;</type>
      <name>mNextEffectTimes</name>
      <anchorfile>classchannel_1_1ActiveEntityState.html</anchorfile>
      <anchor>a7cec5b66c750593b2ad1f2b86c03e233</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>std::unordered_map&lt; uint32_t, libcomp::EnumMap&lt; CorrectTbl, std::set&lt; uint8_t &gt; &gt; &gt;</type>
      <name>mNRAShields</name>
      <anchorfile>classchannel_1_1ActiveEntityState.html</anchorfile>
      <anchor>a203b30260e6d7f760c0b8071b6babc51</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>std::set&lt; int32_t &gt;</type>
      <name>mOpponentIDs</name>
      <anchorfile>classchannel_1_1ActiveEntityState.html</anchorfile>
      <anchor>ac62ddc39f590dd556479f21152f0fb47</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>std::unordered_map&lt; uint32_t, std::shared_ptr&lt; objects::StatusEffect &gt; &gt;</type>
      <name>mStatusEffects</name>
      <anchorfile>classchannel_1_1ActiveEntityState.html</anchorfile>
      <anchor>a8339cd0b835314682a8419496ab3ff94</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>std::set&lt; uint32_t &gt;</type>
      <name>mTimeDamageEffects</name>
      <anchorfile>classchannel_1_1ActiveEntityState.html</anchorfile>
      <anchor>ab6b71c46b84f4cb073667dd823ea0491</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>uint32_t</type>
      <name>mCompendiumCount</name>
      <anchorfile>classchannel_1_1DemonState.html</anchorfile>
      <anchor>aa0d7b616b3e8300434290a3ed17395ab</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>std::list&lt; int32_t &gt;</type>
      <name>mCompendiumTokuseiIDs</name>
      <anchorfile>classchannel_1_1DemonState.html</anchorfile>
      <anchor>a38114e44d379a8f78f04f1ccb8eed43a</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>std::unordered_map&lt; uint8_t, std::list&lt; std::shared_ptr&lt; objects::InheritedSkill &gt; &gt; &gt;</type>
      <name>mLearningSkills</name>
      <anchorfile>classchannel_1_1DemonState.html</anchorfile>
      <anchor>a850d81f49b79840b0f9dd8a615ea1e48</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>channel::DynamicMap</name>
    <filename>classchannel_1_1DynamicMap.html</filename>
    <member kind="variable">
      <type>std::unordered_map&lt; uint32_t, std::shared_ptr&lt; ZoneSpotShape &gt; &gt;</type>
      <name>Spots</name>
      <anchorfile>classchannel_1_1DynamicMap.html</anchorfile>
      <anchor>a476f01740cdfe51ed3196fdb1e43522b</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>std::unordered_map&lt; uint8_t, std::list&lt; std::shared_ptr&lt; ZoneSpotShape &gt; &gt; &gt;</type>
      <name>SpotTypes</name>
      <anchorfile>classchannel_1_1DynamicMap.html</anchorfile>
      <anchor>a917d7efc2049c0d8bcac1f89cb3b1cd4</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>channel::EnemyState</name>
    <filename>classchannel_1_1EnemyState.html</filename>
    <base>ActiveEntityStateImp&lt; objects::Enemy &gt;</base>
    <member kind="function">
      <type></type>
      <name>EnemyState</name>
      <anchorfile>classchannel_1_1EnemyState.html</anchorfile>
      <anchor>ad62a45b813902fba99eeef6ce7936544</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~EnemyState</name>
      <anchorfile>classchannel_1_1EnemyState.html</anchorfile>
      <anchor>a4119c6b8f71bf712345af5927eef3e26</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>size_t</type>
      <name>AddRemoveOpponent</name>
      <anchorfile>classchannel_1_1ActiveEntityState.html</anchorfile>
      <anchor>ae1945edacc9db9dd0c0b8fc57ef0ba5a</anchor>
      <arglist>(bool add, int32_t opponentID)</arglist>
    </member>
    <member kind="function">
      <type>std::set&lt; uint32_t &gt;</type>
      <name>AddStatusEffects</name>
      <anchorfile>classchannel_1_1ActiveEntityState.html</anchorfile>
      <anchor>a66bf7fb8d7cd4587e53b9f51128857f2</anchor>
      <arglist>(const AddStatusEffectMap &amp;effects, libcomp::DefinitionManager *definitionManager, uint32_t now=0, bool queueChanges=true)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>CanAct</name>
      <anchorfile>classchannel_1_1ActiveEntityState.html</anchorfile>
      <anchor>ae18bb9a1c3476876a23040c08b5ce37a</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>CancelStatusEffects</name>
      <anchorfile>classchannel_1_1ActiveEntityState.html</anchorfile>
      <anchor>affba706127bff8c636e153cb69c29910</anchor>
      <arglist>(uint8_t cancelFlags)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>CanMove</name>
      <anchorfile>classchannel_1_1ActiveEntityState.html</anchorfile>
      <anchor>af56db75ec5333f4d99949f271c6a38de</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>ExpireStatusEffects</name>
      <anchorfile>classchannel_1_1ActiveEntityState.html</anchorfile>
      <anchor>a513eb93dd9e9b3d8956459355bc08a98</anchor>
      <arglist>(const std::set&lt; uint32_t &gt; &amp;effectTypes)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>ExpireStatusTimes</name>
      <anchorfile>classchannel_1_1ActiveEntityState.html</anchorfile>
      <anchor>a209bb96b9316bf12724e0a48891acc97</anchor>
      <arglist>(uint64_t now)</arglist>
    </member>
    <member kind="function">
      <type>uint64_t</type>
      <name>GetActionTime</name>
      <anchorfile>classchannel_1_1ActiveEntityState.html</anchorfile>
      <anchor>a66d0c35bb1d4ee3e361fafb02fcf629a</anchor>
      <arglist>(const libcomp::String &amp;action)</arglist>
    </member>
    <member kind="function">
      <type>std::shared_ptr&lt; channel::AIState &gt;</type>
      <name>GetAIState</name>
      <anchorfile>classchannel_1_1ActiveEntityState.html</anchorfile>
      <anchor>a7683912a1ff2b1a5dd162b5441a7dcc5</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual std::set&lt; uint32_t &gt;</type>
      <name>GetAllSkills</name>
      <anchorfile>classchannel_1_1ActiveEntityStateImp.html</anchorfile>
      <anchor>ab49cdbfc8d64fb90019f421a9f182597</anchor>
      <arglist>(libcomp::DefinitionManager *definitionManager, bool includeTokusei)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual std::shared_ptr&lt; objects::EntityStats &gt;</type>
      <name>GetCoreStats</name>
      <anchorfile>classchannel_1_1ActiveEntityStateImp.html</anchorfile>
      <anchor>a9f5302b984250a7215f0fd2ba9987d57</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>int16_t</type>
      <name>GetCorrectValue</name>
      <anchorfile>classchannel_1_1ActiveEntityState.html</anchorfile>
      <anchor>aa960f7643649ac1fc26d8baef048f5df</anchor>
      <arglist>(CorrectTbl tableID, std::shared_ptr&lt; objects::CalculatedEntityState &gt; calcState=nullptr)</arglist>
    </member>
    <member kind="function">
      <type>std::list&lt; std::pair&lt; std::shared_ptr&lt; objects::StatusEffect &gt;, uint32_t &gt; &gt;</type>
      <name>GetCurrentStatusEffectStates</name>
      <anchorfile>classchannel_1_1ActiveEntityState.html</anchorfile>
      <anchor>a9364c47b242a5691d9500504c2a3e2f8</anchor>
      <arglist>(libcomp::DefinitionManager *definitionManager, uint32_t now=0)</arglist>
    </member>
    <member kind="function">
      <type>float</type>
      <name>GetDistance</name>
      <anchorfile>classchannel_1_1ActiveEntityState.html</anchorfile>
      <anchor>a38d4d0eba28e2c3dec7bee89df6c244a</anchor>
      <arglist>(float x, float y, bool squared=false)</arglist>
    </member>
    <member kind="function">
      <type>std::shared_ptr&lt; objects::Enemy &gt;</type>
      <name>GetEntity</name>
      <anchorfile>classchannel_1_1ActiveEntityStateImp.html</anchorfile>
      <anchor>af4221fa010303086a166e69ca54345ea</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual const libobjgen::UUID</type>
      <name>GetEntityUUID</name>
      <anchorfile>classchannel_1_1ActiveEntityStateImp.html</anchorfile>
      <anchor>aa1e73078f5e79d3b16ecd0e1119ee9f7</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual uint8_t</type>
      <name>GetLNCType</name>
      <anchorfile>classchannel_1_1ActiveEntityStateImp.html</anchorfile>
      <anchor>a4100067bbe779db70c897cf343f7943c</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>float</type>
      <name>GetMovementSpeed</name>
      <anchorfile>classchannel_1_1ActiveEntityState.html</anchorfile>
      <anchor>a3a11050fb65a386e982332da21db2c87</anchor>
      <arglist>(bool altSpeed=false)</arglist>
    </member>
    <member kind="function">
      <type>int8_t</type>
      <name>GetNextActivatedAbilityID</name>
      <anchorfile>classchannel_1_1ActiveEntityState.html</anchorfile>
      <anchor>a3d841d6660fa605b5ca4f5628ec0c667</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>int16_t</type>
      <name>GetNRAChance</name>
      <anchorfile>classchannel_1_1ActiveEntityState.html</anchorfile>
      <anchor>ac468fcaa3b7dd039c9924d1ef55e880a</anchor>
      <arglist>(uint8_t nraIdx, CorrectTbl type, std::shared_ptr&lt; objects::CalculatedEntityState &gt; calcState=nullptr)</arglist>
    </member>
    <member kind="function">
      <type>std::set&lt; int32_t &gt;</type>
      <name>GetOpponentIDs</name>
      <anchorfile>classchannel_1_1ActiveEntityState.html</anchorfile>
      <anchor>a28eb0b46ea358d21487b2f855ef3bfd3</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>const std::unordered_map&lt; uint32_t, std::shared_ptr&lt; objects::StatusEffect &gt; &gt; &amp;</type>
      <name>GetStatusEffects</name>
      <anchorfile>classchannel_1_1ActiveEntityState.html</anchorfile>
      <anchor>af08840e2fef8a61e0737b61a85bb9c20</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>std::pair&lt; uint8_t, uint8_t &gt;</type>
      <name>GetTalkPoints</name>
      <anchorfile>classchannel_1_1EnemyState.html</anchorfile>
      <anchor>ae7935459bebf8f717d2ef8ecf1465c83</anchor>
      <arglist>(int32_t entityID)</arglist>
    </member>
    <member kind="function">
      <type>std::shared_ptr&lt; Zone &gt;</type>
      <name>GetZone</name>
      <anchorfile>classchannel_1_1ActiveEntityState.html</anchorfile>
      <anchor>ab75cc6f82b822318ec0816b6ccebd30a</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>HasOpponent</name>
      <anchorfile>classchannel_1_1ActiveEntityState.html</anchorfile>
      <anchor>ad2260cd031d413d44dd727a014cffc8a</anchor>
      <arglist>(int32_t opponentID=0)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>IsAlive</name>
      <anchorfile>classchannel_1_1ActiveEntityState.html</anchorfile>
      <anchor>ab6edd9f3b8abd577890af858d5dc85dc</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>IsLNCType</name>
      <anchorfile>classchannel_1_1ActiveEntityState.html</anchorfile>
      <anchor>ae897ad90fe5cb5f505f2de5a0da374c7</anchor>
      <arglist>(uint8_t lncType, bool invertFlag)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>IsMoving</name>
      <anchorfile>classchannel_1_1ActiveEntityState.html</anchorfile>
      <anchor>aa86a6658fd24aeafde4b18c0c97d0433</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>IsRotating</name>
      <anchorfile>classchannel_1_1ActiveEntityState.html</anchorfile>
      <anchor>af995e3c25687f8b2692dc523f08c04b1</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>Move</name>
      <anchorfile>classchannel_1_1ActiveEntityState.html</anchorfile>
      <anchor>ae83be0aeee9a600a99286fc1db8fc8d1</anchor>
      <arglist>(float xPos, float yPos, uint64_t now)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>PopEffectTicks</name>
      <anchorfile>classchannel_1_1ActiveEntityState.html</anchorfile>
      <anchor>a0539c15041b0ac7c49aa586f4b28eceb</anchor>
      <arglist>(libcomp::DefinitionManager *definitionManager, uint32_t time, int32_t &amp;hpTDamage, int32_t &amp;mpTDamage, std::set&lt; uint32_t &gt; &amp;added, std::set&lt; uint32_t &gt; &amp;updated, std::set&lt; uint32_t &gt; &amp;removed)</arglist>
    </member>
    <member kind="function">
      <type>std::set&lt; uint8_t &gt;</type>
      <name>PopNRAShields</name>
      <anchorfile>classchannel_1_1ActiveEntityState.html</anchorfile>
      <anchor>aa40113ab2ad642f5a232f1807dcaca76</anchor>
      <arglist>(const std::list&lt; CorrectTbl &gt; &amp;types)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual bool</type>
      <name>Ready</name>
      <anchorfile>classchannel_1_1ActiveEntityStateImp.html</anchorfile>
      <anchor>a66ce4e4014373250c4e7a32108fdda78</anchor>
      <arglist>(bool ignoreDisplayState=false)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual bool</type>
      <name>RecalcDisabledSkills</name>
      <anchorfile>classchannel_1_1ActiveEntityState.html</anchorfile>
      <anchor>a59bfa238a72ef7535e35ebfd356c60d8</anchor>
      <arglist>(libcomp::DefinitionManager *definitionManager)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual uint8_t</type>
      <name>RecalculateStats</name>
      <anchorfile>classchannel_1_1ActiveEntityStateImp.html</anchorfile>
      <anchor>aa13eeaec58b7c32b8d8569f026b59e3f</anchor>
      <arglist>(libcomp::DefinitionManager *definitionManager, std::shared_ptr&lt; objects::CalculatedEntityState &gt; calcState=nullptr)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>RefreshCurrentPosition</name>
      <anchorfile>classchannel_1_1ActiveEntityState.html</anchorfile>
      <anchor>ad58ca1704077c66eae6e6cfa5f93d137</anchor>
      <arglist>(uint64_t now)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>RefreshKnockback</name>
      <anchorfile>classchannel_1_1ActiveEntityState.html</anchorfile>
      <anchor>ad61a7487707c26af826391961d0fd7a5</anchor>
      <arglist>(uint64_t now, float recoveryBoost)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>Rotate</name>
      <anchorfile>classchannel_1_1ActiveEntityState.html</anchorfile>
      <anchor>ae22c1b7e0c0ff0217bf4d5d255e4db13</anchor>
      <arglist>(float rot, uint64_t now)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetActionTime</name>
      <anchorfile>classchannel_1_1ActiveEntityState.html</anchorfile>
      <anchor>a5eca26bba7bcac79034d2adfa7f584f7</anchor>
      <arglist>(const libcomp::String &amp;action, uint64_t time)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetAIState</name>
      <anchorfile>classchannel_1_1ActiveEntityState.html</anchorfile>
      <anchor>a23f9604c12ecf053dab3cb4511c7a624</anchor>
      <arglist>(const std::shared_ptr&lt; channel::AIState &gt; &amp;aiState)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetEntity</name>
      <anchorfile>classchannel_1_1ActiveEntityStateImp.html</anchorfile>
      <anchor>a081b5d9be8d1e94e5ac3a1c04e33a6cc</anchor>
      <arglist>(const std::shared_ptr&lt; objects::Enemy &gt; &amp;entity, const std::shared_ptr&lt; objects::MiDevilData &gt; &amp;devilData)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>SetHPMP</name>
      <anchorfile>classchannel_1_1ActiveEntityState.html</anchorfile>
      <anchor>a6616f760c961b349baf3b81d0bea31dc</anchor>
      <arglist>(int32_t hp, int32_t mp, bool adjust, bool canOverflow=false)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>SetHPMP</name>
      <anchorfile>classchannel_1_1ActiveEntityState.html</anchorfile>
      <anchor>a7c6d6218e677353ee81718c7a821be17</anchor>
      <arglist>(int32_t hp, int32_t mp, bool adjust, bool canOverflow, int32_t clenchChance, int32_t &amp;hpAdjusted, int32_t &amp;mpAdjusted)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetStatusEffects</name>
      <anchorfile>classchannel_1_1ActiveEntityState.html</anchorfile>
      <anchor>abc6fe40cb7d3047ea41b17ff76c3f7df</anchor>
      <arglist>(const std::list&lt; std::shared_ptr&lt; objects::StatusEffect &gt;&gt; &amp;effects)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetStatusEffectsActive</name>
      <anchorfile>classchannel_1_1ActiveEntityState.html</anchorfile>
      <anchor>ad037282b3c14165da135e4205658a951</anchor>
      <arglist>(bool activate, libcomp::DefinitionManager *definitionManager, uint32_t now=0)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetTalkPoints</name>
      <anchorfile>classchannel_1_1EnemyState.html</anchorfile>
      <anchor>ad5ecb5583a76300dc145001a84ecc227</anchor>
      <arglist>(int32_t entityID, const std::pair&lt; uint8_t, uint8_t &gt; &amp;points)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetZone</name>
      <anchorfile>classchannel_1_1ActiveEntityState.html</anchorfile>
      <anchor>a30007b72d6e529ca1bb069a699f4ed31</anchor>
      <arglist>(const std::shared_ptr&lt; Zone &gt; &amp;zone, bool updatePrevious=true)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>SkillAvailable</name>
      <anchorfile>classchannel_1_1ActiveEntityState.html</anchorfile>
      <anchor>a7aaf79e1f896744447d2db61abb9c9ec</anchor>
      <arglist>(uint32_t skillID)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>Stop</name>
      <anchorfile>classchannel_1_1ActiveEntityState.html</anchorfile>
      <anchor>a2cad211a8af9bca5239ab9f7579f3120</anchor>
      <arglist>(uint64_t now)</arglist>
    </member>
    <member kind="function">
      <type>float</type>
      <name>UpdateKnockback</name>
      <anchorfile>classchannel_1_1ActiveEntityState.html</anchorfile>
      <anchor>ab4c9670f327a31be928b619b000110d4</anchor>
      <arglist>(uint64_t now, float decrease, float recoveryBoost)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static float</type>
      <name>CorrectRotation</name>
      <anchorfile>classchannel_1_1ActiveEntityState.html</anchorfile>
      <anchor>a2d02b85123163c97fd1e593eb514640b</anchor>
      <arglist>(float rot)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>ActivateStatusEffect</name>
      <anchorfile>classchannel_1_1ActiveEntityState.html</anchorfile>
      <anchor>a002f85b0ac7e3213d13cce85ae1a5b1c</anchor>
      <arglist>(const std::shared_ptr&lt; objects::StatusEffect &gt; &amp;effect, libcomp::DefinitionManager *definitionManager, uint32_t now, bool timeOnly)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>AdjustStats</name>
      <anchorfile>classchannel_1_1ActiveEntityState.html</anchorfile>
      <anchor>a318eb1d9febb3704d218b14cde573230</anchor>
      <arglist>(const std::list&lt; std::shared_ptr&lt; objects::MiCorrectTbl &gt;&gt; &amp;adjustments, libcomp::EnumMap&lt; CorrectTbl, int16_t &gt; &amp;stats, std::shared_ptr&lt; objects::CalculatedEntityState &gt; calcState, bool baseMode)</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>BaseStatsCalculated</name>
      <anchorfile>classchannel_1_1ActiveEntityState.html</anchorfile>
      <anchor>aa348c1deb923b21e640c586dbfc35506</anchor>
      <arglist>(libcomp::DefinitionManager *definitionManager, std::shared_ptr&lt; objects::CalculatedEntityState &gt; calcState, libcomp::EnumMap&lt; CorrectTbl, int16_t &gt; &amp;stats, std::list&lt; std::shared_ptr&lt; objects::MiCorrectTbl &gt;&gt; &amp;adjustments)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>uint8_t</type>
      <name>CalculateLNCType</name>
      <anchorfile>classchannel_1_1ActiveEntityState.html</anchorfile>
      <anchor>a34960657093fd4872631e886df4998e2</anchor>
      <arglist>(int16_t lncPoints) const </arglist>
    </member>
    <member kind="function" protection="protected">
      <type>uint8_t</type>
      <name>CompareAndResetStats</name>
      <anchorfile>classchannel_1_1ActiveEntityState.html</anchorfile>
      <anchor>a3441ec808c0da0ebddb044fce70b52d4</anchor>
      <arglist>(libcomp::EnumMap&lt; CorrectTbl, int16_t &gt; &amp;stats, int32_t extraHP=0)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>GetAdditionalCorrectTbls</name>
      <anchorfile>classchannel_1_1ActiveEntityState.html</anchorfile>
      <anchor>af5fda23fe92a4383277c28073712d106</anchor>
      <arglist>(libcomp::DefinitionManager *definitionManager, std::shared_ptr&lt; objects::CalculatedEntityState &gt; calcState, std::list&lt; std::shared_ptr&lt; objects::MiCorrectTbl &gt;&gt; &amp;adjustments)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>uint32_t</type>
      <name>GetCurrentExpiration</name>
      <anchorfile>classchannel_1_1ActiveEntityState.html</anchorfile>
      <anchor>af93288af34867c22340a7da9f699b2fc</anchor>
      <arglist>(const std::shared_ptr&lt; objects::StatusEffect &gt; &amp;effect, libcomp::DefinitionManager *definitionManager, uint32_t nextTime, uint32_t now)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>std::set&lt; uint32_t &gt;</type>
      <name>GetEffectiveTokuseiSkills</name>
      <anchorfile>classchannel_1_1ActiveEntityState.html</anchorfile>
      <anchor>af5d0540419e8c3d02bb6485603c81133</anchor>
      <arglist>(libcomp::DefinitionManager *definitionManager)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>uint8_t</type>
      <name>RecalculateDemonStats</name>
      <anchorfile>classchannel_1_1ActiveEntityState.html</anchorfile>
      <anchor>aa116a03fff76b59e8577b87cb6070365</anchor>
      <arglist>(libcomp::DefinitionManager *definitionManager, std::shared_ptr&lt; objects::CalculatedEntityState &gt; calcState)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>RegisterNextEffectTime</name>
      <anchorfile>classchannel_1_1ActiveEntityState.html</anchorfile>
      <anchor>abb971ac4a2f29be3a316a5e12a4b51bb</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>RemoveInactiveSwitchSkills</name>
      <anchorfile>classchannel_1_1ActiveEntityState.html</anchorfile>
      <anchor>a7b31da8ab8cf7529a93ae5ab43d8e6cb</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>RemoveStatusEffects</name>
      <anchorfile>classchannel_1_1ActiveEntityState.html</anchorfile>
      <anchor>af048315581b26430c0dc62d15d5078dc</anchor>
      <arglist>(const std::set&lt; uint32_t &gt; &amp;effectTypes)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>SetNextEffectTime</name>
      <anchorfile>classchannel_1_1ActiveEntityState.html</anchorfile>
      <anchor>af9d56a631bf512f8ac22671e78fb3864</anchor>
      <arglist>(uint32_t effectType, uint32_t time)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>SetStatusEffects</name>
      <anchorfile>classchannel_1_1ActiveEntityState.html</anchorfile>
      <anchor>a67dc06dcf10274170f0728f5f066588f</anchor>
      <arglist>(const std::list&lt; libcomp::ObjectReference&lt; objects::StatusEffect &gt;&gt; &amp;effects)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>UpdateNRAChances</name>
      <anchorfile>classchannel_1_1ActiveEntityState.html</anchorfile>
      <anchor>ab085e16b7b68c89e4f92763dbdf8e87d</anchor>
      <arglist>(libcomp::EnumMap&lt; CorrectTbl, int16_t &gt; &amp;stats, std::shared_ptr&lt; objects::CalculatedEntityState &gt; calcState, const std::list&lt; std::shared_ptr&lt; objects::MiCorrectTbl &gt;&gt; &amp;adjustments={})</arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>std::unordered_map&lt; std::string, uint64_t &gt;</type>
      <name>mActionTimes</name>
      <anchorfile>classchannel_1_1ActiveEntityState.html</anchorfile>
      <anchor>a54a791fd0f100e1e098d0c8579cd6298</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>std::shared_ptr&lt; AIState &gt;</type>
      <name>mAIState</name>
      <anchorfile>classchannel_1_1ActiveEntityState.html</anchorfile>
      <anchor>aafcef9fb7f80ea09775a6f00a008ee11</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>bool</type>
      <name>mAlive</name>
      <anchorfile>classchannel_1_1ActiveEntityState.html</anchorfile>
      <anchor>ab1f143a1f6904fd063477232e7477b92</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>std::unordered_map&lt; uint8_t, std::set&lt; uint32_t &gt; &gt;</type>
      <name>mCancelConditions</name>
      <anchorfile>classchannel_1_1ActiveEntityState.html</anchorfile>
      <anchor>a2878947ed3b4a723ba1804841658323b</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>std::shared_ptr&lt; Zone &gt;</type>
      <name>mCurrentZone</name>
      <anchorfile>classchannel_1_1ActiveEntityState.html</anchorfile>
      <anchor>a1dc568369cb1ff4d78a9db83c08375f8</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>bool</type>
      <name>mEffectsActive</name>
      <anchorfile>classchannel_1_1ActiveEntityState.html</anchorfile>
      <anchor>ae7e6dc8b0b6c2ecf09c634c1e7cb701f</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>bool</type>
      <name>mInitialCalc</name>
      <anchorfile>classchannel_1_1ActiveEntityState.html</anchorfile>
      <anchor>ace2da752766739a6149fc2b07b158d59</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>uint64_t</type>
      <name>mLastRefresh</name>
      <anchorfile>classchannel_1_1ActiveEntityState.html</anchorfile>
      <anchor>ade34713c4aec7ca929822a292b0223d3</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>std::mutex</type>
      <name>mLock</name>
      <anchorfile>classchannel_1_1ActiveEntityState.html</anchorfile>
      <anchor>a8ba2ead908829f41707bdd3b36bcbb0a</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>int8_t</type>
      <name>mNextActivatedAbilityID</name>
      <anchorfile>classchannel_1_1ActiveEntityState.html</anchorfile>
      <anchor>a201d4512bc8abb8059a6589999a48bdb</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>std::map&lt; uint32_t, std::set&lt; uint32_t &gt; &gt;</type>
      <name>mNextEffectTimes</name>
      <anchorfile>classchannel_1_1ActiveEntityState.html</anchorfile>
      <anchor>a7cec5b66c750593b2ad1f2b86c03e233</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>std::unordered_map&lt; uint32_t, libcomp::EnumMap&lt; CorrectTbl, std::set&lt; uint8_t &gt; &gt; &gt;</type>
      <name>mNRAShields</name>
      <anchorfile>classchannel_1_1ActiveEntityState.html</anchorfile>
      <anchor>a203b30260e6d7f760c0b8071b6babc51</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>std::set&lt; int32_t &gt;</type>
      <name>mOpponentIDs</name>
      <anchorfile>classchannel_1_1ActiveEntityState.html</anchorfile>
      <anchor>ac62ddc39f590dd556479f21152f0fb47</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>std::unordered_map&lt; uint32_t, std::shared_ptr&lt; objects::StatusEffect &gt; &gt;</type>
      <name>mStatusEffects</name>
      <anchorfile>classchannel_1_1ActiveEntityState.html</anchorfile>
      <anchor>a8339cd0b835314682a8419496ab3ff94</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>std::set&lt; uint32_t &gt;</type>
      <name>mTimeDamageEffects</name>
      <anchorfile>classchannel_1_1ActiveEntityState.html</anchorfile>
      <anchor>ab6b71c46b84f4cb073667dd823ea0491</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>std::unordered_map&lt; int32_t, std::pair&lt; uint8_t, uint8_t &gt; &gt;</type>
      <name>mTalkPoints</name>
      <anchorfile>classchannel_1_1EnemyState.html</anchorfile>
      <anchor>a9c813192b23a0e1b422ba6b9b22bbddd</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>channel::EntityState</name>
    <filename>classchannel_1_1EntityState.html</filename>
    <templarg>T</templarg>
    <member kind="function">
      <type></type>
      <name>EntityState</name>
      <anchorfile>classchannel_1_1EntityState.html</anchorfile>
      <anchor>a1f216c9ac2dce3231510be5f59caffcb</anchor>
      <arglist>(const std::shared_ptr&lt; objects::ServerObject &gt; &amp;entity)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>EntityState</name>
      <anchorfile>classchannel_1_1EntityState.html</anchorfile>
      <anchor>a009bec0495c2df03d9d0c9060e5f2573</anchor>
      <arglist>(const std::shared_ptr&lt; T &gt; &amp;entity)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>EntityState</name>
      <anchorfile>classchannel_1_1EntityState.html</anchorfile>
      <anchor>a58569ceca7f11b99e292fe63f9e24104</anchor>
      <arglist>(const std::shared_ptr&lt; objects::ServerNPC &gt; &amp;entity)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>EntityState</name>
      <anchorfile>classchannel_1_1EntityState.html</anchorfile>
      <anchor>aa550817f98d818b9a0f0356ed298e6c2</anchor>
      <arglist>(const std::shared_ptr&lt; objects::ServerBazaar &gt; &amp;entity)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>EntityState</name>
      <anchorfile>classchannel_1_1EntityState.html</anchorfile>
      <anchor>ae2ee38eaa7c90e39bdf62aa3ede94cfc</anchor>
      <arglist>(const std::shared_ptr&lt; objects::LootBox &gt; &amp;entity)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>EntityState</name>
      <anchorfile>classchannel_1_1EntityState.html</anchorfile>
      <anchor>a9b56c8aad89b17f93af544f41614b567</anchor>
      <arglist>(const std::shared_ptr&lt; objects::PlasmaSpawn &gt; &amp;entity)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~EntityState</name>
      <anchorfile>classchannel_1_1EntityState.html</anchorfile>
      <anchor>a8c71287fcb338b4fb6803f5c3be92390</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>std::shared_ptr&lt; T &gt;</type>
      <name>GetEntity</name>
      <anchorfile>classchannel_1_1EntityState.html</anchorfile>
      <anchor>a78ed793f6bd313a5167573938b18bb23</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="variable" protection="private">
      <type>std::shared_ptr&lt; T &gt;</type>
      <name>mEntity</name>
      <anchorfile>classchannel_1_1EntityState.html</anchorfile>
      <anchor>a4b3891bfef26335be87ab09e94297194</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>EntityState&lt; objects::PlasmaSpawn &gt;</name>
    <filename>classchannel_1_1EntityState.html</filename>
    <member kind="function">
      <type></type>
      <name>EntityState</name>
      <anchorfile>classchannel_1_1EntityState.html</anchorfile>
      <anchor>a009bec0495c2df03d9d0c9060e5f2573</anchor>
      <arglist>(const std::shared_ptr&lt; objects::PlasmaSpawn &gt; &amp;entity)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~EntityState</name>
      <anchorfile>classchannel_1_1EntityState.html</anchorfile>
      <anchor>a8c71287fcb338b4fb6803f5c3be92390</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>std::shared_ptr&lt; objects::PlasmaSpawn &gt;</type>
      <name>GetEntity</name>
      <anchorfile>classchannel_1_1EntityState.html</anchorfile>
      <anchor>a78ed793f6bd313a5167573938b18bb23</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="variable" protection="private">
      <type>std::shared_ptr&lt; objects::PlasmaSpawn &gt;</type>
      <name>mEntity</name>
      <anchorfile>classchannel_1_1EntityState.html</anchorfile>
      <anchor>a4b3891bfef26335be87ab09e94297194</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>EntityState&lt; objects::ServerBazaar &gt;</name>
    <filename>classchannel_1_1EntityState.html</filename>
    <member kind="function">
      <type></type>
      <name>EntityState</name>
      <anchorfile>classchannel_1_1EntityState.html</anchorfile>
      <anchor>a009bec0495c2df03d9d0c9060e5f2573</anchor>
      <arglist>(const std::shared_ptr&lt; objects::ServerBazaar &gt; &amp;entity)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~EntityState</name>
      <anchorfile>classchannel_1_1EntityState.html</anchorfile>
      <anchor>a8c71287fcb338b4fb6803f5c3be92390</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>std::shared_ptr&lt; objects::ServerBazaar &gt;</type>
      <name>GetEntity</name>
      <anchorfile>classchannel_1_1EntityState.html</anchorfile>
      <anchor>a78ed793f6bd313a5167573938b18bb23</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="variable" protection="private">
      <type>std::shared_ptr&lt; objects::ServerBazaar &gt;</type>
      <name>mEntity</name>
      <anchorfile>classchannel_1_1EntityState.html</anchorfile>
      <anchor>a4b3891bfef26335be87ab09e94297194</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>channel::EventContext</name>
    <filename>structchannel_1_1EventContext.html</filename>
    <member kind="variable">
      <type>std::shared_ptr&lt; ChannelClientConnection &gt;</type>
      <name>Client</name>
      <anchorfile>structchannel_1_1EventContext.html</anchorfile>
      <anchor>afa60e4823906c8e7e1c8b281568f5187</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>std::shared_ptr&lt; Zone &gt;</type>
      <name>CurrentZone</name>
      <anchorfile>structchannel_1_1EventContext.html</anchorfile>
      <anchor>abbb4d0c9bf55752c4d0569183f53218e</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>std::shared_ptr&lt; objects::EventInstance &gt;</type>
      <name>EventInstance</name>
      <anchorfile>structchannel_1_1EventContext.html</anchorfile>
      <anchor>a8d7794d7afd4257c9798f0c86f45060e</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>channel::EventManager</name>
    <filename>classchannel_1_1EventManager.html</filename>
    <member kind="function">
      <type></type>
      <name>EventManager</name>
      <anchorfile>classchannel_1_1EventManager.html</anchorfile>
      <anchor>ac1fb0b1145490e8c492eb19b017c5bbd</anchor>
      <arglist>(const std::weak_ptr&lt; ChannelServer &gt; &amp;server)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~EventManager</name>
      <anchorfile>classchannel_1_1EventManager.html</anchorfile>
      <anchor>a2e43e8b165b54f75e9c005cf5b04ade7</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>HandleEvent</name>
      <anchorfile>classchannel_1_1EventManager.html</anchorfile>
      <anchor>a05842b77d3fe5a6de50a55c3c3d781d7</anchor>
      <arglist>(const std::shared_ptr&lt; ChannelClientConnection &gt; &amp;client, const libcomp::String &amp;eventID, int32_t sourceEntityID, const std::shared_ptr&lt; Zone &gt; &amp;zone=nullptr, uint32_t actionGroupID=0)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>HandleEvent</name>
      <anchorfile>classchannel_1_1EventManager.html</anchorfile>
      <anchor>a106365599659424c0437dfd3c90c34f7</anchor>
      <arglist>(const std::shared_ptr&lt; ChannelClientConnection &gt; &amp;client, const std::shared_ptr&lt; objects::EventInstance &gt; &amp;instance)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>HandleResponse</name>
      <anchorfile>classchannel_1_1EventManager.html</anchorfile>
      <anchor>a3b196c285220ad8ab35162299a94695d</anchor>
      <arglist>(const std::shared_ptr&lt; ChannelClientConnection &gt; &amp;client, int32_t responseID)</arglist>
    </member>
    <member kind="function">
      <type>std::shared_ptr&lt; objects::EventInstance &gt;</type>
      <name>PrepareEvent</name>
      <anchorfile>classchannel_1_1EventManager.html</anchorfile>
      <anchor>acde0c3a6dd4d2609fcdf4401e5b717e2</anchor>
      <arglist>(const std::shared_ptr&lt; ChannelClientConnection &gt; &amp;client, const libcomp::String &amp;eventID, int32_t sourceEntityID)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SendActiveQuestList</name>
      <anchorfile>classchannel_1_1EventManager.html</anchorfile>
      <anchor>a5de8063f4d63ed8285b85acdf842a0a0</anchor>
      <arglist>(const std::shared_ptr&lt; ChannelClientConnection &gt; &amp;client)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SendCompletedQuestList</name>
      <anchorfile>classchannel_1_1EventManager.html</anchorfile>
      <anchor>ad82e100059abaf388eb0967950c3e244</anchor>
      <arglist>(const std::shared_ptr&lt; ChannelClientConnection &gt; &amp;client)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>UpdateQuest</name>
      <anchorfile>classchannel_1_1EventManager.html</anchorfile>
      <anchor>a97b93981c40b1d07882dbe615db5e8cc</anchor>
      <arglist>(const std::shared_ptr&lt; ChannelClientConnection &gt; &amp;client, int16_t questID, int8_t phase, bool forceUpdate=false, const std::unordered_map&lt; int32_t, int32_t &gt; &amp;updateFlags={})</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>UpdateQuestKillCount</name>
      <anchorfile>classchannel_1_1EventManager.html</anchorfile>
      <anchor>acf7c31750060885ae5ee6375f238d787</anchor>
      <arglist>(const std::shared_ptr&lt; ChannelClientConnection &gt; &amp;client, const std::unordered_map&lt; uint32_t, int32_t &gt; &amp;kills)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>UpdateQuestTargetEnemies</name>
      <anchorfile>classchannel_1_1EventManager.html</anchorfile>
      <anchor>addac608e64c07e6d88201daec806917c</anchor>
      <arglist>(const std::shared_ptr&lt; ChannelClientConnection &gt; &amp;client)</arglist>
    </member>
    <member kind="function" protection="private">
      <type>bool</type>
      <name>Compare</name>
      <anchorfile>classchannel_1_1EventManager.html</anchorfile>
      <anchor>a014aa6f08876d941843a502c34cf1ec4</anchor>
      <arglist>(int32_t value1, int32_t value2, int32_t value3, EventCompareMode compareMode, EventCompareMode defaultCompare=EventCompareMode::DEFAULT_COMPARE, uint16_t validCompareSetting=63)</arglist>
    </member>
    <member kind="function" protection="private">
      <type>bool</type>
      <name>Direction</name>
      <anchorfile>classchannel_1_1EventManager.html</anchorfile>
      <anchor>a6d80733581e311434026103d5d782a2b</anchor>
      <arglist>(EventContext &amp;ctx)</arglist>
    </member>
    <member kind="function" protection="private">
      <type>bool</type>
      <name>EndEvent</name>
      <anchorfile>classchannel_1_1EventManager.html</anchorfile>
      <anchor>a27c5a25166b0d544a7a09fda1072127d</anchor>
      <arglist>(const std::shared_ptr&lt; ChannelClientConnection &gt; &amp;client)</arglist>
    </member>
    <member kind="function" protection="private">
      <type>bool</type>
      <name>EvaluateCondition</name>
      <anchorfile>classchannel_1_1EventManager.html</anchorfile>
      <anchor>a05673e31dd2a6f126f3b0dd5b10e95f5</anchor>
      <arglist>(EventContext &amp;ctx, const std::shared_ptr&lt; objects::EventConditionData &gt; &amp;condition, EventCompareMode compareMode=EventCompareMode::DEFAULT_COMPARE)</arglist>
    </member>
    <member kind="function" protection="private">
      <type>bool</type>
      <name>EvaluateEventCondition</name>
      <anchorfile>classchannel_1_1EventManager.html</anchorfile>
      <anchor>ae265d45a2e9e02e750ed95a063a951ed</anchor>
      <arglist>(EventContext &amp;ctx, const std::shared_ptr&lt; objects::EventCondition &gt; &amp;condition)</arglist>
    </member>
    <member kind="function" protection="private">
      <type>bool</type>
      <name>EvaluateEventConditions</name>
      <anchorfile>classchannel_1_1EventManager.html</anchorfile>
      <anchor>a303c0a472e19a3e7c9a10bc0d89fa56c</anchor>
      <arglist>(EventContext &amp;ctx, const std::list&lt; std::shared_ptr&lt; objects::EventCondition &gt;&gt; &amp;conditions)</arglist>
    </member>
    <member kind="function" protection="private">
      <type>bool</type>
      <name>EvaluateFlagStates</name>
      <anchorfile>classchannel_1_1EventManager.html</anchorfile>
      <anchor>a061582b19ce0d68e5f39027884b7837e</anchor>
      <arglist>(const std::unordered_map&lt; int32_t, int32_t &gt; &amp;flagStates, const std::shared_ptr&lt; objects::EventFlagCondition &gt; &amp;condition)</arglist>
    </member>
    <member kind="function" protection="private">
      <type>bool</type>
      <name>EvaluatePartnerCondition</name>
      <anchorfile>classchannel_1_1EventManager.html</anchorfile>
      <anchor>ae069693af178c3f23c7337488ed90311</anchor>
      <arglist>(const std::shared_ptr&lt; ChannelClientConnection &gt; &amp;client, const std::shared_ptr&lt; objects::EventCondition &gt; &amp;condition)</arglist>
    </member>
    <member kind="function" protection="private">
      <type>bool</type>
      <name>EvaluateQuestCondition</name>
      <anchorfile>classchannel_1_1EventManager.html</anchorfile>
      <anchor>a69d51508c937f49dc8de38baee1bb810</anchor>
      <arglist>(EventContext &amp;ctx, const std::shared_ptr&lt; objects::EventCondition &gt; &amp;condition)</arglist>
    </member>
    <member kind="function" protection="private">
      <type>bool</type>
      <name>EvaluateQuestConditions</name>
      <anchorfile>classchannel_1_1EventManager.html</anchorfile>
      <anchor>af55f5eb904c1695a400e18ef7e2e3869</anchor>
      <arglist>(EventContext &amp;ctx, int16_t questID)</arglist>
    </member>
    <member kind="function" protection="private">
      <type>bool</type>
      <name>EvaluateQuestPhaseRequirements</name>
      <anchorfile>classchannel_1_1EventManager.html</anchorfile>
      <anchor>aaff0054d0f24f21664bbff167d6341af</anchor>
      <arglist>(const std::shared_ptr&lt; ChannelClientConnection &gt; &amp;client, int16_t questID, int8_t phase)</arglist>
    </member>
    <member kind="function" protection="private">
      <type>bool</type>
      <name>ExNPCMessage</name>
      <anchorfile>classchannel_1_1EventManager.html</anchorfile>
      <anchor>a2db99d518202bc6ee783e9f7a3feab78</anchor>
      <arglist>(EventContext &amp;ctx)</arglist>
    </member>
    <member kind="function" protection="private">
      <type>bool</type>
      <name>HandleEvent</name>
      <anchorfile>classchannel_1_1EventManager.html</anchorfile>
      <anchor>a2f7b3bdb499035c2d5260b9e15ad42e6</anchor>
      <arglist>(EventContext &amp;ctx)</arglist>
    </member>
    <member kind="function" protection="private">
      <type>void</type>
      <name>HandleNext</name>
      <anchorfile>classchannel_1_1EventManager.html</anchorfile>
      <anchor>a4e3ed0106a6af2dc7415def68b62d436</anchor>
      <arglist>(EventContext &amp;ctx)</arglist>
    </member>
    <member kind="function" protection="private">
      <type>bool</type>
      <name>HandleTriFusion</name>
      <anchorfile>classchannel_1_1EventManager.html</anchorfile>
      <anchor>a1249bebb5cf53b1ffe50756eee84380c</anchor>
      <arglist>(const std::shared_ptr&lt; ChannelClientConnection &gt; &amp;client)</arglist>
    </member>
    <member kind="function" protection="private">
      <type>bool</type>
      <name>Multitalk</name>
      <anchorfile>classchannel_1_1EventManager.html</anchorfile>
      <anchor>a4c4f2505575ac3bc7c0a76d760d9315c</anchor>
      <arglist>(EventContext &amp;ctx)</arglist>
    </member>
    <member kind="function" protection="private">
      <type>bool</type>
      <name>NPCMessage</name>
      <anchorfile>classchannel_1_1EventManager.html</anchorfile>
      <anchor>a8217506a5619a61808b222eb50ad2956</anchor>
      <arglist>(EventContext &amp;ctx)</arglist>
    </member>
    <member kind="function" protection="private">
      <type>bool</type>
      <name>OpenMenu</name>
      <anchorfile>classchannel_1_1EventManager.html</anchorfile>
      <anchor>af65ef1f610abcbb26d463d351021a960</anchor>
      <arglist>(EventContext &amp;ctx)</arglist>
    </member>
    <member kind="function" protection="private">
      <type>bool</type>
      <name>PerformActions</name>
      <anchorfile>classchannel_1_1EventManager.html</anchorfile>
      <anchor>aa61f297d0c5e1619fe3f42713fa804f2</anchor>
      <arglist>(EventContext &amp;ctx)</arglist>
    </member>
    <member kind="function" protection="private">
      <type>bool</type>
      <name>PlayScene</name>
      <anchorfile>classchannel_1_1EventManager.html</anchorfile>
      <anchor>adbb3944eb8d606ba6b055ca5064a00a2</anchor>
      <arglist>(EventContext &amp;ctx)</arglist>
    </member>
    <member kind="function" protection="private">
      <type>bool</type>
      <name>Prompt</name>
      <anchorfile>classchannel_1_1EventManager.html</anchorfile>
      <anchor>acbfa9bc2cb9f0dc2c1439cf140995d17</anchor>
      <arglist>(EventContext &amp;ctx)</arglist>
    </member>
    <member kind="variable" protection="private">
      <type>std::weak_ptr&lt; ChannelServer &gt;</type>
      <name>mServer</name>
      <anchorfile>classchannel_1_1EventManager.html</anchorfile>
      <anchor>aff29d8d9c13936739a82e15f36a41310</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>channel::FusionManager</name>
    <filename>classchannel_1_1FusionManager.html</filename>
    <member kind="function">
      <type></type>
      <name>FusionManager</name>
      <anchorfile>classchannel_1_1FusionManager.html</anchorfile>
      <anchor>afc62433c481e15ffe7ad613d724f84ea</anchor>
      <arglist>(const std::weak_ptr&lt; ChannelServer &gt; &amp;server)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~FusionManager</name>
      <anchorfile>classchannel_1_1FusionManager.html</anchorfile>
      <anchor>ae8a38eda7caf1def69174d725520723a</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>EndExchange</name>
      <anchorfile>classchannel_1_1FusionManager.html</anchorfile>
      <anchor>a932d7c7debfde482ef714b85e34131fb</anchor>
      <arglist>(const std::shared_ptr&lt; channel::ChannelClientConnection &gt; &amp;client)</arglist>
    </member>
    <member kind="function">
      <type>uint32_t</type>
      <name>GetResultDemon</name>
      <anchorfile>classchannel_1_1FusionManager.html</anchorfile>
      <anchor>a89e84dda80ea20c0d0e6bad209ba5223</anchor>
      <arglist>(const std::shared_ptr&lt; ChannelClientConnection &gt; &amp;client, int64_t demonID1, int64_t demonID2, int64_t demonID3)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>HandleFusion</name>
      <anchorfile>classchannel_1_1FusionManager.html</anchorfile>
      <anchor>ad8d584a2b3bc56d70b6295c866f32906</anchor>
      <arglist>(const std::shared_ptr&lt; ChannelClientConnection &gt; &amp;client, int64_t demonID1, int64_t demonID2, uint32_t costItemType=0)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>HandleTriFusion</name>
      <anchorfile>classchannel_1_1FusionManager.html</anchorfile>
      <anchor>a2f4294f93f3bb11d58b057eb1a3783f2</anchor>
      <arglist>(const std::shared_ptr&lt; ChannelClientConnection &gt; &amp;client, int64_t demonID1, int64_t demonID2, int64_t demonID3, bool soloFusion)</arglist>
    </member>
    <member kind="function" protection="private">
      <type>int8_t</type>
      <name>GetAdjustedLevelSum</name>
      <anchorfile>classchannel_1_1FusionManager.html</anchorfile>
      <anchor>ae75ef62ea017a32a72f517a27119f68f</anchor>
      <arglist>(uint8_t level1, uint8_t level2, int8_t finalLevelAdjust=0)</arglist>
    </member>
    <member kind="function" protection="private">
      <type>uint32_t</type>
      <name>GetElementalFuseResult</name>
      <anchorfile>classchannel_1_1FusionManager.html</anchorfile>
      <anchor>a4713334fb09351501097c335b483e5b7</anchor>
      <arglist>(uint32_t elementalType, uint8_t otherRace, uint32_t otherType, bool adjustMinRank=false)</arglist>
    </member>
    <member kind="function" protection="private">
      <type>size_t</type>
      <name>GetElementalIndex</name>
      <anchorfile>classchannel_1_1FusionManager.html</anchorfile>
      <anchor>af854ee619d777116511cf67da84b726f</anchor>
      <arglist>(uint32_t elemType, bool &amp;found)</arglist>
    </member>
    <member kind="function" protection="private">
      <type>uint32_t</type>
      <name>GetElementalType</name>
      <anchorfile>classchannel_1_1FusionManager.html</anchorfile>
      <anchor>a36493205970cac07a18a2a1c5a86f555</anchor>
      <arglist>(size_t elementalIndex) const </arglist>
    </member>
    <member kind="function" protection="private">
      <type>size_t</type>
      <name>GetRaceIndex</name>
      <anchorfile>classchannel_1_1FusionManager.html</anchorfile>
      <anchor>a8bcf7a1e9f4b4e8fe291ffc631268f4c</anchor>
      <arglist>(uint8_t raceID, bool &amp;found)</arglist>
    </member>
    <member kind="function" protection="private">
      <type>std::shared_ptr&lt; objects::MiDevilData &gt;</type>
      <name>GetResultDemon</name>
      <anchorfile>classchannel_1_1FusionManager.html</anchorfile>
      <anchor>abd50a722ca8d46683d2a126ff11d0eed</anchor>
      <arglist>(uint8_t race, int8_t adjustedLevelSum)</arglist>
    </member>
    <member kind="function" protection="private">
      <type>int8_t</type>
      <name>ProcessFusion</name>
      <anchorfile>classchannel_1_1FusionManager.html</anchorfile>
      <anchor>a6c94559195a19c0043f640153b41234a</anchor>
      <arglist>(const std::shared_ptr&lt; ChannelClientConnection &gt; &amp;client, int64_t demonID1, int64_t demonID2, int64_t demonID3, uint32_t costItemType, std::shared_ptr&lt; objects::Demon &gt; &amp;resultDemon)</arglist>
    </member>
    <member kind="function" protection="private">
      <type>uint32_t</type>
      <name>RankUpDown</name>
      <anchorfile>classchannel_1_1FusionManager.html</anchorfile>
      <anchor>afc9fa384b354a1f05ca8db04a4c6f355</anchor>
      <arglist>(uint8_t raceID, uint32_t demonType, bool up)</arglist>
    </member>
    <member kind="variable" protection="private">
      <type>std::weak_ptr&lt; ChannelServer &gt;</type>
      <name>mServer</name>
      <anchorfile>classchannel_1_1FusionManager.html</anchorfile>
      <anchor>ac05ad9adebee3e157210a781e1549c86</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>HotbarItemRequest</name>
    <filename>structHotbarItemRequest.html</filename>
    <member kind="variable">
      <type>int64_t</type>
      <name>ObjectID</name>
      <anchorfile>structHotbarItemRequest.html</anchorfile>
      <anchor>a0612a18e6dea8d3c1ebc4beee894a73c</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int8_t</type>
      <name>Type</name>
      <anchorfile>structHotbarItemRequest.html</anchorfile>
      <anchor>afba1565ceb7a2f09752a7a30ebeee243</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>channel::Line</name>
    <filename>classchannel_1_1Line.html</filename>
    <member kind="function">
      <type></type>
      <name>Line</name>
      <anchorfile>classchannel_1_1Line.html</anchorfile>
      <anchor>acc11b8a429d8cdd63ba6803dff5602b3</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>Line</name>
      <anchorfile>classchannel_1_1Line.html</anchorfile>
      <anchor>a0ec34f80a43014768ec228bfa87fd15f</anchor>
      <arglist>(const Point &amp;a, const Point &amp;b)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>Line</name>
      <anchorfile>classchannel_1_1Line.html</anchorfile>
      <anchor>af46625f186ecafe2b335bc6878f0797b</anchor>
      <arglist>(float aX, float aY, float bX, float bY)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>Intersect</name>
      <anchorfile>classchannel_1_1Line.html</anchorfile>
      <anchor>a2bc24eb7631a8860e0ecf8ff48a299f6</anchor>
      <arglist>(const Line &amp;other, Point &amp;point, float &amp;dist) const </arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>operator==</name>
      <anchorfile>classchannel_1_1Line.html</anchorfile>
      <anchor>a1790e7ca4fc380e0f8b55294b4d40375</anchor>
      <arglist>(const Line &amp;other) const </arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>channel::ManagerClientPacket</name>
    <filename>classchannel_1_1ManagerClientPacket.html</filename>
    <base>libcomp::ManagerPacket</base>
    <member kind="function">
      <type></type>
      <name>ManagerClientPacket</name>
      <anchorfile>classchannel_1_1ManagerClientPacket.html</anchorfile>
      <anchor>a515bb5812b20e0df5030360b8608363a</anchor>
      <arglist>(std::weak_ptr&lt; libcomp::BaseServer &gt; server)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~ManagerClientPacket</name>
      <anchorfile>classchannel_1_1ManagerClientPacket.html</anchorfile>
      <anchor>ad67eafa601a82a49eb1ffc1995ff11ee</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual bool</type>
      <name>ValidateConnectionState</name>
      <anchorfile>classchannel_1_1ManagerClientPacket.html</anchorfile>
      <anchor>abbc1ce1cc655eb58b7e1b51dba17ea5d</anchor>
      <arglist>(const std::shared_ptr&lt; libcomp::TcpConnection &gt; &amp;connection, libcomp::CommandCode_t commandCode) const </arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>channel::ManagerConnection</name>
    <filename>classchannel_1_1ManagerConnection.html</filename>
    <base>libcomp::Manager</base>
    <member kind="function">
      <type></type>
      <name>ManagerConnection</name>
      <anchorfile>classchannel_1_1ManagerConnection.html</anchorfile>
      <anchor>a69744db1fdb43b965b8304f1685533a0</anchor>
      <arglist>(std::weak_ptr&lt; libcomp::BaseServer &gt; server)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~ManagerConnection</name>
      <anchorfile>classchannel_1_1ManagerConnection.html</anchorfile>
      <anchor>aeca514062c780714800271a9a4aae4dd</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>BroadcastPacketToClients</name>
      <anchorfile>classchannel_1_1ManagerConnection.html</anchorfile>
      <anchor>a34fd148f69ecdc185da5d6a6159f7bb8</anchor>
      <arglist>(libcomp::Packet &amp;packet)</arglist>
    </member>
    <member kind="function">
      <type>std::list&lt; std::shared_ptr&lt; ChannelClientConnection &gt; &gt;</type>
      <name>GatherWorldTargetClients</name>
      <anchorfile>classchannel_1_1ManagerConnection.html</anchorfile>
      <anchor>a245b13119f9a2e0129bae43124755e64</anchor>
      <arglist>(libcomp::ReadOnlyPacket &amp;p, bool &amp;success)</arglist>
    </member>
    <member kind="function">
      <type>const std::shared_ptr&lt; ChannelClientConnection &gt;</type>
      <name>GetClientConnection</name>
      <anchorfile>classchannel_1_1ManagerConnection.html</anchorfile>
      <anchor>a75f61653a68552b48a1923867ac4bb8a</anchor>
      <arglist>(const libcomp::String &amp;username)</arglist>
    </member>
    <member kind="function">
      <type>const std::shared_ptr&lt; ChannelClientConnection &gt;</type>
      <name>GetEntityClient</name>
      <anchorfile>classchannel_1_1ManagerConnection.html</anchorfile>
      <anchor>abf8b483c60943afebd797ed895d84a06</anchor>
      <arglist>(int32_t id, bool worldID=false)</arglist>
    </member>
    <member kind="function">
      <type>std::list&lt; std::shared_ptr&lt; ChannelClientConnection &gt; &gt;</type>
      <name>GetPartyConnections</name>
      <anchorfile>classchannel_1_1ManagerConnection.html</anchorfile>
      <anchor>afbb4a01102ebfd791354391ad87c77d3</anchor>
      <arglist>(const std::shared_ptr&lt; ChannelClientConnection &gt; &amp;client, bool includeSelf, bool zoneRestrict)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual std::list&lt; libcomp::Message::MessageType &gt;</type>
      <name>GetSupportedTypes</name>
      <anchorfile>classchannel_1_1ManagerConnection.html</anchorfile>
      <anchor>afb0b50132fc40f19d81d8a2e07e3e4d8</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>const std::shared_ptr&lt; libcomp::InternalConnection &gt;</type>
      <name>GetWorldConnection</name>
      <anchorfile>classchannel_1_1ManagerConnection.html</anchorfile>
      <anchor>aeba1e85007fe768baba5af30eecfe0db</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>HandleClientTimeouts</name>
      <anchorfile>classchannel_1_1ManagerConnection.html</anchorfile>
      <anchor>a5363d0ed738b6cd6579415d984cf68f5</anchor>
      <arglist>(uint64_t now, uint16_t timeout)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual bool</type>
      <name>ProcessMessage</name>
      <anchorfile>classchannel_1_1ManagerConnection.html</anchorfile>
      <anchor>ad07e4c1a45811f93e6ac9fd46da74e55</anchor>
      <arglist>(const libcomp::Message::Message *pMessage)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>RemoveClientConnection</name>
      <anchorfile>classchannel_1_1ManagerConnection.html</anchorfile>
      <anchor>aec7c5afe24d86f529c1210744ee1e08c</anchor>
      <arglist>(const std::shared_ptr&lt; ChannelClientConnection &gt; &amp;client)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>RequestWorldInfo</name>
      <anchorfile>classchannel_1_1ManagerConnection.html</anchorfile>
      <anchor>ae7fbbd3b68f708c55ed6a5390b590b83</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>ScheduleClientTimeoutHandler</name>
      <anchorfile>classchannel_1_1ManagerConnection.html</anchorfile>
      <anchor>a0fba9c2f11da6a52506c1c6d52ca0926</anchor>
      <arglist>(uint16_t timeout)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetClientConnection</name>
      <anchorfile>classchannel_1_1ManagerConnection.html</anchorfile>
      <anchor>ae27bcf9124a921dd016eda06f94db62e</anchor>
      <arglist>(const std::shared_ptr&lt; ChannelClientConnection &gt; &amp;client)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetWorldConnection</name>
      <anchorfile>classchannel_1_1ManagerConnection.html</anchorfile>
      <anchor>af63ccbd892aeb302afec75909f82889d</anchor>
      <arglist>(const std::shared_ptr&lt; libcomp::InternalConnection &gt; &amp;worldConnection)</arglist>
    </member>
    <member kind="variable" protection="private">
      <type>std::unordered_map&lt; libcomp::String, std::shared_ptr&lt; ChannelClientConnection &gt; &gt;</type>
      <name>mClientConnections</name>
      <anchorfile>classchannel_1_1ManagerConnection.html</anchorfile>
      <anchor>ac67d9b4cae205e0505ba476ede4b8e24</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>std::mutex</type>
      <name>mLock</name>
      <anchorfile>classchannel_1_1ManagerConnection.html</anchorfile>
      <anchor>af18d61785eea2c57f32e3a6192713d7b</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>std::weak_ptr&lt; libcomp::BaseServer &gt;</type>
      <name>mServer</name>
      <anchorfile>classchannel_1_1ManagerConnection.html</anchorfile>
      <anchor>abedc9312abe7111813343d87d673afd1</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>std::shared_ptr&lt; libcomp::InternalConnection &gt;</type>
      <name>mWorldConnection</name>
      <anchorfile>classchannel_1_1ManagerConnection.html</anchorfile>
      <anchor>a9e6a2e67401cdd845a4eee9671de2e39</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private" static="yes">
      <type>static std::list&lt; libcomp::Message::MessageType &gt;</type>
      <name>sSupportedTypes</name>
      <anchorfile>classchannel_1_1ManagerConnection.html</anchorfile>
      <anchor>a72b30885e78c7d972a5c85647d46e0a9</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>channel::ManagerSystem</name>
    <filename>classchannel_1_1ManagerSystem.html</filename>
    <base>libcomp::Manager</base>
    <member kind="function">
      <type></type>
      <name>ManagerSystem</name>
      <anchorfile>classchannel_1_1ManagerSystem.html</anchorfile>
      <anchor>a4e4ad488e54810d73c5c11b92f3f866a</anchor>
      <arglist>(std::weak_ptr&lt; libcomp::BaseServer &gt; server)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~ManagerSystem</name>
      <anchorfile>classchannel_1_1ManagerSystem.html</anchorfile>
      <anchor>a6742e75e9469ad222a7caa4cdd96d606</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual std::list&lt; libcomp::Message::MessageType &gt;</type>
      <name>GetSupportedTypes</name>
      <anchorfile>classchannel_1_1ManagerSystem.html</anchorfile>
      <anchor>ad37046344781a857f6d1edb0a8f3eb59</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual bool</type>
      <name>ProcessMessage</name>
      <anchorfile>classchannel_1_1ManagerSystem.html</anchorfile>
      <anchor>a52e04861d985e4b365749950f79769c5</anchor>
      <arglist>(const libcomp::Message::Message *pMessage)</arglist>
    </member>
    <member kind="variable" protection="private">
      <type>std::weak_ptr&lt; libcomp::BaseServer &gt;</type>
      <name>mServer</name>
      <anchorfile>classchannel_1_1ManagerSystem.html</anchorfile>
      <anchor>ad98f7127300ab1ab8dc1b4d51e855936</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private" static="yes">
      <type>static std::list&lt; libcomp::Message::MessageType &gt;</type>
      <name>sSupportedTypes</name>
      <anchorfile>classchannel_1_1ManagerSystem.html</anchorfile>
      <anchor>a83931d1d271d36781ae9f05fee7be1a8</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>PartyMemberInfo</name>
    <filename>structPartyMemberInfo.html</filename>
    <member kind="variable">
      <type>bool</type>
      <name>IsLeader</name>
      <anchorfile>structPartyMemberInfo.html</anchorfile>
      <anchor>a10837aa8325386475a6c108c579dcd94</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>std::shared_ptr&lt; objects::PartyCharacter &gt;</type>
      <name>Member</name>
      <anchorfile>structPartyMemberInfo.html</anchorfile>
      <anchor>ac35b50be2c1bdf2f46b0248343cd728e</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>uint32_t</type>
      <name>ZoneID</name>
      <anchorfile>structPartyMemberInfo.html</anchorfile>
      <anchor>aa2f9dd82e1ae9609d525aa9c0de65fe2</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>channel::PlasmaPoint</name>
    <filename>classchannel_1_1PlasmaPoint.html</filename>
    <member kind="function">
      <type></type>
      <name>PlasmaPoint</name>
      <anchorfile>classchannel_1_1PlasmaPoint.html</anchorfile>
      <anchor>aa92fe6a8de968fa578568f3b7931518c</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>std::shared_ptr&lt; objects::LootBox &gt;</type>
      <name>GetLoot</name>
      <anchorfile>classchannel_1_1PlasmaPoint.html</anchorfile>
      <anchor>a09fd384620a037187de0c38a170344f1</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>int32_t</type>
      <name>GetState</name>
      <anchorfile>classchannel_1_1PlasmaPoint.html</anchorfile>
      <anchor>ae26cbbd20eeab8cdf793e989a8b61403</anchor>
      <arglist>(int32_t looterID=-1)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>Refresh</name>
      <anchorfile>classchannel_1_1PlasmaPoint.html</anchorfile>
      <anchor>a51320216065995cc0f6cce154fdc4c1b</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="variable" protection="private">
      <type>bool</type>
      <name>mHidden</name>
      <anchorfile>classchannel_1_1PlasmaPoint.html</anchorfile>
      <anchor>a7a77b3fdcfc3e68c16123b52a5256346</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>uint64_t</type>
      <name>mHideTime</name>
      <anchorfile>classchannel_1_1PlasmaPoint.html</anchorfile>
      <anchor>a242937e7af0c8ed84634c2299d5aeb3b</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>std::shared_ptr&lt; objects::LootBox &gt;</type>
      <name>mLoot</name>
      <anchorfile>classchannel_1_1PlasmaPoint.html</anchorfile>
      <anchor>a27e9a5ec8ce341318972df7b28283168</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>int32_t</type>
      <name>mLooterID</name>
      <anchorfile>classchannel_1_1PlasmaPoint.html</anchorfile>
      <anchor>a20a0f383528f1ca1d9a5bed77186bca7</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>bool</type>
      <name>mOpen</name>
      <anchorfile>classchannel_1_1PlasmaPoint.html</anchorfile>
      <anchor>aef72185048ab5a8cb6539fc8c844fd85</anchor>
      <arglist></arglist>
    </member>
    <member kind="friend" protection="private">
      <type>friend class</type>
      <name>PlasmaState</name>
      <anchorfile>classchannel_1_1PlasmaPoint.html</anchorfile>
      <anchor>abb8fd2c670829f2624b47a28b03996d9</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>channel::PlasmaState</name>
    <filename>classchannel_1_1PlasmaState.html</filename>
    <base>EntityState&lt; objects::PlasmaSpawn &gt;</base>
    <member kind="function">
      <type></type>
      <name>PlasmaState</name>
      <anchorfile>classchannel_1_1PlasmaState.html</anchorfile>
      <anchor>aa5f40676c461c0cf323e5c0dc688f615</anchor>
      <arglist>(const std::shared_ptr&lt; objects::PlasmaSpawn &gt; &amp;plasma)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~PlasmaState</name>
      <anchorfile>classchannel_1_1PlasmaState.html</anchorfile>
      <anchor>ae885dc160a9c739e7edd098a221e492a</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>CreatePoints</name>
      <anchorfile>classchannel_1_1PlasmaState.html</anchorfile>
      <anchor>a136733dcbae56560412f4e6af8311623</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>std::list&lt; std::shared_ptr&lt; PlasmaPoint &gt; &gt;</type>
      <name>GetActivePoints</name>
      <anchorfile>classchannel_1_1PlasmaState.html</anchorfile>
      <anchor>a38cdfff2b74064fc24fc7098dfa5c1c6</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>std::shared_ptr&lt; objects::PlasmaSpawn &gt;</type>
      <name>GetEntity</name>
      <anchorfile>classchannel_1_1EntityState.html</anchorfile>
      <anchor>a78ed793f6bd313a5167573938b18bb23</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>std::shared_ptr&lt; PlasmaPoint &gt;</type>
      <name>GetPoint</name>
      <anchorfile>classchannel_1_1PlasmaState.html</anchorfile>
      <anchor>a5cd4a9577acb43280dd78a5b8c7f88a6</anchor>
      <arglist>(uint32_t pointID)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>GetPointStatusData</name>
      <anchorfile>classchannel_1_1PlasmaState.html</anchorfile>
      <anchor>ac0fbe4b4e64f10900d8bf8fa3b4eabe6</anchor>
      <arglist>(libcomp::Packet &amp;p, uint32_t pointID, int32_t looterID=-1)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>GetPointStatusData</name>
      <anchorfile>classchannel_1_1PlasmaState.html</anchorfile>
      <anchor>a856c4bd95919b3d62d16be595ebaf206</anchor>
      <arglist>(libcomp::Packet &amp;p, std::list&lt; uint32_t &gt; pointIDs, int32_t looterID=-1)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>HasStateChangePoints</name>
      <anchorfile>classchannel_1_1PlasmaState.html</anchorfile>
      <anchor>a7d081bc8e576c7aa1f040fc855bc11e4</anchor>
      <arglist>(bool respawn, uint64_t now=0)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>HideIfEmpty</name>
      <anchorfile>classchannel_1_1PlasmaState.html</anchorfile>
      <anchor>a60f0ee1482069bb56dedccfb9970a8ee</anchor>
      <arglist>(const std::shared_ptr&lt; PlasmaPoint &gt; &amp;point)</arglist>
    </member>
    <member kind="function">
      <type>std::shared_ptr&lt; PlasmaPoint &gt;</type>
      <name>PickPoint</name>
      <anchorfile>classchannel_1_1PlasmaState.html</anchorfile>
      <anchor>afdd507915da89c3ab86dff8b8695e689</anchor>
      <arglist>(uint32_t pointID, int32_t looterID)</arglist>
    </member>
    <member kind="function">
      <type>std::list&lt; std::shared_ptr&lt; PlasmaPoint &gt; &gt;</type>
      <name>PopHidePoints</name>
      <anchorfile>classchannel_1_1PlasmaState.html</anchorfile>
      <anchor>a49e14b79193af0420f07c82aa748eec8</anchor>
      <arglist>(uint64_t now=0)</arglist>
    </member>
    <member kind="function">
      <type>std::list&lt; std::shared_ptr&lt; PlasmaPoint &gt; &gt;</type>
      <name>PopRespawnPoints</name>
      <anchorfile>classchannel_1_1PlasmaState.html</anchorfile>
      <anchor>a11d14c7e144ba0570711967677114658</anchor>
      <arglist>(uint64_t now=0)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>SetLoot</name>
      <anchorfile>classchannel_1_1PlasmaState.html</anchorfile>
      <anchor>a9465bfb81abf8153dd28b250e3171be8</anchor>
      <arglist>(uint32_t pointID, int32_t looterID, const std::shared_ptr&lt; objects::LootBox &gt; &amp;loot)</arglist>
    </member>
    <member kind="function">
      <type>std::shared_ptr&lt; PlasmaPoint &gt;</type>
      <name>SetPickResult</name>
      <anchorfile>classchannel_1_1PlasmaState.html</anchorfile>
      <anchor>ab9e5f69c81480fff443811d3384082d4</anchor>
      <arglist>(uint32_t pointID, int32_t looterID, int8_t result)</arglist>
    </member>
    <member kind="function" protection="private">
      <type>void</type>
      <name>HidePoint</name>
      <anchorfile>classchannel_1_1PlasmaState.html</anchorfile>
      <anchor>a1c0a7df325e03c7930757d51d7f00b21</anchor>
      <arglist>(const std::shared_ptr&lt; PlasmaPoint &gt; &amp;point)</arglist>
    </member>
    <member kind="variable" protection="private">
      <type>std::mutex</type>
      <name>mLock</name>
      <anchorfile>classchannel_1_1PlasmaState.html</anchorfile>
      <anchor>a4005e97adb6cfbcdd7b8f175f0a2d76c</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>std::unordered_map&lt; uint32_t, uint64_t &gt;</type>
      <name>mPointHides</name>
      <anchorfile>classchannel_1_1PlasmaState.html</anchorfile>
      <anchor>a294ca5b4a290ccb1dcd79e2e22ebf71e</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>std::unordered_map&lt; uint32_t, uint64_t &gt;</type>
      <name>mPointRespawns</name>
      <anchorfile>classchannel_1_1PlasmaState.html</anchorfile>
      <anchor>a46366278846115a80644410db4d9e489</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>std::unordered_map&lt; uint32_t, std::shared_ptr&lt; PlasmaPoint &gt; &gt;</type>
      <name>mPoints</name>
      <anchorfile>classchannel_1_1PlasmaState.html</anchorfile>
      <anchor>a474927d6bf4abcaa08f727ce773c54d1</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>channel::Point</name>
    <filename>classchannel_1_1Point.html</filename>
    <member kind="function">
      <type></type>
      <name>Point</name>
      <anchorfile>classchannel_1_1Point.html</anchorfile>
      <anchor>ad92f2337b839a94ce97dcdb439b4325a</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>Point</name>
      <anchorfile>classchannel_1_1Point.html</anchorfile>
      <anchor>a54cdb703246287e21c059740035a61ed</anchor>
      <arglist>(float xCoord, float yCoord)</arglist>
    </member>
    <member kind="function">
      <type>float</type>
      <name>GetDistance</name>
      <anchorfile>classchannel_1_1Point.html</anchorfile>
      <anchor>a7024cd1ebe8d324959b22119f5f7155c</anchor>
      <arglist>(const Point &amp;other) const </arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>operator!=</name>
      <anchorfile>classchannel_1_1Point.html</anchorfile>
      <anchor>aac8cc421b631fdeedfa084cf924c2164</anchor>
      <arglist>(const Point &amp;other) const </arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>operator==</name>
      <anchorfile>classchannel_1_1Point.html</anchorfile>
      <anchor>a47584280150c7a90e86358b1edf8f810</anchor>
      <arglist>(const Point &amp;other) const </arglist>
    </member>
    <member kind="variable">
      <type>float</type>
      <name>x</name>
      <anchorfile>classchannel_1_1Point.html</anchorfile>
      <anchor>a68b4e13bacc608f5596f21858065aa42</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>float</type>
      <name>y</name>
      <anchorfile>classchannel_1_1Point.html</anchorfile>
      <anchor>a024b2065140ee28b1c65aaedc2244b2d</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>channel::ProcessingSkill</name>
    <filename>classchannel_1_1ProcessingSkill.html</filename>
    <member kind="variable">
      <type>std::shared_ptr&lt; objects::ActivatedAbility &gt;</type>
      <name>Activated</name>
      <anchorfile>classchannel_1_1ProcessingSkill.html</anchorfile>
      <anchor>aeafc94de7a098017060da7e32abc3075</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>uint8_t</type>
      <name>BaseAffinity</name>
      <anchorfile>classchannel_1_1ProcessingSkill.html</anchorfile>
      <anchor>a5ca8b8b1f272940d681fa0327f9e8b80</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>std::shared_ptr&lt; objects::MiSkillData &gt;</type>
      <name>Definition</name>
      <anchorfile>classchannel_1_1ProcessingSkill.html</anchorfile>
      <anchor>a437534c16a88d3a2585a835810d030a2</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>uint8_t</type>
      <name>EffectiveAffinity</name>
      <anchorfile>classchannel_1_1ProcessingSkill.html</anchorfile>
      <anchor>a043d592b0133c7e93062a61cb85851c8</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>uint8_t</type>
      <name>EffectiveDependencyType</name>
      <anchorfile>classchannel_1_1ProcessingSkill.html</anchorfile>
      <anchor>a586c9efec6fbdb0abed963ad77123869</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>std::shared_ptr&lt; ActiveEntityState &gt;</type>
      <name>EffectiveSource</name>
      <anchorfile>classchannel_1_1ProcessingSkill.html</anchorfile>
      <anchor>afd25b45e1b69217d1c1d8f2a253fc14d</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>SkillExecutionContext *</type>
      <name>ExecutionContext</name>
      <anchorfile>classchannel_1_1ProcessingSkill.html</anchorfile>
      <anchor>a22a1409cfa826c24759786c21d543398</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>uint8_t</type>
      <name>ExpertiseRankBoost</name>
      <anchorfile>classchannel_1_1ProcessingSkill.html</anchorfile>
      <anchor>af4f87cea723c152b7166d964c3554072</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>uint8_t</type>
      <name>ExpertiseType</name>
      <anchorfile>classchannel_1_1ProcessingSkill.html</anchorfile>
      <anchor>aab3432df31635d3555d4c958ab644b4b</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>bool</type>
      <name>IsItemSkill</name>
      <anchorfile>classchannel_1_1ProcessingSkill.html</anchorfile>
      <anchor>adc9bae4b803dfa42bae7d3b6847656f0</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>bool</type>
      <name>IsSuicide</name>
      <anchorfile>classchannel_1_1ProcessingSkill.html</anchorfile>
      <anchor>a9e1555c1a2fb0a86a4af30c96605a812</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>uint8_t</type>
      <name>KnowledgeRank</name>
      <anchorfile>classchannel_1_1ProcessingSkill.html</anchorfile>
      <anchor>a98e71e1766093cb686fef1abac1d4f38</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>uint16_t</type>
      <name>OffenseValue</name>
      <anchorfile>classchannel_1_1ProcessingSkill.html</anchorfile>
      <anchor>a83e3278743e30304f946dec3f384d9c5</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>std::unordered_map&lt; int32_t, uint16_t &gt;</type>
      <name>OffenseValues</name>
      <anchorfile>classchannel_1_1ProcessingSkill.html</anchorfile>
      <anchor>ac80d3f335679d23cf7cc86f236a2f7ea</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>std::shared_ptr&lt; ActiveEntityState &gt;</type>
      <name>PrimaryTarget</name>
      <anchorfile>classchannel_1_1ProcessingSkill.html</anchorfile>
      <anchor>ab4c79afde34582090f4cefaddee1b3dc</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>bool</type>
      <name>Reflected</name>
      <anchorfile>classchannel_1_1ProcessingSkill.html</anchorfile>
      <anchor>a327c597d69e042b851ad347a4acc1d24</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>uint32_t</type>
      <name>SkillID</name>
      <anchorfile>classchannel_1_1ProcessingSkill.html</anchorfile>
      <anchor>a9002395b6baea30e968e8fe0c0ec4fc5</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>std::unordered_map&lt; int32_t, std::shared_ptr&lt; objects::CalculatedEntityState &gt; &gt;</type>
      <name>SourceCalcStates</name>
      <anchorfile>classchannel_1_1ProcessingSkill.html</anchorfile>
      <anchor>a9158ec06e1c62f996ff1df4726aafb2e</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>std::shared_ptr&lt; objects::CalculatedEntityState &gt;</type>
      <name>SourceExecutionState</name>
      <anchorfile>classchannel_1_1ProcessingSkill.html</anchorfile>
      <anchor>a2e628e1325892298ce6280ae04406a94</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>std::unordered_map&lt; int32_t, std::shared_ptr&lt; objects::CalculatedEntityState &gt; &gt;</type>
      <name>TargetCalcStates</name>
      <anchorfile>classchannel_1_1ProcessingSkill.html</anchorfile>
      <anchor>ac2dfd969402b9de5e2571cca2d55e076</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>std::list&lt; channel::SkillTargetResult &gt;</type>
      <name>Targets</name>
      <anchorfile>classchannel_1_1ProcessingSkill.html</anchorfile>
      <anchor>a83505b5c4f10df9b84442c64ac552928</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>uint8_t</type>
      <name>WeaponAffinity</name>
      <anchorfile>classchannel_1_1ProcessingSkill.html</anchorfile>
      <anchor>a6bafed28d15b60484f757817f19ad0ee</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>channel::SkillExecutionContext</name>
    <filename>classchannel_1_1SkillExecutionContext.html</filename>
    <member kind="variable">
      <type>bool</type>
      <name>FreeCast</name>
      <anchorfile>classchannel_1_1SkillExecutionContext.html</anchorfile>
      <anchor>ac093e144eae21e0c6bd70f4432cf4d53</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>bool</type>
      <name>ApplyStatusEffects</name>
      <anchorfile>classchannel_1_1SkillExecutionContext.html</anchorfile>
      <anchor>a0ed1b4c3a44bfc7b4a9fe146f515eff6</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>std::shared_ptr&lt; channel::ProcessingSkill &gt;</type>
      <name>CounteredSkill</name>
      <anchorfile>classchannel_1_1SkillExecutionContext.html</anchorfile>
      <anchor>a4581219f854a35b5ae4290d5fa5035fc</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>std::list&lt; std::shared_ptr&lt; channel::ProcessingSkill &gt; &gt;</type>
      <name>CounteringSkills</name>
      <anchorfile>classchannel_1_1SkillExecutionContext.html</anchorfile>
      <anchor>a8f294f9f2b30b98cde90a18c697f6cce</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>std::shared_ptr&lt; channel::ProcessingSkill &gt;</type>
      <name>Skill</name>
      <anchorfile>classchannel_1_1SkillExecutionContext.html</anchorfile>
      <anchor>a79e5ca9913843332e9039240d9f04dcd</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>std::list&lt; std::shared_ptr&lt; channel::SkillExecutionContext &gt; &gt;</type>
      <name>SubContexts</name>
      <anchorfile>classchannel_1_1SkillExecutionContext.html</anchorfile>
      <anchor>a7aebaeda8fe9e2e8513c6dad26cad55a</anchor>
      <arglist></arglist>
    </member>
    <member kind="friend" protection="private">
      <type>friend class</type>
      <name>SkillManager</name>
      <anchorfile>classchannel_1_1SkillExecutionContext.html</anchorfile>
      <anchor>ab2808df3d22027c85233399b8af2be57</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>channel::SkillManager</name>
    <filename>classchannel_1_1SkillManager.html</filename>
    <member kind="function">
      <type></type>
      <name>SkillManager</name>
      <anchorfile>classchannel_1_1SkillManager.html</anchorfile>
      <anchor>afe2873aeeb9dacf7feb50976921dbd99</anchor>
      <arglist>(const std::weak_ptr&lt; ChannelServer &gt; &amp;server)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~SkillManager</name>
      <anchorfile>classchannel_1_1SkillManager.html</anchorfile>
      <anchor>a15b8075e2e32921af715cd52156c57c2</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>ActivateSkill</name>
      <anchorfile>classchannel_1_1SkillManager.html</anchorfile>
      <anchor>a7e2f11cb74a699a5e2e17023787b9e62</anchor>
      <arglist>(const std::shared_ptr&lt; ActiveEntityState &gt; source, uint32_t skillID, int64_t activationObjectID, int64_t targetObjectID, std::shared_ptr&lt; SkillExecutionContext &gt; ctx=0)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>CancelSkill</name>
      <anchorfile>classchannel_1_1SkillManager.html</anchorfile>
      <anchor>ab85bb6e6f3200d685e89c9f49d7edb92</anchor>
      <arglist>(const std::shared_ptr&lt; ActiveEntityState &gt; source, int8_t activationID)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>ExecuteSkill</name>
      <anchorfile>classchannel_1_1SkillManager.html</anchorfile>
      <anchor>a571e70d908c5a909421936c5858a7f2c</anchor>
      <arglist>(const std::shared_ptr&lt; ActiveEntityState &gt; source, int8_t activationID, int64_t targetObjectID, std::shared_ptr&lt; SkillExecutionContext &gt; ctx=0)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SendFailure</name>
      <anchorfile>classchannel_1_1SkillManager.html</anchorfile>
      <anchor>ac2215f674eddd42d38f7577f5c1ee4d6</anchor>
      <arglist>(const std::shared_ptr&lt; ActiveEntityState &gt; source, uint32_t skillID, const std::shared_ptr&lt; ChannelClientConnection &gt; client, uint8_t errorCode=0)</arglist>
    </member>
    <member kind="function" protection="private">
      <type>bool</type>
      <name>CalculateDamage</name>
      <anchorfile>classchannel_1_1SkillManager.html</anchorfile>
      <anchor>a990fe0a3459e469805a8a4315e4945b9</anchor>
      <arglist>(const std::shared_ptr&lt; ActiveEntityState &gt; &amp;source, const std::shared_ptr&lt; channel::ProcessingSkill &gt; &amp;pSkill)</arglist>
    </member>
    <member kind="function" protection="private">
      <type>int32_t</type>
      <name>CalculateDamage_MaxPercent</name>
      <anchorfile>classchannel_1_1SkillManager.html</anchorfile>
      <anchor>a059c4b19b9015067322b597e7bf3c7b3</anchor>
      <arglist>(uint16_t mod, uint8_t &amp;damageType, int32_t max)</arglist>
    </member>
    <member kind="function" protection="private">
      <type>int32_t</type>
      <name>CalculateDamage_Normal</name>
      <anchorfile>classchannel_1_1SkillManager.html</anchorfile>
      <anchor>a89aed28570e559325549e58f57401468</anchor>
      <arglist>(const std::shared_ptr&lt; ActiveEntityState &gt; &amp;source, SkillTargetResult &amp;target, const std::shared_ptr&lt; channel::ProcessingSkill &gt; &amp;pSkill, uint16_t mod, uint8_t &amp;damageType, uint8_t affinity, float resist, uint8_t critLevel, bool isHeal)</arglist>
    </member>
    <member kind="function" protection="private">
      <type>int32_t</type>
      <name>CalculateDamage_Percent</name>
      <anchorfile>classchannel_1_1SkillManager.html</anchorfile>
      <anchor>a26276aa6f8f48a8b626a3000aff7597d</anchor>
      <arglist>(uint16_t mod, uint8_t &amp;damageType, int32_t current)</arglist>
    </member>
    <member kind="function" protection="private">
      <type>int32_t</type>
      <name>CalculateDamage_Static</name>
      <anchorfile>classchannel_1_1SkillManager.html</anchorfile>
      <anchor>aa91987c6785bb264785a74732fb63bc0</anchor>
      <arglist>(uint16_t mod, uint8_t &amp;damageType)</arglist>
    </member>
    <member kind="function" protection="private">
      <type>uint16_t</type>
      <name>CalculateOffenseValue</name>
      <anchorfile>classchannel_1_1SkillManager.html</anchorfile>
      <anchor>a7f5152ec0b0fb5a3020c162c26d1cee3</anchor>
      <arglist>(const std::shared_ptr&lt; ActiveEntityState &gt; &amp;source, const std::shared_ptr&lt; ActiveEntityState &gt; &amp;target, const std::shared_ptr&lt; channel::ProcessingSkill &gt; &amp;pSkill)</arglist>
    </member>
    <member kind="function" protection="private">
      <type>uint8_t</type>
      <name>CalculateStatusEffectStack</name>
      <anchorfile>classchannel_1_1SkillManager.html</anchorfile>
      <anchor>ab335b773dffb6c590b84069d54e91899</anchor>
      <arglist>(int8_t minStack, int8_t maxStack) const </arglist>
    </member>
    <member kind="function" protection="private">
      <type>bool</type>
      <name>Cameo</name>
      <anchorfile>classchannel_1_1SkillManager.html</anchorfile>
      <anchor>ab6ff4a1c215f20c4379a0e7c59bc991f</anchor>
      <arglist>(const std::shared_ptr&lt; objects::ActivatedAbility &gt; &amp;activated, const std::shared_ptr&lt; SkillExecutionContext &gt; &amp;ctx, const std::shared_ptr&lt; ChannelClientConnection &gt; &amp;client)</arglist>
    </member>
    <member kind="function" protection="private">
      <type>void</type>
      <name>CheckSkillHits</name>
      <anchorfile>classchannel_1_1SkillManager.html</anchorfile>
      <anchor>a00e56b9736c5719bae3c868bb90affe9</anchor>
      <arglist>(const std::shared_ptr&lt; ActiveEntityState &gt; &amp;source, const std::shared_ptr&lt; channel::ProcessingSkill &gt; &amp;pSkill)</arglist>
    </member>
    <member kind="function" protection="private">
      <type>bool</type>
      <name>DCM</name>
      <anchorfile>classchannel_1_1SkillManager.html</anchorfile>
      <anchor>a24e99179d5d166133b2aacc5798229dc</anchor>
      <arglist>(const std::shared_ptr&lt; objects::ActivatedAbility &gt; &amp;activated, const std::shared_ptr&lt; SkillExecutionContext &gt; &amp;ctx, const std::shared_ptr&lt; ChannelClientConnection &gt; &amp;client)</arglist>
    </member>
    <member kind="function" protection="private">
      <type>bool</type>
      <name>EquipItem</name>
      <anchorfile>classchannel_1_1SkillManager.html</anchorfile>
      <anchor>a82e4b8e87ecb3562ea5b0e7ab7b5fa6c</anchor>
      <arglist>(const std::shared_ptr&lt; objects::ActivatedAbility &gt; &amp;activated, const std::shared_ptr&lt; SkillExecutionContext &gt; &amp;ctx, const std::shared_ptr&lt; ChannelClientConnection &gt; &amp;client)</arglist>
    </member>
    <member kind="function" protection="private">
      <type>bool</type>
      <name>EvaluateTokuseiSkillCondition</name>
      <anchorfile>classchannel_1_1SkillManager.html</anchorfile>
      <anchor>ae13231d43f2dd7c3c4436f6efe0e3dd0</anchor>
      <arglist>(const std::shared_ptr&lt; ActiveEntityState &gt; &amp;eState, const std::shared_ptr&lt; objects::TokuseiSkillCondition &gt; &amp;condition, const std::shared_ptr&lt; channel::ProcessingSkill &gt; &amp;pSkill, const std::shared_ptr&lt; ActiveEntityState &gt; &amp;otherState)</arglist>
    </member>
    <member kind="function" protection="private">
      <type>bool</type>
      <name>ExecuteNormalSkill</name>
      <anchorfile>classchannel_1_1SkillManager.html</anchorfile>
      <anchor>ad83dca0d9d2173bc3a91984c086a6aa9</anchor>
      <arglist>(const std::shared_ptr&lt; ChannelClientConnection &gt; client, std::shared_ptr&lt; objects::ActivatedAbility &gt; activated, const std::shared_ptr&lt; SkillExecutionContext &gt; &amp;ctx)</arglist>
    </member>
    <member kind="function" protection="private">
      <type>bool</type>
      <name>ExecuteSkill</name>
      <anchorfile>classchannel_1_1SkillManager.html</anchorfile>
      <anchor>ae2f9f68e7cd89eaed990beb2f940b2ac</anchor>
      <arglist>(std::shared_ptr&lt; ActiveEntityState &gt; source, std::shared_ptr&lt; objects::ActivatedAbility &gt; activated, const std::shared_ptr&lt; ChannelClientConnection &gt; client, std::shared_ptr&lt; SkillExecutionContext &gt; ctx)</arglist>
    </member>
    <member kind="function" protection="private">
      <type>bool</type>
      <name>FamiliarityUp</name>
      <anchorfile>classchannel_1_1SkillManager.html</anchorfile>
      <anchor>ada31a2de4821971ea2e6e0291a3cdffb</anchor>
      <arglist>(const std::shared_ptr&lt; objects::ActivatedAbility &gt; &amp;activated, const std::shared_ptr&lt; SkillExecutionContext &gt; &amp;ctx, const std::shared_ptr&lt; ChannelClientConnection &gt; &amp;client)</arglist>
    </member>
    <member kind="function" protection="private">
      <type>bool</type>
      <name>FamiliarityUpItem</name>
      <anchorfile>classchannel_1_1SkillManager.html</anchorfile>
      <anchor>ab6635d91d56e107d100ed7f656b4d7ed</anchor>
      <arglist>(const std::shared_ptr&lt; objects::ActivatedAbility &gt; &amp;activated, const std::shared_ptr&lt; SkillExecutionContext &gt; &amp;ctx, const std::shared_ptr&lt; ChannelClientConnection &gt; &amp;client)</arglist>
    </member>
    <member kind="function" protection="private">
      <type>void</type>
      <name>FinalizeSkillExecution</name>
      <anchorfile>classchannel_1_1SkillManager.html</anchorfile>
      <anchor>a35cdf82c2ccf61231a35e10da83285f4</anchor>
      <arglist>(const std::shared_ptr&lt; ChannelClientConnection &gt; client, const std::shared_ptr&lt; SkillExecutionContext &gt; &amp;ctx, std::shared_ptr&lt; objects::ActivatedAbility &gt; activated)</arglist>
    </member>
    <member kind="function" protection="private">
      <type>bool</type>
      <name>ForgetAllExpertiseSkills</name>
      <anchorfile>classchannel_1_1SkillManager.html</anchorfile>
      <anchor>ae8b4d9e490420bbcfe99de421ecde9d0</anchor>
      <arglist>(const std::shared_ptr&lt; objects::ActivatedAbility &gt; &amp;activated, const std::shared_ptr&lt; SkillExecutionContext &gt; &amp;ctx, const std::shared_ptr&lt; ChannelClientConnection &gt; &amp;client)</arglist>
    </member>
    <member kind="function" protection="private">
      <type>std::shared_ptr&lt; objects::ActivatedAbility &gt;</type>
      <name>GetActivation</name>
      <anchorfile>classchannel_1_1SkillManager.html</anchorfile>
      <anchor>a3f5abb1b448536fe609289171991105b</anchor>
      <arglist>(const std::shared_ptr&lt; ActiveEntityState &gt; source, int8_t activationID) const </arglist>
    </member>
    <member kind="function" protection="private">
      <type>std::shared_ptr&lt; objects::CalculatedEntityState &gt;</type>
      <name>GetCalculatedState</name>
      <anchorfile>classchannel_1_1SkillManager.html</anchorfile>
      <anchor>a205507530e58c4473bdd21b755284043</anchor>
      <arglist>(const std::shared_ptr&lt; ActiveEntityState &gt; &amp;eState, const std::shared_ptr&lt; channel::ProcessingSkill &gt; &amp;pSkill, bool isTarget, const std::shared_ptr&lt; ActiveEntityState &gt; &amp;otherState)</arglist>
    </member>
    <member kind="function" protection="private">
      <type>uint8_t</type>
      <name>GetCritLevel</name>
      <anchorfile>classchannel_1_1SkillManager.html</anchorfile>
      <anchor>a1ab4c19d71557019668265f593f0158e</anchor>
      <arglist>(const std::shared_ptr&lt; ActiveEntityState &gt; &amp;source, SkillTargetResult &amp;target, const std::shared_ptr&lt; channel::ProcessingSkill &gt; &amp;pSkill)</arglist>
    </member>
    <member kind="function" protection="private">
      <type>uint32_t</type>
      <name>GetDemonPresent</name>
      <anchorfile>classchannel_1_1SkillManager.html</anchorfile>
      <anchor>a7570ec5ad790aa1d89ca83a7eac86043</anchor>
      <arglist>(uint32_t demonType, int8_t level, uint16_t familiarity, int8_t &amp;rarity) const </arglist>
    </member>
    <member kind="function" protection="private">
      <type>std::list&lt; std::shared_ptr&lt; objects::ItemDrop &gt; &gt;</type>
      <name>GetItemDrops</name>
      <anchorfile>classchannel_1_1SkillManager.html</anchorfile>
      <anchor>afaae856431c1f2afae9f2515d3d6cd8e</anchor>
      <arglist>(uint32_t enemyType, const std::shared_ptr&lt; objects::Spawn &gt; &amp;spawn, bool giftMode=false) const </arglist>
    </member>
    <member kind="function" protection="private">
      <type>uint8_t</type>
      <name>GetNRAResult</name>
      <anchorfile>classchannel_1_1SkillManager.html</anchorfile>
      <anchor>a8e988fdbdbd0fce581135fad3e5eef94</anchor>
      <arglist>(SkillTargetResult &amp;target, ProcessingSkill &amp;skill, uint8_t effectiveAffinity, bool effectiveOnly=false)</arglist>
    </member>
    <member kind="function" protection="private">
      <type>std::shared_ptr&lt; ProcessingSkill &gt;</type>
      <name>GetProcessingSkill</name>
      <anchorfile>classchannel_1_1SkillManager.html</anchorfile>
      <anchor>a72a402fb4d3fe586ecd005b2cb1ef92e</anchor>
      <arglist>(std::shared_ptr&lt; objects::ActivatedAbility &gt; activated, std::shared_ptr&lt; SkillExecutionContext &gt; ctx, const std::shared_ptr&lt; ChannelClientConnection &gt; client)</arglist>
    </member>
    <member kind="function" protection="private">
      <type>SkillTargetResult *</type>
      <name>GetSelfTarget</name>
      <anchorfile>classchannel_1_1SkillManager.html</anchorfile>
      <anchor>a04fe8f600d70632bb75e18044cba65ea</anchor>
      <arglist>(const std::shared_ptr&lt; ActiveEntityState &gt; &amp;source, std::list&lt; SkillTargetResult &gt; &amp;targets, bool indirectDefault)</arglist>
    </member>
    <member kind="function" protection="private">
      <type>void</type>
      <name>GiveDemonPresent</name>
      <anchorfile>classchannel_1_1SkillManager.html</anchorfile>
      <anchor>a4c98b266d085e01ee87e614e003aa68b</anchor>
      <arglist>(const std::shared_ptr&lt; ChannelClientConnection &gt; &amp;client, uint32_t demonType, uint32_t itemType, int8_t rarity, uint32_t skillID)</arglist>
    </member>
    <member kind="function" protection="private">
      <type>void</type>
      <name>HandleCounter</name>
      <anchorfile>classchannel_1_1SkillManager.html</anchorfile>
      <anchor>a3e634684afe9c9c04108aad3ea366ab1</anchor>
      <arglist>(const std::shared_ptr&lt; ActiveEntityState &gt; &amp;source, SkillTargetResult &amp;target, const std::shared_ptr&lt; channel::ProcessingSkill &gt; &amp;pSkill)</arglist>
    </member>
    <member kind="function" protection="private">
      <type>void</type>
      <name>HandleDodge</name>
      <anchorfile>classchannel_1_1SkillManager.html</anchorfile>
      <anchor>a077634b6207f66fbfb2cb9c058fd8466</anchor>
      <arglist>(const std::shared_ptr&lt; ActiveEntityState &gt; &amp;source, SkillTargetResult &amp;target, const std::shared_ptr&lt; channel::ProcessingSkill &gt; &amp;pSkill)</arglist>
    </member>
    <member kind="function" protection="private">
      <type>void</type>
      <name>HandleDurabilityDamage</name>
      <anchorfile>classchannel_1_1SkillManager.html</anchorfile>
      <anchor>aaf23effc63e399aba3448249ed01879e</anchor>
      <arglist>(const std::shared_ptr&lt; ActiveEntityState &gt; entity, const std::shared_ptr&lt; channel::ProcessingSkill &gt; &amp;pSkill)</arglist>
    </member>
    <member kind="function" protection="private">
      <type>void</type>
      <name>HandleEncounterDefeat</name>
      <anchorfile>classchannel_1_1SkillManager.html</anchorfile>
      <anchor>a732600b82e6954ea775b3d9674847fb2</anchor>
      <arglist>(const std::shared_ptr&lt; ActiveEntityState &gt; source, const std::shared_ptr&lt; Zone &gt; &amp;zone, const std::unordered_map&lt; uint32_t, uint32_t &gt; &amp;encounterGroups)</arglist>
    </member>
    <member kind="function" protection="private">
      <type>void</type>
      <name>HandleGuard</name>
      <anchorfile>classchannel_1_1SkillManager.html</anchorfile>
      <anchor>a9f6b03f1ad929fa8dd05db57d71aaabb</anchor>
      <arglist>(const std::shared_ptr&lt; ActiveEntityState &gt; &amp;source, SkillTargetResult &amp;target, const std::shared_ptr&lt; channel::ProcessingSkill &gt; &amp;pSkill)</arglist>
    </member>
    <member kind="function" protection="private">
      <type>void</type>
      <name>HandleKills</name>
      <anchorfile>classchannel_1_1SkillManager.html</anchorfile>
      <anchor>a7374c01e11679c88caf69bf08a02661a</anchor>
      <arglist>(const std::shared_ptr&lt; ActiveEntityState &gt; source, const std::shared_ptr&lt; Zone &gt; &amp;zone, const std::set&lt; std::shared_ptr&lt; ActiveEntityState &gt;&gt; killed)</arglist>
    </member>
    <member kind="function" protection="private">
      <type>void</type>
      <name>HandleKillXP</name>
      <anchorfile>classchannel_1_1SkillManager.html</anchorfile>
      <anchor>a83a76b9c3a61f7424e56bf65cfedc41d</anchor>
      <arglist>(const std::shared_ptr&lt; objects::Enemy &gt; &amp;enemy, const std::shared_ptr&lt; Zone &gt; &amp;zone)</arglist>
    </member>
    <member kind="function" protection="private">
      <type>void</type>
      <name>HandleNegotiations</name>
      <anchorfile>classchannel_1_1SkillManager.html</anchorfile>
      <anchor>a90e7d639038c43a6cd73449536ef765c</anchor>
      <arglist>(const std::shared_ptr&lt; ActiveEntityState &gt; source, const std::shared_ptr&lt; Zone &gt; &amp;zone, const std::list&lt; std::pair&lt; std::shared_ptr&lt; ActiveEntityState &gt;, uint8_t &gt;&gt; talkDone)</arglist>
    </member>
    <member kind="function" protection="private">
      <type>void</type>
      <name>HandleSkillLearning</name>
      <anchorfile>classchannel_1_1SkillManager.html</anchorfile>
      <anchor>af72207cc604e0f684b152050a866f35b</anchor>
      <arglist>(const std::shared_ptr&lt; ActiveEntityState &gt; entity, const std::shared_ptr&lt; channel::ProcessingSkill &gt; &amp;pSkill)</arglist>
    </member>
    <member kind="function" protection="private">
      <type>std::set&lt; uint32_t &gt;</type>
      <name>HandleStatusEffects</name>
      <anchorfile>classchannel_1_1SkillManager.html</anchorfile>
      <anchor>acc2298cf7d01d37dab6684aa57da644d</anchor>
      <arglist>(const std::shared_ptr&lt; ActiveEntityState &gt; &amp;source, SkillTargetResult &amp;target, const std::shared_ptr&lt; channel::ProcessingSkill &gt; &amp;pSkill)</arglist>
    </member>
    <member kind="function" protection="private">
      <type>bool</type>
      <name>Mooch</name>
      <anchorfile>classchannel_1_1SkillManager.html</anchorfile>
      <anchor>a4aa0cd6330f710fb2f817b25b5d7d59f</anchor>
      <arglist>(const std::shared_ptr&lt; objects::ActivatedAbility &gt; &amp;activated, const std::shared_ptr&lt; SkillExecutionContext &gt; &amp;ctx, const std::shared_ptr&lt; ChannelClientConnection &gt; &amp;client)</arglist>
    </member>
    <member kind="function" protection="private">
      <type>bool</type>
      <name>ProcessSkillResult</name>
      <anchorfile>classchannel_1_1SkillManager.html</anchorfile>
      <anchor>a7f845da81ecdfccf216904c6b8cebef2</anchor>
      <arglist>(std::shared_ptr&lt; objects::ActivatedAbility &gt; activated, std::shared_ptr&lt; SkillExecutionContext &gt; ctx)</arglist>
    </member>
    <member kind="function" protection="private">
      <type>void</type>
      <name>ProcessSkillResultFinal</name>
      <anchorfile>classchannel_1_1SkillManager.html</anchorfile>
      <anchor>a2b65f280ef457cb4e48cff764eabde28</anchor>
      <arglist>(const std::shared_ptr&lt; channel::ProcessingSkill &gt; &amp;pSkill)</arglist>
    </member>
    <member kind="function" protection="private">
      <type>bool</type>
      <name>Respec</name>
      <anchorfile>classchannel_1_1SkillManager.html</anchorfile>
      <anchor>a78efe60619a5e8037dc07568310531fc</anchor>
      <arglist>(const std::shared_ptr&lt; objects::ActivatedAbility &gt; &amp;activated, const std::shared_ptr&lt; SkillExecutionContext &gt; &amp;ctx, const std::shared_ptr&lt; ChannelClientConnection &gt; &amp;client)</arglist>
    </member>
    <member kind="function" protection="private">
      <type>bool</type>
      <name>Rest</name>
      <anchorfile>classchannel_1_1SkillManager.html</anchorfile>
      <anchor>a796f2a2fad4b3ff44b90ba310f7c44de</anchor>
      <arglist>(const std::shared_ptr&lt; objects::ActivatedAbility &gt; &amp;activated, const std::shared_ptr&lt; SkillExecutionContext &gt; &amp;ctx, const std::shared_ptr&lt; ChannelClientConnection &gt; &amp;client)</arglist>
    </member>
    <member kind="function" protection="private">
      <type>void</type>
      <name>ScheduleFreeLoot</name>
      <anchorfile>classchannel_1_1SkillManager.html</anchorfile>
      <anchor>ae2265bff94c512e5aca42e471f25aba7</anchor>
      <arglist>(uint64_t time, const std::shared_ptr&lt; Zone &gt; &amp;zone, const std::list&lt; int32_t &gt; &amp;lootEntityIDs, const std::set&lt; int32_t &gt; &amp;worldCIDs)</arglist>
    </member>
    <member kind="function" protection="private">
      <type>void</type>
      <name>SendActivateSkill</name>
      <anchorfile>classchannel_1_1SkillManager.html</anchorfile>
      <anchor>ad40d02dd87f21936461fd387ac6101f2</anchor>
      <arglist>(std::shared_ptr&lt; objects::ActivatedAbility &gt; activated)</arglist>
    </member>
    <member kind="function" protection="private">
      <type>void</type>
      <name>SendCompleteSkill</name>
      <anchorfile>classchannel_1_1SkillManager.html</anchorfile>
      <anchor>a32a7b8829f081e25527627697083eaa3</anchor>
      <arglist>(std::shared_ptr&lt; objects::ActivatedAbility &gt; activated, uint8_t mode)</arglist>
    </member>
    <member kind="function" protection="private">
      <type>void</type>
      <name>SendExecuteSkill</name>
      <anchorfile>classchannel_1_1SkillManager.html</anchorfile>
      <anchor>af5a4bd7fc3930ec8518140247e59902b</anchor>
      <arglist>(std::shared_ptr&lt; objects::ActivatedAbility &gt; activated)</arglist>
    </member>
    <member kind="function" protection="private">
      <type>void</type>
      <name>SendExecuteSkillInstant</name>
      <anchorfile>classchannel_1_1SkillManager.html</anchorfile>
      <anchor>adbbd0ab84a9e5e0ced5edc683c2cdf7e</anchor>
      <arglist>(std::shared_ptr&lt; objects::ActivatedAbility &gt; activated, uint8_t errorCode)</arglist>
    </member>
    <member kind="function" protection="private">
      <type>void</type>
      <name>SendFailure</name>
      <anchorfile>classchannel_1_1SkillManager.html</anchorfile>
      <anchor>ab906667d825106b390484354b722e687</anchor>
      <arglist>(std::shared_ptr&lt; objects::ActivatedAbility &gt; activated, const std::shared_ptr&lt; ChannelClientConnection &gt; client, uint8_t errorCode=0)</arglist>
    </member>
    <member kind="function" protection="private">
      <type>bool</type>
      <name>SetNRA</name>
      <anchorfile>classchannel_1_1SkillManager.html</anchorfile>
      <anchor>a281c47a9f7000cc0085c96d3f8fada16</anchor>
      <arglist>(SkillTargetResult &amp;target, ProcessingSkill &amp;skill)</arglist>
    </member>
    <member kind="function" protection="private">
      <type>bool</type>
      <name>SetSkillCompleteState</name>
      <anchorfile>classchannel_1_1SkillManager.html</anchorfile>
      <anchor>a9843a9ff501a5e0daf6c0a78b2e0af2c</anchor>
      <arglist>(const std::shared_ptr&lt; channel::ProcessingSkill &gt; &amp;pSkill, bool executed)</arglist>
    </member>
    <member kind="function" protection="private">
      <type>bool</type>
      <name>SpecialSkill</name>
      <anchorfile>classchannel_1_1SkillManager.html</anchorfile>
      <anchor>ab9fe7a94df5c578e40d84f668c59e921</anchor>
      <arglist>(const std::shared_ptr&lt; objects::ActivatedAbility &gt; &amp;activated, const std::shared_ptr&lt; SkillExecutionContext &gt; &amp;ctx, const std::shared_ptr&lt; ChannelClientConnection &gt; &amp;client)</arglist>
    </member>
    <member kind="function" protection="private">
      <type>bool</type>
      <name>StoreDemon</name>
      <anchorfile>classchannel_1_1SkillManager.html</anchorfile>
      <anchor>abeec42721000b8158aa331fe80196cda</anchor>
      <arglist>(const std::shared_ptr&lt; objects::ActivatedAbility &gt; &amp;activated, const std::shared_ptr&lt; SkillExecutionContext &gt; &amp;ctx, const std::shared_ptr&lt; ChannelClientConnection &gt; &amp;client)</arglist>
    </member>
    <member kind="function" protection="private">
      <type>bool</type>
      <name>SummonDemon</name>
      <anchorfile>classchannel_1_1SkillManager.html</anchorfile>
      <anchor>aef8a9a1f5fa80e589762fbe19905c93f</anchor>
      <arglist>(const std::shared_ptr&lt; objects::ActivatedAbility &gt; &amp;activated, const std::shared_ptr&lt; SkillExecutionContext &gt; &amp;ctx, const std::shared_ptr&lt; ChannelClientConnection &gt; &amp;client)</arglist>
    </member>
    <member kind="function" protection="private">
      <type>bool</type>
      <name>ToggleSwitchSkill</name>
      <anchorfile>classchannel_1_1SkillManager.html</anchorfile>
      <anchor>a27adf997165cc5759acbcffb42b9b816</anchor>
      <arglist>(const std::shared_ptr&lt; ChannelClientConnection &gt; client, std::shared_ptr&lt; objects::ActivatedAbility &gt; activated, const std::shared_ptr&lt; SkillExecutionContext &gt; &amp;ctx)</arglist>
    </member>
    <member kind="function" protection="private">
      <type>bool</type>
      <name>Traesto</name>
      <anchorfile>classchannel_1_1SkillManager.html</anchorfile>
      <anchor>acc3034054f5b2ebeebbd886e17e28bc3</anchor>
      <arglist>(const std::shared_ptr&lt; objects::ActivatedAbility &gt; &amp;activated, const std::shared_ptr&lt; SkillExecutionContext &gt; &amp;ctx, const std::shared_ptr&lt; ChannelClientConnection &gt; &amp;client)</arglist>
    </member>
    <member kind="function" protection="private">
      <type>bool</type>
      <name>XPUp</name>
      <anchorfile>classchannel_1_1SkillManager.html</anchorfile>
      <anchor>a1efa207e9103db0f92d12e1f57349539</anchor>
      <arglist>(const std::shared_ptr&lt; objects::ActivatedAbility &gt; &amp;activated, const std::shared_ptr&lt; SkillExecutionContext &gt; &amp;ctx, const std::shared_ptr&lt; ChannelClientConnection &gt; &amp;client)</arglist>
    </member>
    <member kind="variable" protection="private">
      <type>std::weak_ptr&lt; ChannelServer &gt;</type>
      <name>mServer</name>
      <anchorfile>classchannel_1_1SkillManager.html</anchorfile>
      <anchor>aae9059fe624bfb436d4a1e48ba427c03</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>std::unordered_map&lt; uint16_t, std::function&lt; bool(SkillManager &amp;, const std::shared_ptr&lt; objects::ActivatedAbility &gt; &amp;, const std::shared_ptr&lt; SkillExecutionContext &gt; &amp;, const std::shared_ptr&lt; ChannelClientConnection &gt; &amp;)&gt; &gt;</type>
      <name>mSkillFunctions</name>
      <anchorfile>classchannel_1_1SkillManager.html</anchorfile>
      <anchor>a296dd91eaf79437f1e957292833ab3ca</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>channel::SkillTargetResult</name>
    <filename>classchannel_1_1SkillTargetResult.html</filename>
    <member kind="variable">
      <type>AddStatusEffectMap</type>
      <name>AddedStatuses</name>
      <anchorfile>classchannel_1_1SkillTargetResult.html</anchorfile>
      <anchor>a266526578621b1f59d37addf1382fc0d</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int32_t</type>
      <name>AilmentDamage</name>
      <anchorfile>classchannel_1_1SkillTargetResult.html</anchorfile>
      <anchor>ad82a5567184687ad02dda519fb77ed3b</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>uint64_t</type>
      <name>AilmentDamageTime</name>
      <anchorfile>classchannel_1_1SkillTargetResult.html</anchorfile>
      <anchor>a3b47197c421c9ca2c1050552b8778d58</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>uint8_t</type>
      <name>AilmentDamageType</name>
      <anchorfile>classchannel_1_1SkillTargetResult.html</anchorfile>
      <anchor>acc60468c59e60c5277a31b5582465abf</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>std::shared_ptr&lt; objects::CalculatedEntityState &gt;</type>
      <name>CalcState</name>
      <anchorfile>classchannel_1_1SkillTargetResult.html</anchorfile>
      <anchor>a5cf23453870be39eb2874cc897a54ae5</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>std::set&lt; uint32_t &gt;</type>
      <name>CancelledStatuses</name>
      <anchorfile>classchannel_1_1SkillTargetResult.html</anchorfile>
      <anchor>ac74a3c1ea2dc8455ffbc296075713330</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>bool</type>
      <name>CanHitstun</name>
      <anchorfile>classchannel_1_1SkillTargetResult.html</anchorfile>
      <anchor>aad1366d84845aec866058e95e47e87bc</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>bool</type>
      <name>CanKnockback</name>
      <anchorfile>classchannel_1_1SkillTargetResult.html</anchorfile>
      <anchor>af2e68d797cfedb089d62cf10e451ee9e</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int32_t</type>
      <name>Damage1</name>
      <anchorfile>classchannel_1_1SkillTargetResult.html</anchorfile>
      <anchor>a9c5073d360da3c19c9ac7a7be229dcaa</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>uint8_t</type>
      <name>Damage1Type</name>
      <anchorfile>classchannel_1_1SkillTargetResult.html</anchorfile>
      <anchor>a4db2f521a0ed3ec0bcdb90e19089fe06</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int32_t</type>
      <name>Damage2</name>
      <anchorfile>classchannel_1_1SkillTargetResult.html</anchorfile>
      <anchor>aeab6da0d642505414944311d57a41042</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>uint8_t</type>
      <name>Damage2Type</name>
      <anchorfile>classchannel_1_1SkillTargetResult.html</anchorfile>
      <anchor>ae158fbf36dce18df9034429ba5f61d00</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>std::shared_ptr&lt; ActiveEntityState &gt;</type>
      <name>EntityState</name>
      <anchorfile>classchannel_1_1SkillTargetResult.html</anchorfile>
      <anchor>a095c60f0206ac78b9fd8abd1e0f79c66</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>uint16_t</type>
      <name>Flags1</name>
      <anchorfile>classchannel_1_1SkillTargetResult.html</anchorfile>
      <anchor>abc8e6a942c03d3c376eb5c212882fec5</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>uint16_t</type>
      <name>Flags2</name>
      <anchorfile>classchannel_1_1SkillTargetResult.html</anchorfile>
      <anchor>ad32cda1161d54000f9fcae046f2f7f3e</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>uint16_t</type>
      <name>GuardModifier</name>
      <anchorfile>classchannel_1_1SkillTargetResult.html</anchorfile>
      <anchor>af8443bca5941379b78dfe7aa2bfd8572</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>bool</type>
      <name>HitAbsorb</name>
      <anchorfile>classchannel_1_1SkillTargetResult.html</anchorfile>
      <anchor>ac0f10199c261f7c71b62cc09243e97b4</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>bool</type>
      <name>HitAvoided</name>
      <anchorfile>classchannel_1_1SkillTargetResult.html</anchorfile>
      <anchor>a77f0f0de64872a1193357ee921c12a7d</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>uint8_t</type>
      <name>HitNull</name>
      <anchorfile>classchannel_1_1SkillTargetResult.html</anchorfile>
      <anchor>a4044d4e1c6e1929a5a5f22a1def5ff74</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>uint8_t</type>
      <name>HitReflect</name>
      <anchorfile>classchannel_1_1SkillTargetResult.html</anchorfile>
      <anchor>a75ad57cfe5c10de2e225163126267beb</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>bool</type>
      <name>IndirectTarget</name>
      <anchorfile>classchannel_1_1SkillTargetResult.html</anchorfile>
      <anchor>a75eff9c5addb0f076d0a54c06fc7c796</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>bool</type>
      <name>PrimaryTarget</name>
      <anchorfile>classchannel_1_1SkillTargetResult.html</anchorfile>
      <anchor>ac019e32b49faf520e0328298c3f9d118</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>uint8_t</type>
      <name>PursuitAffinity</name>
      <anchorfile>classchannel_1_1SkillTargetResult.html</anchorfile>
      <anchor>aef914e70365969b43b910500769c5e75</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int32_t</type>
      <name>PursuitDamage</name>
      <anchorfile>classchannel_1_1SkillTargetResult.html</anchorfile>
      <anchor>a67e00002bba8bcc09df55025626dc8f3</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>uint8_t</type>
      <name>TalkFlags</name>
      <anchorfile>classchannel_1_1SkillTargetResult.html</anchorfile>
      <anchor>a780759089ecc3aba2af1e827b76499e9</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int32_t</type>
      <name>TechnicalDamage</name>
      <anchorfile>classchannel_1_1SkillTargetResult.html</anchorfile>
      <anchor>a239242f5043ef3489ac7306bd8d6d21d</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>channel::TokuseiManager</name>
    <filename>classchannel_1_1TokuseiManager.html</filename>
    <member kind="function">
      <type></type>
      <name>TokuseiManager</name>
      <anchorfile>classchannel_1_1TokuseiManager.html</anchorfile>
      <anchor>ad3722fead8ace88f16896e03f2f6b915</anchor>
      <arglist>(const std::weak_ptr&lt; ChannelServer &gt; &amp;server)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~TokuseiManager</name>
      <anchorfile>classchannel_1_1TokuseiManager.html</anchorfile>
      <anchor>acbbf720e9fe5abf534bd88309124a6fb</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>EvaluateTokuseiCondition</name>
      <anchorfile>classchannel_1_1TokuseiManager.html</anchorfile>
      <anchor>a23327a0901395a358f76e5a64494e162</anchor>
      <arglist>(const std::shared_ptr&lt; ActiveEntityState &gt; &amp;eState, int32_t tokuseiID, const std::shared_ptr&lt; objects::TokuseiCondition &gt; &amp;condition)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>EvaluateTokuseiConditions</name>
      <anchorfile>classchannel_1_1TokuseiManager.html</anchorfile>
      <anchor>a3a949555a4ff11e1f4793eee3e99f6d9</anchor>
      <arglist>(const std::shared_ptr&lt; ActiveEntityState &gt; &amp;eState, const std::shared_ptr&lt; objects::Tokusei &gt; &amp;tokusei)</arglist>
    </member>
    <member kind="function">
      <type>std::list&lt; std::shared_ptr&lt; ActiveEntityState &gt; &gt;</type>
      <name>GetAllTokuseiEntities</name>
      <anchorfile>classchannel_1_1TokuseiManager.html</anchorfile>
      <anchor>abc66b5512c37386c2866d4094b0557de</anchor>
      <arglist>(const std::shared_ptr&lt; ActiveEntityState &gt; &amp;eState)</arglist>
    </member>
    <member kind="function">
      <type>std::unordered_map&lt; int32_t, double &gt;</type>
      <name>GetAspectMap</name>
      <anchorfile>classchannel_1_1TokuseiManager.html</anchorfile>
      <anchor>aab01f59a69050eac43084892c145f2d6</anchor>
      <arglist>(const std::shared_ptr&lt; ActiveEntityState &gt; &amp;eState, TokuseiAspectType type, std::shared_ptr&lt; objects::CalculatedEntityState &gt; calcState=nullptr)</arglist>
    </member>
    <member kind="function">
      <type>std::unordered_map&lt; int32_t, double &gt;</type>
      <name>GetAspectMap</name>
      <anchorfile>classchannel_1_1TokuseiManager.html</anchorfile>
      <anchor>a4bd95ef0a0b46f91286fc3cc42eb8e23</anchor>
      <arglist>(const std::shared_ptr&lt; ActiveEntityState &gt; &amp;eState, TokuseiAspectType type, std::set&lt; int32_t &gt; validKeys, std::shared_ptr&lt; objects::CalculatedEntityState &gt; calcState=nullptr)</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>GetAspectSum</name>
      <anchorfile>classchannel_1_1TokuseiManager.html</anchorfile>
      <anchor>a7cd7b53af3902f6097897aaafe0c50b7</anchor>
      <arglist>(const std::shared_ptr&lt; ActiveEntityState &gt; &amp;eState, TokuseiAspectType type, std::shared_ptr&lt; objects::CalculatedEntityState &gt; calcState=nullptr)</arglist>
    </member>
    <member kind="function">
      <type>std::list&lt; double &gt;</type>
      <name>GetAspectValueList</name>
      <anchorfile>classchannel_1_1TokuseiManager.html</anchorfile>
      <anchor>a9b1983db37fd17107b6213c2c9d871c3</anchor>
      <arglist>(const std::shared_ptr&lt; ActiveEntityState &gt; &amp;eState, TokuseiAspectType type, std::shared_ptr&lt; objects::CalculatedEntityState &gt; calcState=nullptr)</arglist>
    </member>
    <member kind="function">
      <type>std::list&lt; std::shared_ptr&lt; objects::Tokusei &gt; &gt;</type>
      <name>GetDirectTokusei</name>
      <anchorfile>classchannel_1_1TokuseiManager.html</anchorfile>
      <anchor>aeb687c04024c47e372bc56b400170d4d</anchor>
      <arglist>(const std::shared_ptr&lt; ActiveEntityState &gt; &amp;eState)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>Initialize</name>
      <anchorfile>classchannel_1_1TokuseiManager.html</anchorfile>
      <anchor>aada70d54d0772cafd8dba3ac12533109</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>RecalcTimedTokusei</name>
      <anchorfile>classchannel_1_1TokuseiManager.html</anchorfile>
      <anchor>a47e9d84fce009343c6e47bfa1e99860a</anchor>
      <arglist>(WorldClock &amp;clock)</arglist>
    </member>
    <member kind="function">
      <type>std::unordered_map&lt; int32_t, bool &gt;</type>
      <name>Recalculate</name>
      <anchorfile>classchannel_1_1TokuseiManager.html</anchorfile>
      <anchor>a1c9e173f4d851b9a84f821a8e763429e</anchor>
      <arglist>(const std::shared_ptr&lt; ActiveEntityState &gt; &amp;eState, std::set&lt; TokuseiConditionType &gt; changes)</arglist>
    </member>
    <member kind="function">
      <type>std::unordered_map&lt; int32_t, bool &gt;</type>
      <name>Recalculate</name>
      <anchorfile>classchannel_1_1TokuseiManager.html</anchorfile>
      <anchor>ad05afabd3725bc6e928cd8a61619dbbb</anchor>
      <arglist>(const std::shared_ptr&lt; ActiveEntityState &gt; &amp;eState, bool recalcStats=false, std::set&lt; int32_t &gt; ignoreStatRecalc={})</arglist>
    </member>
    <member kind="function">
      <type>std::unordered_map&lt; int32_t, bool &gt;</type>
      <name>Recalculate</name>
      <anchorfile>classchannel_1_1TokuseiManager.html</anchorfile>
      <anchor>a1f10d12a2a677d9f4d2b7dc205b23615</anchor>
      <arglist>(const std::list&lt; std::shared_ptr&lt; ActiveEntityState &gt;&gt; &amp;entities, bool recalcStats=false, std::set&lt; int32_t &gt; ignoreStatRecalc={})</arglist>
    </member>
    <member kind="function">
      <type>std::unordered_map&lt; int32_t, bool &gt;</type>
      <name>RecalculateParty</name>
      <anchorfile>classchannel_1_1TokuseiManager.html</anchorfile>
      <anchor>ab6630e7bf27fc2afac5a02eebb48c119</anchor>
      <arglist>(const std::shared_ptr&lt; objects::Party &gt; &amp;party)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>RemoveTrackingEntities</name>
      <anchorfile>classchannel_1_1TokuseiManager.html</anchorfile>
      <anchor>a1ce689dbeee9a2c105646c8518330cb3</anchor>
      <arglist>(int32_t worldCID)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SendCostAdjustments</name>
      <anchorfile>classchannel_1_1TokuseiManager.html</anchorfile>
      <anchor>aa345290d80d883e3886b3c444755a052</anchor>
      <arglist>(int32_t entityID, const std::shared_ptr&lt; ChannelClientConnection &gt; &amp;client)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static double</type>
      <name>CalculateAttributeValue</name>
      <anchorfile>classchannel_1_1TokuseiManager.html</anchorfile>
      <anchor>ae06ae0d1257bd28fa5eb66009728095c</anchor>
      <arglist>(ActiveEntityState *eState, int32_t value, int32_t base, const std::shared_ptr&lt; objects::TokuseiAttributes &gt; &amp;attributes, std::shared_ptr&lt; objects::CalculatedEntityState &gt; calcState=nullptr)</arglist>
    </member>
    <member kind="function" protection="private">
      <type>bool</type>
      <name>BuildWorldClockTime</name>
      <anchorfile>classchannel_1_1TokuseiManager.html</anchorfile>
      <anchor>a31bebcd0724b5593924e14d25475d8aa</anchor>
      <arglist>(std::shared_ptr&lt; objects::TokuseiCondition &gt; condition, WorldClockTime &amp;time)</arglist>
    </member>
    <member kind="function" protection="private">
      <type>bool</type>
      <name>Compare</name>
      <anchorfile>classchannel_1_1TokuseiManager.html</anchorfile>
      <anchor>a9f0b4a86960239d85513197325cdd928</anchor>
      <arglist>(int32_t value, std::shared_ptr&lt; objects::TokuseiCondition &gt; condition, bool numericCompare) const </arglist>
    </member>
    <member kind="function" protection="private">
      <type>bool</type>
      <name>Compare</name>
      <anchorfile>classchannel_1_1TokuseiManager.html</anchorfile>
      <anchor>a17f5945180b270844f428aef257b840b</anchor>
      <arglist>(int32_t value1, int32_t value2, std::shared_ptr&lt; objects::TokuseiCondition &gt; condition, bool numericCompare) const </arglist>
    </member>
    <member kind="function" protection="private">
      <type>bool</type>
      <name>GatherTimedTokusei</name>
      <anchorfile>classchannel_1_1TokuseiManager.html</anchorfile>
      <anchor>aee4d1052bd7d26819cd12ea4af47b269</anchor>
      <arglist>(const std::shared_ptr&lt; objects::Tokusei &gt; &amp;tokusei)</arglist>
    </member>
    <member kind="function" protection="private">
      <type>void</type>
      <name>RecalcCostAdjustments</name>
      <anchorfile>classchannel_1_1TokuseiManager.html</anchorfile>
      <anchor>a3eeb554a52231f322546e9f1cc1391cc</anchor>
      <arglist>(const std::shared_ptr&lt; ActiveEntityState &gt; &amp;eState)</arglist>
    </member>
    <member kind="function" protection="private">
      <type>void</type>
      <name>SendCostAdjustments</name>
      <anchorfile>classchannel_1_1TokuseiManager.html</anchorfile>
      <anchor>ac439ed985d3b2f7dd56c6cf747f03db5</anchor>
      <arglist>(int32_t entityID, std::list&lt; std::shared_ptr&lt; objects::ClientCostAdjustment &gt;&gt; &amp;adjustments, const std::shared_ptr&lt; ChannelClientConnection &gt; &amp;client)</arglist>
    </member>
    <member kind="variable" protection="private">
      <type>std::set&lt; int32_t &gt;</type>
      <name>mCostAdjustmentTokusei</name>
      <anchorfile>classchannel_1_1TokuseiManager.html</anchorfile>
      <anchor>a2e0a38f7b6fd8df5ea83a5fdbc705a66</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>std::weak_ptr&lt; ChannelServer &gt;</type>
      <name>mServer</name>
      <anchorfile>classchannel_1_1TokuseiManager.html</anchorfile>
      <anchor>a62aae6e0d3befb067c6535fe8288f645</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>std::unordered_map&lt; uint32_t, std::set&lt; int32_t &gt; &gt;</type>
      <name>mStatusEffectTokusei</name>
      <anchorfile>classchannel_1_1TokuseiManager.html</anchorfile>
      <anchor>add39ba4ee9398e83852a2c0086e17846</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>std::unordered_map&lt; int32_t, bool &gt;</type>
      <name>mTimedTokusei</name>
      <anchorfile>classchannel_1_1TokuseiManager.html</anchorfile>
      <anchor>acd635fd66a363244f22469217774ead9</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>std::unordered_map&lt; int32_t, std::set&lt; int32_t &gt; &gt;</type>
      <name>mTimedTokuseiEntities</name>
      <anchorfile>classchannel_1_1TokuseiManager.html</anchorfile>
      <anchor>a77c4141f6f5163f7e1da9a86c2588544</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>std::mutex</type>
      <name>mTimeLock</name>
      <anchorfile>classchannel_1_1TokuseiManager.html</anchorfile>
      <anchor>a750c20ee1219bb6ee22c1549f1bddc9c</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>channel::WorldClock</name>
    <filename>classchannel_1_1WorldClock.html</filename>
    <base>channel::WorldClockTime</base>
    <member kind="function">
      <type></type>
      <name>WorldClock</name>
      <anchorfile>classchannel_1_1WorldClock.html</anchorfile>
      <anchor>ae10de7f4e495fc28210f848696ecf749</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>size_t</type>
      <name>Hash</name>
      <anchorfile>classchannel_1_1WorldClockTime.html</anchorfile>
      <anchor>a42835f4fc7a5488daf046895addc1138</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>IsSet</name>
      <anchorfile>classchannel_1_1WorldClockTime.html</anchorfile>
      <anchor>ac52fa00fa8a11f0514e6780db0bf34ba</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>operator&lt;</name>
      <anchorfile>classchannel_1_1WorldClockTime.html</anchorfile>
      <anchor>abee9d695230dd03bde003387be99df3f</anchor>
      <arglist>(const WorldClockTime &amp;other) const </arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>operator==</name>
      <anchorfile>classchannel_1_1WorldClockTime.html</anchorfile>
      <anchor>aa8dc34a6beea8454d0ebe8f2a70fd8fe</anchor>
      <arglist>(const WorldClockTime &amp;other) const </arglist>
    </member>
    <member kind="variable">
      <type>uint32_t</type>
      <name>CycleOffset</name>
      <anchorfile>classchannel_1_1WorldClock.html</anchorfile>
      <anchor>a97d14b9b985ea297a318e057e8e80ab2</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int8_t</type>
      <name>Day</name>
      <anchorfile>classchannel_1_1WorldClock.html</anchorfile>
      <anchor>a7fc5c2649361e753d28b93533c7cea13</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>uint32_t</type>
      <name>GameOffset</name>
      <anchorfile>classchannel_1_1WorldClock.html</anchorfile>
      <anchor>a7dd301bea30a8f2d41700e6d1fe05aa0</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int8_t</type>
      <name>Hour</name>
      <anchorfile>classchannel_1_1WorldClockTime.html</anchorfile>
      <anchor>a4b262239839473a30cebc3506e2c85f1</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int8_t</type>
      <name>Min</name>
      <anchorfile>classchannel_1_1WorldClockTime.html</anchorfile>
      <anchor>a1563faade9b26a5ccf9e6c4cb8cccfe7</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int8_t</type>
      <name>Month</name>
      <anchorfile>classchannel_1_1WorldClock.html</anchorfile>
      <anchor>a4ea9b33666c5adbf368793f0f48c27d6</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int8_t</type>
      <name>MoonPhase</name>
      <anchorfile>classchannel_1_1WorldClockTime.html</anchorfile>
      <anchor>a9d85889c98e94902dbc676b10ed5262e</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int8_t</type>
      <name>SystemHour</name>
      <anchorfile>classchannel_1_1WorldClockTime.html</anchorfile>
      <anchor>a85ead1632f8c52c929ceafc6638c8626</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int8_t</type>
      <name>SystemMin</name>
      <anchorfile>classchannel_1_1WorldClockTime.html</anchorfile>
      <anchor>a34715741fc3c2e93ecd3b61696a0b7a6</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int8_t</type>
      <name>SystemSec</name>
      <anchorfile>classchannel_1_1WorldClock.html</anchorfile>
      <anchor>ad4ef65238a26a773773b70fb1df61a86</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>uint32_t</type>
      <name>SystemTime</name>
      <anchorfile>classchannel_1_1WorldClock.html</anchorfile>
      <anchor>a518fb934fb18af8bd9ad9e3485142399</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int8_t</type>
      <name>WeekDay</name>
      <anchorfile>classchannel_1_1WorldClock.html</anchorfile>
      <anchor>a16761d1def70440ce76c40d83e499a2f</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>channel::WorldClockTime</name>
    <filename>classchannel_1_1WorldClockTime.html</filename>
    <member kind="function">
      <type></type>
      <name>WorldClockTime</name>
      <anchorfile>classchannel_1_1WorldClockTime.html</anchorfile>
      <anchor>a8a6a9bd8c0915fee0401f45da454366e</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>size_t</type>
      <name>Hash</name>
      <anchorfile>classchannel_1_1WorldClockTime.html</anchorfile>
      <anchor>a42835f4fc7a5488daf046895addc1138</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>IsSet</name>
      <anchorfile>classchannel_1_1WorldClockTime.html</anchorfile>
      <anchor>ac52fa00fa8a11f0514e6780db0bf34ba</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>operator&lt;</name>
      <anchorfile>classchannel_1_1WorldClockTime.html</anchorfile>
      <anchor>abee9d695230dd03bde003387be99df3f</anchor>
      <arglist>(const WorldClockTime &amp;other) const </arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>operator==</name>
      <anchorfile>classchannel_1_1WorldClockTime.html</anchorfile>
      <anchor>aa8dc34a6beea8454d0ebe8f2a70fd8fe</anchor>
      <arglist>(const WorldClockTime &amp;other) const </arglist>
    </member>
    <member kind="variable">
      <type>int8_t</type>
      <name>Hour</name>
      <anchorfile>classchannel_1_1WorldClockTime.html</anchorfile>
      <anchor>a4b262239839473a30cebc3506e2c85f1</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int8_t</type>
      <name>Min</name>
      <anchorfile>classchannel_1_1WorldClockTime.html</anchorfile>
      <anchor>a1563faade9b26a5ccf9e6c4cb8cccfe7</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int8_t</type>
      <name>MoonPhase</name>
      <anchorfile>classchannel_1_1WorldClockTime.html</anchorfile>
      <anchor>a9d85889c98e94902dbc676b10ed5262e</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int8_t</type>
      <name>SystemHour</name>
      <anchorfile>classchannel_1_1WorldClockTime.html</anchorfile>
      <anchor>a85ead1632f8c52c929ceafc6638c8626</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int8_t</type>
      <name>SystemMin</name>
      <anchorfile>classchannel_1_1WorldClockTime.html</anchorfile>
      <anchor>a34715741fc3c2e93ecd3b61696a0b7a6</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>channel::Zone</name>
    <filename>classchannel_1_1Zone.html</filename>
    <member kind="function">
      <type></type>
      <name>Zone</name>
      <anchorfile>classchannel_1_1Zone.html</anchorfile>
      <anchor>a37c9721c0d592a7a231f4e6dbae93277</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>Zone</name>
      <anchorfile>classchannel_1_1Zone.html</anchorfile>
      <anchor>a67e31e0bbb7036f61cfa15e6dcb511ba</anchor>
      <arglist>(uint32_t id, const std::shared_ptr&lt; objects::ServerZone &gt; &amp;definition)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>Zone</name>
      <anchorfile>classchannel_1_1Zone.html</anchorfile>
      <anchor>a936fe5a0545adb05ac115a9a5e778b7a</anchor>
      <arglist>(const Zone &amp;other)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~Zone</name>
      <anchorfile>classchannel_1_1Zone.html</anchorfile>
      <anchor>a562607cb5c4120a9316c5e967a5c610b</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>AddBazaar</name>
      <anchorfile>classchannel_1_1Zone.html</anchorfile>
      <anchor>a387b8f0ba50532d1fa8977effe9f480d</anchor>
      <arglist>(const std::shared_ptr&lt; BazaarState &gt; &amp;bazaar)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>AddConnection</name>
      <anchorfile>classchannel_1_1Zone.html</anchorfile>
      <anchor>ae8c0d247c38c4f7d05303c36057dbfb1</anchor>
      <arglist>(const std::shared_ptr&lt; ChannelClientConnection &gt; &amp;client)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>AddEnemy</name>
      <anchorfile>classchannel_1_1Zone.html</anchorfile>
      <anchor>aa07bd8a47c1360110f3b0c5b18d5c5fb</anchor>
      <arglist>(const std::shared_ptr&lt; EnemyState &gt; &amp;enemy)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>AddLootBox</name>
      <anchorfile>classchannel_1_1Zone.html</anchorfile>
      <anchor>a9ed0d764e7473c559ecb8705ea659716</anchor>
      <arglist>(const std::shared_ptr&lt; LootBoxState &gt; &amp;box, uint32_t bossGroupID=0)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>AddNPC</name>
      <anchorfile>classchannel_1_1Zone.html</anchorfile>
      <anchor>affd58a145aaad1a072bd63f1e47821fb</anchor>
      <arglist>(const std::shared_ptr&lt; NPCState &gt; &amp;npc)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>AddObject</name>
      <anchorfile>classchannel_1_1Zone.html</anchorfile>
      <anchor>a338b2ee7a60040af7c6b3943ce56d035</anchor>
      <arglist>(const std::shared_ptr&lt; ServerObjectState &gt; &amp;object)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>AddPlasma</name>
      <anchorfile>classchannel_1_1Zone.html</anchorfile>
      <anchor>a13f870b0f8ec68cfa54aa07384154d57</anchor>
      <arglist>(const std::shared_ptr&lt; PlasmaState &gt; &amp;plasma)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>ClaimBossBox</name>
      <anchorfile>classchannel_1_1Zone.html</anchorfile>
      <anchor>a0ecab3536d75752836da91dacddbeecf</anchor>
      <arglist>(int32_t id, int32_t looterID)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>Cleanup</name>
      <anchorfile>classchannel_1_1Zone.html</anchorfile>
      <anchor>acff437d00dcc3c12d220abc645848a45</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>CreateEncounter</name>
      <anchorfile>classchannel_1_1Zone.html</anchorfile>
      <anchor>a78a7da1aea3f2f866e0e9e16eb90276d</anchor>
      <arglist>(const std::list&lt; std::shared_ptr&lt; EnemyState &gt;&gt; &amp;enemies, std::shared_ptr&lt; objects::ActionSpawn &gt; spawnSource=nullptr)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>EnableDisableSpawnGroups</name>
      <anchorfile>classchannel_1_1Zone.html</anchorfile>
      <anchor>a8d4c283a186af64c3d8272bdd455252e</anchor>
      <arglist>(const std::set&lt; uint32_t &gt; &amp;spawnGroupIDs, bool enable)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>EncounterDefeated</name>
      <anchorfile>classchannel_1_1Zone.html</anchorfile>
      <anchor>a54268266cea238cfa945b2912a9609a1</anchor>
      <arglist>(uint32_t encounterID, std::shared_ptr&lt; objects::ActionSpawn &gt; &amp;defeatActionSource)</arglist>
    </member>
    <member kind="function">
      <type>const std::list&lt; std::shared_ptr&lt; ActiveEntityState &gt; &gt;</type>
      <name>GetActiveEntities</name>
      <anchorfile>classchannel_1_1Zone.html</anchorfile>
      <anchor>a4cc0979c7dfe04f076a12f409636faee</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>const std::list&lt; std::shared_ptr&lt; ActiveEntityState &gt; &gt;</type>
      <name>GetActiveEntitiesInRadius</name>
      <anchorfile>classchannel_1_1Zone.html</anchorfile>
      <anchor>a7f636af03434e658be4d29d5762ff329</anchor>
      <arglist>(float x, float y, double radius)</arglist>
    </member>
    <member kind="function">
      <type>const std::shared_ptr&lt; ActiveEntityState &gt;</type>
      <name>GetActiveEntity</name>
      <anchorfile>classchannel_1_1Zone.html</anchorfile>
      <anchor>a75d09687abaa3b1b2707944d204cba12</anchor>
      <arglist>(int32_t entityID)</arglist>
    </member>
    <member kind="function">
      <type>std::shared_ptr&lt; objects::EntityStateObject &gt;</type>
      <name>GetActor</name>
      <anchorfile>classchannel_1_1Zone.html</anchorfile>
      <anchor>a8fa3b4fd2ab479c5aa722dbecdd6e111</anchor>
      <arglist>(int32_t actorID)</arglist>
    </member>
    <member kind="function">
      <type>std::shared_ptr&lt; BazaarState &gt;</type>
      <name>GetBazaar</name>
      <anchorfile>classchannel_1_1Zone.html</anchorfile>
      <anchor>adae8d138de6e1fed5cee38bda6b81364</anchor>
      <arglist>(int32_t id)</arglist>
    </member>
    <member kind="function">
      <type>const std::list&lt; std::shared_ptr&lt; BazaarState &gt; &gt;</type>
      <name>GetBazaars</name>
      <anchorfile>classchannel_1_1Zone.html</anchorfile>
      <anchor>a54add399336152e5d04b73bcb5da2110</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>std::list&lt; std::shared_ptr&lt; ChannelClientConnection &gt; &gt;</type>
      <name>GetConnectionList</name>
      <anchorfile>classchannel_1_1Zone.html</anchorfile>
      <anchor>a7af07c8f3afbcb08562caac822cf682d</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>std::unordered_map&lt; int32_t, std::shared_ptr&lt; ChannelClientConnection &gt; &gt;</type>
      <name>GetConnections</name>
      <anchorfile>classchannel_1_1Zone.html</anchorfile>
      <anchor>a4f173f83f9ba6b899ac33bba0bc72008</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>const std::shared_ptr&lt; objects::ServerZone &gt;</type>
      <name>GetDefinition</name>
      <anchorfile>classchannel_1_1Zone.html</anchorfile>
      <anchor>a933cee505b2fd0ab1842053375ae9e41</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>uint32_t</type>
      <name>GetDefinitionID</name>
      <anchorfile>classchannel_1_1Zone.html</anchorfile>
      <anchor>a903c7fdf831913adef790258d01aab0b</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>std::set&lt; int32_t &gt;</type>
      <name>GetDespawnEntities</name>
      <anchorfile>classchannel_1_1Zone.html</anchorfile>
      <anchor>a38711991b5edbfd603c26abc81666d6e</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>std::set&lt; uint32_t &gt;</type>
      <name>GetDisabledSpawnGroups</name>
      <anchorfile>classchannel_1_1Zone.html</anchorfile>
      <anchor>ab9a33289e8f6ce9e3d34a7e8814f5030</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>const std::shared_ptr&lt; DynamicMap &gt;</type>
      <name>GetDynamicMap</name>
      <anchorfile>classchannel_1_1Zone.html</anchorfile>
      <anchor>aafa8e0bc529b4e7e60f48cbe1cdb9cab</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>const std::list&lt; std::shared_ptr&lt; EnemyState &gt; &gt;</type>
      <name>GetEnemies</name>
      <anchorfile>classchannel_1_1Zone.html</anchorfile>
      <anchor>a491cbe8d78b1dc574f8df09c9048d042</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>std::shared_ptr&lt; EnemyState &gt;</type>
      <name>GetEnemy</name>
      <anchorfile>classchannel_1_1Zone.html</anchorfile>
      <anchor>ac22f5472abca19975312721b34020a20</anchor>
      <arglist>(int32_t id)</arglist>
    </member>
    <member kind="function">
      <type>std::shared_ptr&lt; objects::EntityStateObject &gt;</type>
      <name>GetEntity</name>
      <anchorfile>classchannel_1_1Zone.html</anchorfile>
      <anchor>a45c43ad21244ce3de52fa70fa46a36d1</anchor>
      <arglist>(int32_t id)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>GetFlagState</name>
      <anchorfile>classchannel_1_1Zone.html</anchorfile>
      <anchor>a3959b03ea33b61907044f67483514400</anchor>
      <arglist>(int32_t key, int32_t &amp;value, int32_t worldCID)</arglist>
    </member>
    <member kind="function">
      <type>std::unordered_map&lt; int32_t, std::unordered_map&lt; int32_t, int32_t &gt; &gt;</type>
      <name>GetFlagStates</name>
      <anchorfile>classchannel_1_1Zone.html</anchorfile>
      <anchor>aed1a3e18e44e917ec9edf67a3044beda</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>int32_t</type>
      <name>GetFlagStateValue</name>
      <anchorfile>classchannel_1_1Zone.html</anchorfile>
      <anchor>a6acce8ca02a77b9fc97f056e03c6e7b0</anchor>
      <arglist>(int32_t key, int32_t nullDefault, int32_t worldCID)</arglist>
    </member>
    <member kind="function">
      <type>const std::shared_ptr&lt; ZoneGeometry &gt;</type>
      <name>GetGeometry</name>
      <anchorfile>classchannel_1_1Zone.html</anchorfile>
      <anchor>afabd959e992dbd7c440ef6a999100a51</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>uint32_t</type>
      <name>GetID</name>
      <anchorfile>classchannel_1_1Zone.html</anchorfile>
      <anchor>a1d41abb03a1e4b53be50a97d73b1d66f</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>std::shared_ptr&lt; ZoneInstance &gt;</type>
      <name>GetInstance</name>
      <anchorfile>classchannel_1_1Zone.html</anchorfile>
      <anchor>aca80c38bbbd5905fc9277b05039326be</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>std::shared_ptr&lt; LootBoxState &gt;</type>
      <name>GetLootBox</name>
      <anchorfile>classchannel_1_1Zone.html</anchorfile>
      <anchor>af229608cdf134a08bc66c276398b8ab6</anchor>
      <arglist>(int32_t id)</arglist>
    </member>
    <member kind="function">
      <type>const std::list&lt; std::shared_ptr&lt; LootBoxState &gt; &gt;</type>
      <name>GetLootBoxes</name>
      <anchorfile>classchannel_1_1Zone.html</anchorfile>
      <anchor>a24c4f793c9afe25687b79cda7fd35a56</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>std::shared_ptr&lt; NPCState &gt;</type>
      <name>GetNPC</name>
      <anchorfile>classchannel_1_1Zone.html</anchorfile>
      <anchor>af2c48393074db43ac37a543ac918239c</anchor>
      <arglist>(int32_t id)</arglist>
    </member>
    <member kind="function">
      <type>const std::list&lt; std::shared_ptr&lt; NPCState &gt; &gt;</type>
      <name>GetNPCs</name>
      <anchorfile>classchannel_1_1Zone.html</anchorfile>
      <anchor>a58ce0a2dfa6497753be5ca590d9b3ceb</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>std::shared_ptr&lt; PlasmaState &gt;</type>
      <name>GetPlasma</name>
      <anchorfile>classchannel_1_1Zone.html</anchorfile>
      <anchor>a2ec1cb1e12bb67c0ea71c13764560633</anchor>
      <arglist>(uint32_t id)</arglist>
    </member>
    <member kind="function">
      <type>const std::unordered_map&lt; uint32_t, std::shared_ptr&lt; PlasmaState &gt; &gt;</type>
      <name>GetPlasma</name>
      <anchorfile>classchannel_1_1Zone.html</anchorfile>
      <anchor>a999614628a8d5f8a5112b1dfbaff95b4</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>std::set&lt; uint32_t &gt;</type>
      <name>GetRespawnLocations</name>
      <anchorfile>classchannel_1_1Zone.html</anchorfile>
      <anchor>ad1e63e79c3dad939d3c34b638f03165c</anchor>
      <arglist>(uint64_t now)</arglist>
    </member>
    <member kind="function">
      <type>std::shared_ptr&lt; ServerObjectState &gt;</type>
      <name>GetServerObject</name>
      <anchorfile>classchannel_1_1Zone.html</anchorfile>
      <anchor>a33cc190f3b076242409f7b9540723d26</anchor>
      <arglist>(int32_t id)</arglist>
    </member>
    <member kind="function">
      <type>const std::list&lt; std::shared_ptr&lt; ServerObjectState &gt; &gt;</type>
      <name>GetServerObjects</name>
      <anchorfile>classchannel_1_1Zone.html</anchorfile>
      <anchor>a2d409e441c81daa5188ae8af5fe112eb</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>std::list&lt; std::shared_ptr&lt; ActiveEntityState &gt; &gt;</type>
      <name>GetUpdatedStatusEffectEntities</name>
      <anchorfile>classchannel_1_1Zone.html</anchorfile>
      <anchor>a9f9e5a20cb36a2ac85ceb0874de97c6c</anchor>
      <arglist>(uint32_t now)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>GroupHasSpawned</name>
      <anchorfile>classchannel_1_1Zone.html</anchorfile>
      <anchor>ab0062a80b0147883fb9c66c4215d90af</anchor>
      <arglist>(uint32_t groupID, bool isLocation, bool aliveOnly)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>HasRespawns</name>
      <anchorfile>classchannel_1_1Zone.html</anchorfile>
      <anchor>acf1980cdc64477e534ef3b563fabe5be</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>MarkDespawn</name>
      <anchorfile>classchannel_1_1Zone.html</anchorfile>
      <anchor>a3ff7f61c00ae7f72018fd207e7e7b559</anchor>
      <arglist>(int32_t entityID)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>RemoveConnection</name>
      <anchorfile>classchannel_1_1Zone.html</anchorfile>
      <anchor>a97e5f6f5f27b8b9e4bf34a887ec371da</anchor>
      <arglist>(const std::shared_ptr&lt; ChannelClientConnection &gt; &amp;client)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>RemoveEntity</name>
      <anchorfile>classchannel_1_1Zone.html</anchorfile>
      <anchor>a68e582d1b49e7aee6be5698bced472d1</anchor>
      <arglist>(int32_t entityID, uint32_t spawnDelay=0)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetDynamicMap</name>
      <anchorfile>classchannel_1_1Zone.html</anchorfile>
      <anchor>a7c473e275dc997781a1e2e5dc1067e75</anchor>
      <arglist>(const std::shared_ptr&lt; DynamicMap &gt; &amp;map)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetFlagState</name>
      <anchorfile>classchannel_1_1Zone.html</anchorfile>
      <anchor>a66b70adee3403c6dab06b4d0f2cf8603</anchor>
      <arglist>(int32_t key, int32_t value, int32_t worldCID)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetGeometry</name>
      <anchorfile>classchannel_1_1Zone.html</anchorfile>
      <anchor>a9566ac066a883ffe78e412aacad8e671</anchor>
      <arglist>(const std::shared_ptr&lt; ZoneGeometry &gt; &amp;geometry)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetInstance</name>
      <anchorfile>classchannel_1_1Zone.html</anchorfile>
      <anchor>a06f1e8e0c9aab06c4bc900d0bf712530</anchor>
      <arglist>(const std::shared_ptr&lt; ZoneInstance &gt; &amp;instance)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetNextStatusEffectTime</name>
      <anchorfile>classchannel_1_1Zone.html</anchorfile>
      <anchor>aef515d1457133e3ed6a5cf1b4805694f</anchor>
      <arglist>(uint32_t time, int32_t entityID)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>SpawnedAtSpot</name>
      <anchorfile>classchannel_1_1Zone.html</anchorfile>
      <anchor>a838f88120ab6414461c67f7f1b5e01c3</anchor>
      <arglist>(uint32_t spotID)</arglist>
    </member>
    <member kind="function">
      <type>std::unordered_map&lt; size_t, std::shared_ptr&lt; objects::Loot &gt; &gt;</type>
      <name>TakeLoot</name>
      <anchorfile>classchannel_1_1Zone.html</anchorfile>
      <anchor>a8f339d80b7ab00aae34c057b270d4687</anchor>
      <arglist>(std::shared_ptr&lt; objects::LootBox &gt; lBox, std::set&lt; int8_t &gt; slots, size_t freeSlots, std::unordered_map&lt; uint32_t, uint16_t &gt; stacksFree={})</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>UpdateTimedSpawns</name>
      <anchorfile>classchannel_1_1Zone.html</anchorfile>
      <anchor>a4abe538420b186af4c0fcbce9184ad8b</anchor>
      <arglist>(const WorldClock &amp;clock)</arglist>
    </member>
    <member kind="function" protection="private">
      <type>bool</type>
      <name>DisableSpawnGroups</name>
      <anchorfile>classchannel_1_1Zone.html</anchorfile>
      <anchor>a25f6267df1bac0444fee09e57c739405</anchor>
      <arglist>(const std::set&lt; uint32_t &gt; &amp;spawnGroupIDs)</arglist>
    </member>
    <member kind="function" protection="private">
      <type>void</type>
      <name>EnableSpawnGroups</name>
      <anchorfile>classchannel_1_1Zone.html</anchorfile>
      <anchor>a8858c6935647b1b5079053b8223246dd</anchor>
      <arglist>(const std::set&lt; uint32_t &gt; &amp;spawnGroupIDs)</arglist>
    </member>
    <member kind="function" protection="private">
      <type>void</type>
      <name>RegisterEntityState</name>
      <anchorfile>classchannel_1_1Zone.html</anchorfile>
      <anchor>a30a60bbca5d41413a38963e3e96ebcb1</anchor>
      <arglist>(const std::shared_ptr&lt; objects::EntityStateObject &gt; &amp;state)</arglist>
    </member>
    <member kind="function" protection="private">
      <type>bool</type>
      <name>TimeRestrictionActive</name>
      <anchorfile>classchannel_1_1Zone.html</anchorfile>
      <anchor>a578fc3c24afdbcab2f9845e015f9fbf9</anchor>
      <arglist>(const WorldClock &amp;clock, const std::shared_ptr&lt; objects::SpawnRestriction &gt; &amp;restriction)</arglist>
    </member>
    <member kind="function" protection="private">
      <type>void</type>
      <name>UnregisterEntityState</name>
      <anchorfile>classchannel_1_1Zone.html</anchorfile>
      <anchor>a168d88c60784ec83753459e9ca8d236e</anchor>
      <arglist>(int32_t entityID)</arglist>
    </member>
    <member kind="variable" protection="private">
      <type>std::unordered_map&lt; int32_t, std::shared_ptr&lt; objects::EntityStateObject &gt; &gt;</type>
      <name>mActors</name>
      <anchorfile>classchannel_1_1Zone.html</anchorfile>
      <anchor>a55e83305b4ffb2e56ad5b530f000548f</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>std::unordered_map&lt; int32_t, std::shared_ptr&lt; objects::EntityStateObject &gt; &gt;</type>
      <name>mAllEntities</name>
      <anchorfile>classchannel_1_1Zone.html</anchorfile>
      <anchor>ab98ca58e2daa39fdf8b6f2f3ed1ba544</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>std::list&lt; std::shared_ptr&lt; BazaarState &gt; &gt;</type>
      <name>mBazaars</name>
      <anchorfile>classchannel_1_1Zone.html</anchorfile>
      <anchor>aa5f07b1bf482815a50209b01418a0108</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>std::unordered_map&lt; uint32_t, std::set&lt; int32_t &gt; &gt;</type>
      <name>mBossBoxGroups</name>
      <anchorfile>classchannel_1_1Zone.html</anchorfile>
      <anchor>a3f0493ab46a4255592836e648bfa02e4</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>std::unordered_map&lt; uint32_t, std::set&lt; int32_t &gt; &gt;</type>
      <name>mBossBoxOwners</name>
      <anchorfile>classchannel_1_1Zone.html</anchorfile>
      <anchor>ab926f654714e3de19a97e94cd8e8602c</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>std::unordered_map&lt; int32_t, std::shared_ptr&lt; ChannelClientConnection &gt; &gt;</type>
      <name>mConnections</name>
      <anchorfile>classchannel_1_1Zone.html</anchorfile>
      <anchor>a9220a9b878b2b9cc94b32db699fb55ef</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>std::set&lt; uint32_t &gt;</type>
      <name>mDisabledSpawnGroups</name>
      <anchorfile>classchannel_1_1Zone.html</anchorfile>
      <anchor>aa975e7fbdf57d78e45d157e82e5e1a62</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>std::set&lt; uint32_t &gt;</type>
      <name>mDisabledSpawnLocationGroups</name>
      <anchorfile>classchannel_1_1Zone.html</anchorfile>
      <anchor>ae0d0aa66e1cc8cc5b3fe84980a86b088</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>std::shared_ptr&lt; DynamicMap &gt;</type>
      <name>mDynamicMap</name>
      <anchorfile>classchannel_1_1Zone.html</anchorfile>
      <anchor>a5b499b04a5153c20aa5d1d782a0ed853</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>std::unordered_map&lt; uint32_t, std::set&lt; std::shared_ptr&lt; EnemyState &gt; &gt; &gt;</type>
      <name>mEncounters</name>
      <anchorfile>classchannel_1_1Zone.html</anchorfile>
      <anchor>a508035e590e39a67a27d52883f6ee804</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>std::unordered_map&lt; uint32_t, std::shared_ptr&lt; objects::ActionSpawn &gt; &gt;</type>
      <name>mEncounterSpawnSources</name>
      <anchorfile>classchannel_1_1Zone.html</anchorfile>
      <anchor>aada2615804a91e6f0a285ee587327f14</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>std::list&lt; std::shared_ptr&lt; EnemyState &gt; &gt;</type>
      <name>mEnemies</name>
      <anchorfile>classchannel_1_1Zone.html</anchorfile>
      <anchor>a127e3f558470fb8577b1d4e3ec3950e6</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>std::unordered_map&lt; int32_t, std::unordered_map&lt; int32_t, int32_t &gt; &gt;</type>
      <name>mFlagStates</name>
      <anchorfile>classchannel_1_1Zone.html</anchorfile>
      <anchor>a0a432864fbcfa2e0c498890e1f67ace5</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>std::shared_ptr&lt; ZoneGeometry &gt;</type>
      <name>mGeometry</name>
      <anchorfile>classchannel_1_1Zone.html</anchorfile>
      <anchor>a0dccf72549a8bedf9205e0d56eec7c64</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>bool</type>
      <name>mHasRespawns</name>
      <anchorfile>classchannel_1_1Zone.html</anchorfile>
      <anchor>a6a433e1f543fd99163618b293595a6a5</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>uint32_t</type>
      <name>mID</name>
      <anchorfile>classchannel_1_1Zone.html</anchorfile>
      <anchor>a57b01a1796bb8df04dde0957689f53e0</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>std::mutex</type>
      <name>mLock</name>
      <anchorfile>classchannel_1_1Zone.html</anchorfile>
      <anchor>a3c96786c0e7f6dcae40ae58e720f14e0</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>std::list&lt; std::shared_ptr&lt; LootBoxState &gt; &gt;</type>
      <name>mLootBoxes</name>
      <anchorfile>classchannel_1_1Zone.html</anchorfile>
      <anchor>a54df90b3ecf4bfb474eb79d054b0c4ac</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>uint32_t</type>
      <name>mNextEncounterID</name>
      <anchorfile>classchannel_1_1Zone.html</anchorfile>
      <anchor>a0e5053885413a7daf5ab3859f8c4c26a</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>std::map&lt; uint32_t, std::set&lt; int32_t &gt; &gt;</type>
      <name>mNextEntityStatusTimes</name>
      <anchorfile>classchannel_1_1Zone.html</anchorfile>
      <anchor>a5e7bea5448f355d0e4763b0aab3d0fab</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>std::list&lt; std::shared_ptr&lt; NPCState &gt; &gt;</type>
      <name>mNPCs</name>
      <anchorfile>classchannel_1_1Zone.html</anchorfile>
      <anchor>a318edb32d821b90bb898bb99428b1e3d</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>std::list&lt; std::shared_ptr&lt; ServerObjectState &gt; &gt;</type>
      <name>mObjects</name>
      <anchorfile>classchannel_1_1Zone.html</anchorfile>
      <anchor>a2d872689ae8097c4e4f32642bd081811</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>std::set&lt; int32_t &gt;</type>
      <name>mPendingDespawnEntities</name>
      <anchorfile>classchannel_1_1Zone.html</anchorfile>
      <anchor>a5543472dc3b9a791a0fdbcacd9fe3b28</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>std::unordered_map&lt; uint32_t, std::shared_ptr&lt; PlasmaState &gt; &gt;</type>
      <name>mPlasma</name>
      <anchorfile>classchannel_1_1Zone.html</anchorfile>
      <anchor>a0cec7e9c4382bc4ed80e25e32c4d92e4</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>std::map&lt; uint64_t, std::set&lt; uint32_t &gt; &gt;</type>
      <name>mRespawnTimes</name>
      <anchorfile>classchannel_1_1Zone.html</anchorfile>
      <anchor>aed44f72d3fef192f860d9bc23a0e98a0</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>std::shared_ptr&lt; objects::ServerZone &gt;</type>
      <name>mServerZone</name>
      <anchorfile>classchannel_1_1Zone.html</anchorfile>
      <anchor>a98c13e5c1779d6a524dda171fa633ee3</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>std::unordered_map&lt; uint32_t, std::list&lt; std::shared_ptr&lt; EnemyState &gt; &gt; &gt;</type>
      <name>mSpawnGroups</name>
      <anchorfile>classchannel_1_1Zone.html</anchorfile>
      <anchor>a3319f54e98a91654b20d68d0e61ba8bd</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>std::unordered_map&lt; uint32_t, std::list&lt; std::shared_ptr&lt; EnemyState &gt; &gt; &gt;</type>
      <name>mSpawnLocationGroups</name>
      <anchorfile>classchannel_1_1Zone.html</anchorfile>
      <anchor>aeee1f2643c4c50bd91ae3216e0dcbb81</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>std::set&lt; uint32_t &gt;</type>
      <name>mSpotsSpawned</name>
      <anchorfile>classchannel_1_1Zone.html</anchorfile>
      <anchor>ac38d643150dc27377d53a5f97618edfd</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>std::shared_ptr&lt; ZoneInstance &gt;</type>
      <name>mZoneInstance</name>
      <anchorfile>classchannel_1_1Zone.html</anchorfile>
      <anchor>aca4a5627458b7f22f2c8953fa2bf370f</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>channel::ZoneGeometry</name>
    <filename>classchannel_1_1ZoneGeometry.html</filename>
    <member kind="function">
      <type>bool</type>
      <name>Collides</name>
      <anchorfile>classchannel_1_1ZoneGeometry.html</anchorfile>
      <anchor>a803290437ace8ec1e9d1e943ee6dcac7</anchor>
      <arglist>(const Line &amp;path, Point &amp;point, Line &amp;surface, std::shared_ptr&lt; ZoneShape &gt; &amp;shape) const </arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>Collides</name>
      <anchorfile>classchannel_1_1ZoneGeometry.html</anchorfile>
      <anchor>a7cac6a335c4a9dd68ac1faa6d604b08b</anchor>
      <arglist>(const Line &amp;path, Point &amp;point) const </arglist>
    </member>
    <member kind="variable">
      <type>libcomp::String</type>
      <name>QmpFilename</name>
      <anchorfile>classchannel_1_1ZoneGeometry.html</anchorfile>
      <anchor>a0a217ce0d4813a29e927fb93707f4905</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>std::list&lt; std::shared_ptr&lt; ZoneShape &gt; &gt;</type>
      <name>Shapes</name>
      <anchorfile>classchannel_1_1ZoneGeometry.html</anchorfile>
      <anchor>a82a97f7cbd3ae5018b7fdd596453de5d</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>channel::ZoneInstance</name>
    <filename>classchannel_1_1ZoneInstance.html</filename>
    <member kind="function">
      <type></type>
      <name>ZoneInstance</name>
      <anchorfile>classchannel_1_1ZoneInstance.html</anchorfile>
      <anchor>aff58ea2383c8ec87adeeebe4f7318b87</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>ZoneInstance</name>
      <anchorfile>classchannel_1_1ZoneInstance.html</anchorfile>
      <anchor>aca9e4d1ac5f28bff5ebfc159ce8e1920</anchor>
      <arglist>(uint32_t id, const std::shared_ptr&lt; objects::ServerZoneInstance &gt; &amp;definition, std::set&lt; int32_t &gt; &amp;accessCIDs)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>ZoneInstance</name>
      <anchorfile>classchannel_1_1ZoneInstance.html</anchorfile>
      <anchor>a09c9f12017cd6261cac94e4abc2ccc26</anchor>
      <arglist>(const ZoneInstance &amp;other)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~ZoneInstance</name>
      <anchorfile>classchannel_1_1ZoneInstance.html</anchorfile>
      <anchor>a796962f892bd1758f3026244b940503f</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>AddZone</name>
      <anchorfile>classchannel_1_1ZoneInstance.html</anchorfile>
      <anchor>a22418116fe9dcbbea483b3aa046bbce0</anchor>
      <arglist>(const std::shared_ptr&lt; Zone &gt; &amp;zone)</arglist>
    </member>
    <member kind="function">
      <type>std::set&lt; int32_t &gt;</type>
      <name>GetAccessCIDs</name>
      <anchorfile>classchannel_1_1ZoneInstance.html</anchorfile>
      <anchor>abeea971a391039a2129d41d42dbe1767</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>const std::shared_ptr&lt; objects::ServerZoneInstance &gt;</type>
      <name>GetDefinition</name>
      <anchorfile>classchannel_1_1ZoneInstance.html</anchorfile>
      <anchor>ab248b97fa631622296619cd9961ab996</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>GetFlagState</name>
      <anchorfile>classchannel_1_1ZoneInstance.html</anchorfile>
      <anchor>a27c5fd1cc7d51e931d168014e8727ff6</anchor>
      <arglist>(int32_t key, int32_t &amp;value, int32_t worldCID)</arglist>
    </member>
    <member kind="function">
      <type>std::unordered_map&lt; int32_t, std::unordered_map&lt; int32_t, int32_t &gt; &gt;</type>
      <name>GetFlagStates</name>
      <anchorfile>classchannel_1_1ZoneInstance.html</anchorfile>
      <anchor>a3bae784440e367cd8b3e2e4dc9e4ac46</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>int32_t</type>
      <name>GetFlagStateValue</name>
      <anchorfile>classchannel_1_1ZoneInstance.html</anchorfile>
      <anchor>a6a5a3d86828cc6a3ace130dd47b7c8fd</anchor>
      <arglist>(int32_t key, int32_t nullDefault, int32_t worldCID)</arglist>
    </member>
    <member kind="function">
      <type>uint32_t</type>
      <name>GetID</name>
      <anchorfile>classchannel_1_1ZoneInstance.html</anchorfile>
      <anchor>a11c6b7f05cff3610a336f3e5f50f6e67</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>std::shared_ptr&lt; Zone &gt;</type>
      <name>GetZone</name>
      <anchorfile>classchannel_1_1ZoneInstance.html</anchorfile>
      <anchor>ab683f69dbeb6874f3d1318a626cec727</anchor>
      <arglist>(uint32_t zoneID, uint32_t dynamicMapID)</arglist>
    </member>
    <member kind="function">
      <type>std::unordered_map&lt; uint32_t, std::unordered_map&lt; uint32_t, std::shared_ptr&lt; Zone &gt; &gt; &gt;</type>
      <name>GetZones</name>
      <anchorfile>classchannel_1_1ZoneInstance.html</anchorfile>
      <anchor>ac7962e26feece6e3d9781ef6879a17f6</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetFlagState</name>
      <anchorfile>classchannel_1_1ZoneInstance.html</anchorfile>
      <anchor>a790b39876e5eeb4aac8bd4dd0e803ef0</anchor>
      <arglist>(int32_t key, int32_t value, int32_t worldCID)</arglist>
    </member>
    <member kind="variable" protection="private">
      <type>std::set&lt; int32_t &gt;</type>
      <name>mAccessCIDs</name>
      <anchorfile>classchannel_1_1ZoneInstance.html</anchorfile>
      <anchor>a807a78999b193ccc4d53807f5f8529d1</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>std::shared_ptr&lt; objects::ServerZoneInstance &gt;</type>
      <name>mDefinition</name>
      <anchorfile>classchannel_1_1ZoneInstance.html</anchorfile>
      <anchor>a236b6748dde567fde7b4aaead912a0ff</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>std::unordered_map&lt; int32_t, std::unordered_map&lt; int32_t, int32_t &gt; &gt;</type>
      <name>mFlagStates</name>
      <anchorfile>classchannel_1_1ZoneInstance.html</anchorfile>
      <anchor>a77a1e582aa9571e293a5d1ec885961a9</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>uint32_t</type>
      <name>mID</name>
      <anchorfile>classchannel_1_1ZoneInstance.html</anchorfile>
      <anchor>a26713a5e6a500fdba00c8f2a788b74e1</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>std::mutex</type>
      <name>mLock</name>
      <anchorfile>classchannel_1_1ZoneInstance.html</anchorfile>
      <anchor>a66c7ac59ff3896f911a99d7954add8f3</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>std::unordered_map&lt; uint32_t, std::unordered_map&lt; uint32_t, std::shared_ptr&lt; Zone &gt; &gt; &gt;</type>
      <name>mZones</name>
      <anchorfile>classchannel_1_1ZoneInstance.html</anchorfile>
      <anchor>a49a8ee649b35eb4bdf0edec3e73a21eb</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>channel::ZoneManager</name>
    <filename>classchannel_1_1ZoneManager.html</filename>
    <member kind="function">
      <type></type>
      <name>ZoneManager</name>
      <anchorfile>classchannel_1_1ZoneManager.html</anchorfile>
      <anchor>a8bc372a1fb9ff2d6c2e9b876a323739e</anchor>
      <arglist>(const std::weak_ptr&lt; ChannelServer &gt; &amp;server)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~ZoneManager</name>
      <anchorfile>classchannel_1_1ZoneManager.html</anchorfile>
      <anchor>aa52b6607911c377c44deccd96873e27a</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>BroadcastPacket</name>
      <anchorfile>classchannel_1_1ZoneManager.html</anchorfile>
      <anchor>aac5bb93f339e5ebc83ba7b4a5488bdd3</anchor>
      <arglist>(const std::shared_ptr&lt; ChannelClientConnection &gt; &amp;client, libcomp::Packet &amp;p, bool includeSelf=true)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>BroadcastPacket</name>
      <anchorfile>classchannel_1_1ZoneManager.html</anchorfile>
      <anchor>ae0fb0690690700dd89a4866687958100</anchor>
      <arglist>(const std::shared_ptr&lt; Zone &gt; &amp;zone, libcomp::Packet &amp;p)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>ClearInstanceAccess</name>
      <anchorfile>classchannel_1_1ZoneManager.html</anchorfile>
      <anchor>a581289d20f685bb4166574beb3c49ff7</anchor>
      <arglist>(uint32_t instanceID)</arglist>
    </member>
    <member kind="function">
      <type>std::shared_ptr&lt; ZoneInstance &gt;</type>
      <name>CreateInstance</name>
      <anchorfile>classchannel_1_1ZoneManager.html</anchorfile>
      <anchor>a644d3f8c3fca604a725f5b0b16f0ac2a</anchor>
      <arglist>(const std::shared_ptr&lt; ChannelClientConnection &gt; &amp;client, uint32_t instanceID)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>EnterZone</name>
      <anchorfile>classchannel_1_1ZoneManager.html</anchorfile>
      <anchor>a41a916dc39d907f42f041c9938d541e3</anchor>
      <arglist>(const std::shared_ptr&lt; ChannelClientConnection &gt; &amp;client, uint32_t zoneID, uint32_t dynamicMapID, float xCoord, float yCoord, float rotation, bool forceLeave=false)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>ExpireBazaarMarkets</name>
      <anchorfile>classchannel_1_1ZoneManager.html</anchorfile>
      <anchor>a9ff40abea9430750cc8f67fa57b16871</anchor>
      <arglist>(const std::shared_ptr&lt; Zone &gt; &amp;zone, const std::shared_ptr&lt; BazaarState &gt; &amp;bState)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>FixCurrentPosition</name>
      <anchorfile>classchannel_1_1ZoneManager.html</anchorfile>
      <anchor>aa8b8905bb7c1fff877395abbaef0a154</anchor>
      <arglist>(const std::shared_ptr&lt; ActiveEntityState &gt; &amp;eState, uint64_t fixUntil, uint64_t now=0)</arglist>
    </member>
    <member kind="function">
      <type>std::shared_ptr&lt; Zone &gt;</type>
      <name>GetCurrentZone</name>
      <anchorfile>classchannel_1_1ZoneManager.html</anchorfile>
      <anchor>af3e04258b45d492711b4b1ff0fb39648</anchor>
      <arglist>(const std::shared_ptr&lt; ChannelClientConnection &gt; &amp;client)</arglist>
    </member>
    <member kind="function">
      <type>std::shared_ptr&lt; Zone &gt;</type>
      <name>GetCurrentZone</name>
      <anchorfile>classchannel_1_1ZoneManager.html</anchorfile>
      <anchor>ac7644f2cf627f046ef91a07133177f85</anchor>
      <arglist>(int32_t worldCID)</arglist>
    </member>
    <member kind="function">
      <type>std::shared_ptr&lt; ZoneInstance &gt;</type>
      <name>GetInstanceAccess</name>
      <anchorfile>classchannel_1_1ZoneManager.html</anchorfile>
      <anchor>ae81658266920943e6f4c41c3b469ec23</anchor>
      <arglist>(const std::shared_ptr&lt; ChannelClientConnection &gt; &amp;client)</arglist>
    </member>
    <member kind="function">
      <type>Point</type>
      <name>GetLinearPoint</name>
      <anchorfile>classchannel_1_1ZoneManager.html</anchorfile>
      <anchor>a71a15fc2bdb97af8b24ba9fd6468fc3c</anchor>
      <arglist>(float sourceX, float sourceY, float targetX, float targetY, float distance, bool away)</arglist>
    </member>
    <member kind="function">
      <type>Point</type>
      <name>GetRandomPoint</name>
      <anchorfile>classchannel_1_1ZoneManager.html</anchorfile>
      <anchor>a1c29de58a3b63d4aeddcec16970d0bf2</anchor>
      <arglist>(float width, float height) const </arglist>
    </member>
    <member kind="function">
      <type>Point</type>
      <name>GetRandomSpotPoint</name>
      <anchorfile>classchannel_1_1ZoneManager.html</anchorfile>
      <anchor>a9b0f026184567c073028753331c71576</anchor>
      <arglist>(const std::shared_ptr&lt; objects::MiSpotData &gt; &amp;spot, const std::shared_ptr&lt; objects::MiZoneData &gt; &amp;zoneData=nullptr)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>GetSpotPosition</name>
      <anchorfile>classchannel_1_1ZoneManager.html</anchorfile>
      <anchor>a77356fff224a2e0d17e90b74cf9f460e</anchor>
      <arglist>(uint32_t dynamicMapID, uint32_t spotID, float &amp;x, float &amp;y, float &amp;rot) const </arglist>
    </member>
    <member kind="function">
      <type>std::list&lt; std::shared_ptr&lt; ChannelClientConnection &gt; &gt;</type>
      <name>GetZoneConnections</name>
      <anchorfile>classchannel_1_1ZoneManager.html</anchorfile>
      <anchor>ac673cad31df42cb066a18f1d87ae29c3</anchor>
      <arglist>(const std::shared_ptr&lt; ChannelClientConnection &gt; &amp;client, bool includeSelf=true)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>HandleTimedActions</name>
      <anchorfile>classchannel_1_1ZoneManager.html</anchorfile>
      <anchor>ad1d7453219d72a61c5b5b161752190db</anchor>
      <arglist>(const WorldClock &amp;clock)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>InstanceGlobalZones</name>
      <anchorfile>classchannel_1_1ZoneManager.html</anchorfile>
      <anchor>a0df1956b975ffe166c3d96d69ea0d893</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>LeaveZone</name>
      <anchorfile>classchannel_1_1ZoneManager.html</anchorfile>
      <anchor>ad0e4956fc643d193510b9b3c6ea1dcc6</anchor>
      <arglist>(const std::shared_ptr&lt; ChannelClientConnection &gt; &amp;client, bool logOut, uint32_t newZoneID=0, uint32_t newDynamicMapID=0)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>LoadGeometry</name>
      <anchorfile>classchannel_1_1ZoneManager.html</anchorfile>
      <anchor>ae92666887b1a9257826e28c694be2499</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Point</type>
      <name>MoveRelative</name>
      <anchorfile>classchannel_1_1ZoneManager.html</anchorfile>
      <anchor>a84658bbab6dad5dd44a9a451d0ba27ba</anchor>
      <arglist>(const std::shared_ptr&lt; ActiveEntityState &gt; &amp;eState, float targetX, float targetY, float distance, bool away, uint64_t now, uint64_t endTime)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>PopEntityForProduction</name>
      <anchorfile>classchannel_1_1ZoneManager.html</anchorfile>
      <anchor>a17cc0907f0e505167e6e474ccdede3d6</anchor>
      <arglist>(const std::shared_ptr&lt; ChannelClientConnection &gt; &amp;client, int32_t entityID, int32_t type, bool queue=false)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>PopEntityForZoneProduction</name>
      <anchorfile>classchannel_1_1ZoneManager.html</anchorfile>
      <anchor>a6dec24e97b4889a5638dd4945972aa52</anchor>
      <arglist>(const std::shared_ptr&lt; Zone &gt; &amp;zone, int32_t entityID, int32_t type)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>RemoveEntities</name>
      <anchorfile>classchannel_1_1ZoneManager.html</anchorfile>
      <anchor>abe49814e7e6d8d927453e1b6a2136301</anchor>
      <arglist>(const std::list&lt; std::shared_ptr&lt; ChannelClientConnection &gt;&gt; &amp;clients, const std::list&lt; int32_t &gt; &amp;entityIDs, int32_t removalMode=0, bool queue=false)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>RemoveEntitiesFromZone</name>
      <anchorfile>classchannel_1_1ZoneManager.html</anchorfile>
      <anchor>a0c531ee6a48eaa5d4c9f60fe6d0416a0</anchor>
      <arglist>(const std::shared_ptr&lt; Zone &gt; &amp;zone, const std::list&lt; int32_t &gt; &amp;entityIDs, int32_t removalMode=0, bool queue=false)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>ScheduleEntityRemoval</name>
      <anchorfile>classchannel_1_1ZoneManager.html</anchorfile>
      <anchor>a2868c20c546e5e795923aa9ee11e017d</anchor>
      <arglist>(uint64_t time, const std::shared_ptr&lt; Zone &gt; &amp;zone, const std::list&lt; int32_t &gt; &amp;entityIDs, int32_t removeMode=0)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SendBazaarMarketData</name>
      <anchorfile>classchannel_1_1ZoneManager.html</anchorfile>
      <anchor>a1a95df628687b36edbd47d1dbd06f89c</anchor>
      <arglist>(const std::shared_ptr&lt; Zone &gt; &amp;zone, const std::shared_ptr&lt; BazaarState &gt; &amp;bState, uint32_t marketID)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SendLootBoxData</name>
      <anchorfile>classchannel_1_1ZoneManager.html</anchorfile>
      <anchor>a22ef5899cbe79f0988d15d55fe4d0986</anchor>
      <arglist>(const std::shared_ptr&lt; ChannelClientConnection &gt; &amp;client, const std::shared_ptr&lt; LootBoxState &gt; &amp;lState, const std::shared_ptr&lt; EnemyState &gt; &amp;eState, bool sendToAll, bool queue=false)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>SendPopulateZoneData</name>
      <anchorfile>classchannel_1_1ZoneManager.html</anchorfile>
      <anchor>a1f84ab999769bd716eed3b10b8dd9249</anchor>
      <arglist>(const std::shared_ptr&lt; ChannelClientConnection &gt; &amp;client)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SendToRange</name>
      <anchorfile>classchannel_1_1ZoneManager.html</anchorfile>
      <anchor>a5f0a328ab444bd6a58d9b9f6566d28ad</anchor>
      <arglist>(const std::shared_ptr&lt; ChannelClientConnection &gt; &amp;client, libcomp::Packet &amp;p, bool includeSelf=true)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>ShowEntity</name>
      <anchorfile>classchannel_1_1ZoneManager.html</anchorfile>
      <anchor>a17a78ce61cca284f098cbd440db4c81e</anchor>
      <arglist>(const std::shared_ptr&lt; ChannelClientConnection &gt; &amp;client, int32_t entityID, bool queue=false)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>ShowEntityToZone</name>
      <anchorfile>classchannel_1_1ZoneManager.html</anchorfile>
      <anchor>aafcb28d5fbfb1cd5ca08cd005202590e</anchor>
      <arglist>(const std::shared_ptr&lt; Zone &gt; &amp;zone, int32_t entityID)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>SpawnEnemy</name>
      <anchorfile>classchannel_1_1ZoneManager.html</anchorfile>
      <anchor>aee095c4df9fc5a300d09db88b43fb83e</anchor>
      <arglist>(const std::shared_ptr&lt; Zone &gt; &amp;zone, uint32_t demonID, float x, float y, float rot, const libcomp::String &amp;aiType=&quot;&quot;)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>UpdateActiveZoneStates</name>
      <anchorfile>classchannel_1_1ZoneManager.html</anchorfile>
      <anchor>ac664556e891b23def2518979ad193802</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>UpdatePlasma</name>
      <anchorfile>classchannel_1_1ZoneManager.html</anchorfile>
      <anchor>ad2cd3a5827c345b54f64ac3d3c592dda</anchor>
      <arglist>(const std::shared_ptr&lt; Zone &gt; &amp;zone, uint64_t now=0)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>UpdateSpawnGroups</name>
      <anchorfile>classchannel_1_1ZoneManager.html</anchorfile>
      <anchor>a1ae4fd2162029910dc294520089cf60a</anchor>
      <arglist>(const std::shared_ptr&lt; Zone &gt; &amp;zone, bool refreshAll, uint64_t now=0, std::shared_ptr&lt; objects::ActionSpawn &gt; actionSource=nullptr)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>Warp</name>
      <anchorfile>classchannel_1_1ZoneManager.html</anchorfile>
      <anchor>aecab75b9c5a7d8e352ceb7ec65f0ea89</anchor>
      <arglist>(const std::shared_ptr&lt; ChannelClientConnection &gt; &amp;client, const std::shared_ptr&lt; ActiveEntityState &gt; &amp;eState, float xPos, float yPos, float rot)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static std::list&lt; std::shared_ptr&lt; ActiveEntityState &gt; &gt;</type>
      <name>GetEntitiesInFoV</name>
      <anchorfile>classchannel_1_1ZoneManager.html</anchorfile>
      <anchor>ab891957cbb372544048a15ea5158723a</anchor>
      <arglist>(const std::list&lt; std::shared_ptr&lt; ActiveEntityState &gt;&gt; &amp;entities, float x, float y, float rot, float maxAngle)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static bool</type>
      <name>PointInPolygon</name>
      <anchorfile>classchannel_1_1ZoneManager.html</anchorfile>
      <anchor>ae96a4d7d688d87af293d0b76f7486ec6</anchor>
      <arglist>(const Point &amp;p, const std::list&lt; Point &gt; vertices)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static Point</type>
      <name>RotatePoint</name>
      <anchorfile>classchannel_1_1ZoneManager.html</anchorfile>
      <anchor>af069e50de205e0b1b0fe42c94bb5b885</anchor>
      <arglist>(const Point &amp;p, const Point &amp;origin, float radians)</arglist>
    </member>
    <member kind="function" protection="private">
      <type>std::shared_ptr&lt; EnemyState &gt;</type>
      <name>CreateEnemy</name>
      <anchorfile>classchannel_1_1ZoneManager.html</anchorfile>
      <anchor>a247e9ea1fe768f2f2e1f40d201dc665c</anchor>
      <arglist>(const std::shared_ptr&lt; Zone &gt; &amp;zone, uint32_t demonID, const std::shared_ptr&lt; objects::Spawn &gt; &amp;spawn, float x, float y, float rot)</arglist>
    </member>
    <member kind="function" protection="private">
      <type>std::shared_ptr&lt; Zone &gt;</type>
      <name>CreateZone</name>
      <anchorfile>classchannel_1_1ZoneManager.html</anchorfile>
      <anchor>a9f2c9c769ae22de04b70cbea132979d7</anchor>
      <arglist>(const std::shared_ptr&lt; objects::ServerZone &gt; &amp;definition)</arglist>
    </member>
    <member kind="function" protection="private">
      <type>std::shared_ptr&lt; Zone &gt;</type>
      <name>GetZone</name>
      <anchorfile>classchannel_1_1ZoneManager.html</anchorfile>
      <anchor>af669b89bb6cc2ed0f31294b72ab4df41</anchor>
      <arglist>(uint32_t zoneID, uint32_t dynamicMapID, const std::shared_ptr&lt; ChannelClientConnection &gt; &amp;client, uint32_t currentInstanceID=0)</arglist>
    </member>
    <member kind="function" protection="private">
      <type>void</type>
      <name>HandleDespawns</name>
      <anchorfile>classchannel_1_1ZoneManager.html</anchorfile>
      <anchor>a6efe4cdc2ef58a021672628d9b851665</anchor>
      <arglist>(const std::shared_ptr&lt; Zone &gt; &amp;zone)</arglist>
    </member>
    <member kind="function" protection="private">
      <type>bool</type>
      <name>RegisterTimeRestrictions</name>
      <anchorfile>classchannel_1_1ZoneManager.html</anchorfile>
      <anchor>adcd5516030f4cfae729985de7825190e</anchor>
      <arglist>(const std::shared_ptr&lt; Zone &gt; &amp;zone, const std::shared_ptr&lt; objects::ServerZone &gt; &amp;definition)</arglist>
    </member>
    <member kind="function" protection="private">
      <type>bool</type>
      <name>RemoveInstance</name>
      <anchorfile>classchannel_1_1ZoneManager.html</anchorfile>
      <anchor>a850d57ba0b6f12aedf5e5ce78ce4971f</anchor>
      <arglist>(uint32_t instanceID)</arglist>
    </member>
    <member kind="function" protection="private">
      <type>bool</type>
      <name>SelectSpotAndLocation</name>
      <anchorfile>classchannel_1_1ZoneManager.html</anchorfile>
      <anchor>ab3ab9dc3687fba3e0fe1bfec4afb0182</anchor>
      <arglist>(bool useSpotID, uint32_t &amp;spotID, const std::set&lt; uint32_t &gt; &amp;spotIDs, std::shared_ptr&lt; channel::ZoneSpotShape &gt; &amp;spot, std::shared_ptr&lt; objects::SpawnLocation &gt; &amp;location, std::shared_ptr&lt; DynamicMap &gt; &amp;dynamicMap, std::shared_ptr&lt; objects::ServerZone &gt; &amp;zoneDef, std::list&lt; std::shared_ptr&lt; objects::SpawnLocation &gt;&gt; &amp;locations)</arglist>
    </member>
    <member kind="function" protection="private">
      <type>void</type>
      <name>SendEnemyData</name>
      <anchorfile>classchannel_1_1ZoneManager.html</anchorfile>
      <anchor>afd5374d235cc2961c8cad7407b62e859</anchor>
      <arglist>(const std::shared_ptr&lt; ChannelClientConnection &gt; &amp;client, const std::shared_ptr&lt; EnemyState &gt; &amp;enemyState, const std::shared_ptr&lt; Zone &gt; &amp;zone, bool sendToAll, bool queue=false)</arglist>
    </member>
    <member kind="function" protection="private">
      <type>void</type>
      <name>UpdateStatusEffectStates</name>
      <anchorfile>classchannel_1_1ZoneManager.html</anchorfile>
      <anchor>a14820856603a59055ccbe0d280b21931</anchor>
      <arglist>(const std::shared_ptr&lt; Zone &gt; &amp;zone, uint32_t now)</arglist>
    </member>
    <member kind="variable" protection="private">
      <type>std::set&lt; uint32_t &gt;</type>
      <name>mActiveZones</name>
      <anchorfile>classchannel_1_1ZoneManager.html</anchorfile>
      <anchor>a0126b10592bf3deae95c819a1850cf64</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>std::set&lt; uint32_t &gt;</type>
      <name>mAllTimeRestrictZones</name>
      <anchorfile>classchannel_1_1ZoneManager.html</anchorfile>
      <anchor>a7f0bd8893ec34d587ab466fef943e62b</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>std::unordered_map&lt; uint32_t, std::shared_ptr&lt; DynamicMap &gt; &gt;</type>
      <name>mDynamicMaps</name>
      <anchorfile>classchannel_1_1ZoneManager.html</anchorfile>
      <anchor>ae22176c64e62b0d908eb2f9a55eaaf87</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>std::unordered_map&lt; int32_t, uint32_t &gt;</type>
      <name>mEntityMap</name>
      <anchorfile>classchannel_1_1ZoneManager.html</anchorfile>
      <anchor>ad3bd02631767c1e975d83319f4c24aae</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>std::unordered_map&lt; uint32_t, std::unordered_map&lt; uint32_t, uint32_t &gt; &gt;</type>
      <name>mGlobalZoneMap</name>
      <anchorfile>classchannel_1_1ZoneManager.html</anchorfile>
      <anchor>a922cf90193a2f70380497a23ac8c0017</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>std::mutex</type>
      <name>mLock</name>
      <anchorfile>classchannel_1_1ZoneManager.html</anchorfile>
      <anchor>a72c35a17ce145ae3ad44a46264ec0c2a</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>uint32_t</type>
      <name>mNextZoneID</name>
      <anchorfile>classchannel_1_1ZoneManager.html</anchorfile>
      <anchor>af70cb6b23c50451f3c09ed162f5cfda3</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>uint32_t</type>
      <name>mNextZoneInstanceID</name>
      <anchorfile>classchannel_1_1ZoneManager.html</anchorfile>
      <anchor>aab93701a6a6a64ac39f65368d4995ac5</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>std::weak_ptr&lt; ChannelServer &gt;</type>
      <name>mServer</name>
      <anchorfile>classchannel_1_1ZoneManager.html</anchorfile>
      <anchor>ad7bca90b5131995bbfde92f7edfe5664</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>std::map&lt; WorldClockTime, std::set&lt; uint32_t &gt; &gt;</type>
      <name>mSpawnTimeRestrictZones</name>
      <anchorfile>classchannel_1_1ZoneManager.html</anchorfile>
      <anchor>ab8b4e4cd9162e9b1a82dc1b47bd76d45</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>std::set&lt; uint32_t &gt;</type>
      <name>mTimeRestrictUpdatedZones</name>
      <anchorfile>classchannel_1_1ZoneManager.html</anchorfile>
      <anchor>a4522d789989f16379768a3b3202c2a21</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>std::unordered_map&lt; std::string, std::shared_ptr&lt; ZoneGeometry &gt; &gt;</type>
      <name>mZoneGeometry</name>
      <anchorfile>classchannel_1_1ZoneManager.html</anchorfile>
      <anchor>a7998d8f09b29e40c48f38aeab58a56b7</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>std::unordered_map&lt; int32_t, uint32_t &gt;</type>
      <name>mZoneInstanceAccess</name>
      <anchorfile>classchannel_1_1ZoneManager.html</anchorfile>
      <anchor>afad0128886d48b8f3c75c8310447888c</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>std::unordered_map&lt; uint32_t, std::shared_ptr&lt; ZoneInstance &gt; &gt;</type>
      <name>mZoneInstances</name>
      <anchorfile>classchannel_1_1ZoneManager.html</anchorfile>
      <anchor>a1f276d7152b1fc0db25b19094c3509ca</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>std::unordered_map&lt; uint32_t, std::shared_ptr&lt; Zone &gt; &gt;</type>
      <name>mZones</name>
      <anchorfile>classchannel_1_1ZoneManager.html</anchorfile>
      <anchor>a3b2ea06a452af7795a9b297bea2ff3dd</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>channel::ZoneQmpShape</name>
    <filename>classchannel_1_1ZoneQmpShape.html</filename>
    <base>channel::ZoneShape</base>
    <member kind="function">
      <type></type>
      <name>ZoneQmpShape</name>
      <anchorfile>classchannel_1_1ZoneQmpShape.html</anchorfile>
      <anchor>a48119304cac1aba4a83b407a75aeb918</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>Collides</name>
      <anchorfile>classchannel_1_1ZoneShape.html</anchorfile>
      <anchor>a670b3b136576dfadb0c6562633e48767</anchor>
      <arglist>(const Line &amp;path, Point &amp;point, Line &amp;surface) const </arglist>
    </member>
    <member kind="variable">
      <type>std::array&lt; Point, 2 &gt;</type>
      <name>Boundaries</name>
      <anchorfile>classchannel_1_1ZoneShape.html</anchorfile>
      <anchor>aef5e78b25f35fa427aabba55515f57a9</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>libcomp::String</type>
      <name>ElementName</name>
      <anchorfile>classchannel_1_1ZoneQmpShape.html</anchorfile>
      <anchor>a2c10e59f24d6b04b50193cb93e7223e3</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>uint32_t</type>
      <name>InstanceID</name>
      <anchorfile>classchannel_1_1ZoneQmpShape.html</anchorfile>
      <anchor>a4531d71b9b6eab3b1bbcaa07b12708d9</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>bool</type>
      <name>IsLine</name>
      <anchorfile>classchannel_1_1ZoneShape.html</anchorfile>
      <anchor>a065def0a0c1df7eb8e7aa5b058a63309</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>std::list&lt; Line &gt;</type>
      <name>Lines</name>
      <anchorfile>classchannel_1_1ZoneShape.html</anchorfile>
      <anchor>a5ba5b7e1063b9e7359dd7991bef32b0d</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>uint32_t</type>
      <name>ShapeID</name>
      <anchorfile>classchannel_1_1ZoneQmpShape.html</anchorfile>
      <anchor>a55cc0e5b16ac75d221ccd030a4f1fa95</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>std::list&lt; Point &gt;</type>
      <name>Vertices</name>
      <anchorfile>classchannel_1_1ZoneShape.html</anchorfile>
      <anchor>a5455c8f10110c5628974f69ec1c3d2f8</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>channel::ZoneShape</name>
    <filename>classchannel_1_1ZoneShape.html</filename>
    <member kind="function">
      <type></type>
      <name>ZoneShape</name>
      <anchorfile>classchannel_1_1ZoneShape.html</anchorfile>
      <anchor>a1f56375b6625c8469484fd25208837c6</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>Collides</name>
      <anchorfile>classchannel_1_1ZoneShape.html</anchorfile>
      <anchor>a670b3b136576dfadb0c6562633e48767</anchor>
      <arglist>(const Line &amp;path, Point &amp;point, Line &amp;surface) const </arglist>
    </member>
    <member kind="variable">
      <type>std::array&lt; Point, 2 &gt;</type>
      <name>Boundaries</name>
      <anchorfile>classchannel_1_1ZoneShape.html</anchorfile>
      <anchor>aef5e78b25f35fa427aabba55515f57a9</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>bool</type>
      <name>IsLine</name>
      <anchorfile>classchannel_1_1ZoneShape.html</anchorfile>
      <anchor>a065def0a0c1df7eb8e7aa5b058a63309</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>std::list&lt; Line &gt;</type>
      <name>Lines</name>
      <anchorfile>classchannel_1_1ZoneShape.html</anchorfile>
      <anchor>a5ba5b7e1063b9e7359dd7991bef32b0d</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>std::list&lt; Point &gt;</type>
      <name>Vertices</name>
      <anchorfile>classchannel_1_1ZoneShape.html</anchorfile>
      <anchor>a5455c8f10110c5628974f69ec1c3d2f8</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>channel::ZoneSpotShape</name>
    <filename>classchannel_1_1ZoneSpotShape.html</filename>
    <base>channel::ZoneShape</base>
    <member kind="function">
      <type></type>
      <name>ZoneSpotShape</name>
      <anchorfile>classchannel_1_1ZoneSpotShape.html</anchorfile>
      <anchor>a65adf6e2c83c1468215a51bc8ed7ff71</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>Collides</name>
      <anchorfile>classchannel_1_1ZoneShape.html</anchorfile>
      <anchor>a670b3b136576dfadb0c6562633e48767</anchor>
      <arglist>(const Line &amp;path, Point &amp;point, Line &amp;surface) const </arglist>
    </member>
    <member kind="variable">
      <type>std::array&lt; Point, 2 &gt;</type>
      <name>Boundaries</name>
      <anchorfile>classchannel_1_1ZoneShape.html</anchorfile>
      <anchor>aef5e78b25f35fa427aabba55515f57a9</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>std::shared_ptr&lt; objects::MiSpotData &gt;</type>
      <name>Definition</name>
      <anchorfile>classchannel_1_1ZoneSpotShape.html</anchorfile>
      <anchor>a44529bc261aa122959daaa6adcf82de0</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>bool</type>
      <name>IsLine</name>
      <anchorfile>classchannel_1_1ZoneShape.html</anchorfile>
      <anchor>a065def0a0c1df7eb8e7aa5b058a63309</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>std::list&lt; Line &gt;</type>
      <name>Lines</name>
      <anchorfile>classchannel_1_1ZoneShape.html</anchorfile>
      <anchor>a5ba5b7e1063b9e7359dd7991bef32b0d</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>std::list&lt; Point &gt;</type>
      <name>Vertices</name>
      <anchorfile>classchannel_1_1ZoneShape.html</anchorfile>
      <anchor>a5455c8f10110c5628974f69ec1c3d2f8</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="namespace">
    <name>channel</name>
    <filename>namespacechannel.html</filename>
    <namespace>channel::Parsers</namespace>
    <class kind="class">channel::AccountManager</class>
    <class kind="struct">channel::ActionContext</class>
    <class kind="class">channel::ActionManager</class>
    <class kind="class">channel::ActiveEntityState</class>
    <class kind="class">channel::ActiveEntityStateImp</class>
    <class kind="class">channel::AICommand</class>
    <class kind="class">channel::AIManager</class>
    <class kind="class">channel::AIMoveCommand</class>
    <class kind="class">channel::AIScriptedCommand</class>
    <class kind="class">channel::AIState</class>
    <class kind="class">channel::AIUseSkillCommand</class>
    <class kind="class">channel::BazaarState</class>
    <class kind="class">channel::ChannelClientConnection</class>
    <class kind="class">channel::ChannelServer</class>
    <class kind="class">channel::ChannelSyncManager</class>
    <class kind="class">channel::CharacterManager</class>
    <class kind="class">channel::CharacterState</class>
    <class kind="class">channel::ChatManager</class>
    <class kind="class">channel::ClientState</class>
    <class kind="class">channel::DemonState</class>
    <class kind="class">channel::DynamicMap</class>
    <class kind="class">channel::EnemyState</class>
    <class kind="class">channel::EntityState</class>
    <class kind="struct">channel::EventContext</class>
    <class kind="class">channel::EventManager</class>
    <class kind="class">channel::FusionManager</class>
    <class kind="class">channel::Line</class>
    <class kind="class">channel::ManagerClientPacket</class>
    <class kind="class">channel::ManagerConnection</class>
    <class kind="class">channel::ManagerSystem</class>
    <class kind="class">channel::PlasmaPoint</class>
    <class kind="class">channel::PlasmaState</class>
    <class kind="class">channel::Point</class>
    <class kind="class">channel::ProcessingSkill</class>
    <class kind="class">channel::SkillExecutionContext</class>
    <class kind="class">channel::SkillManager</class>
    <class kind="class">channel::SkillTargetResult</class>
    <class kind="class">channel::TokuseiManager</class>
    <class kind="class">channel::WorldClock</class>
    <class kind="class">channel::WorldClockTime</class>
    <class kind="class">channel::Zone</class>
    <class kind="class">channel::ZoneGeometry</class>
    <class kind="class">channel::ZoneInstance</class>
    <class kind="class">channel::ZoneManager</class>
    <class kind="class">channel::ZoneQmpShape</class>
    <class kind="class">channel::ZoneShape</class>
    <class kind="class">channel::ZoneSpotShape</class>
    <member kind="typedef">
      <type>float</type>
      <name>ClientTime</name>
      <anchorfile>namespacechannel.html</anchorfile>
      <anchor>a48830c9521c432b7478cc266bd57b172</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>ServerTime(*</type>
      <name>GET_SERVER_TIME</name>
      <anchorfile>namespacechannel.html</anchorfile>
      <anchor>ab27a841c8bc25a162bac4115e2089307</anchor>
      <arglist>)()</arglist>
    </member>
    <member kind="typedef">
      <type>EntityState&lt; objects::LootBox &gt;</type>
      <name>LootBoxState</name>
      <anchorfile>namespacechannel.html</anchorfile>
      <anchor>aadc2bf0d64180781705024f660526389</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>EntityState&lt; objects::ServerNPC &gt;</type>
      <name>NPCState</name>
      <anchorfile>namespacechannel.html</anchorfile>
      <anchor>afb0d4aa49728994544c41bf8d1a1e02e</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>std::unordered_map&lt; uint32_t, uint64_t &gt;</type>
      <name>RelativeTimeMap</name>
      <anchorfile>namespacechannel.html</anchorfile>
      <anchor>a14eef5d98e622aebad487c9f0a2c25ee</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>EntityState&lt; objects::ServerObject &gt;</type>
      <name>ServerObjectState</name>
      <anchorfile>namespacechannel.html</anchorfile>
      <anchor>a36a16a9dd9ae96bf5268513b9ce86c8e</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>uint64_t</type>
      <name>ServerTime</name>
      <anchorfile>namespacechannel.html</anchorfile>
      <anchor>a3645d2f2639d292478c3287540fc9052</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>AICommandType_t</name>
      <anchorfile>namespacechannel.html</anchorfile>
      <anchor>aaf2e50152d91fa2bd5167b1df358468f</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>NONE</name>
      <anchorfile>namespacechannel.html</anchorfile>
      <anchor>aaf2e50152d91fa2bd5167b1df358468fa3cbbfe48a743c27c3a903bbaa680b2a2</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>MOVE</name>
      <anchorfile>namespacechannel.html</anchorfile>
      <anchor>aaf2e50152d91fa2bd5167b1df358468fa0daed1c5edc9cd69fcfc61996b752e1f</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>USE_SKILL</name>
      <anchorfile>namespacechannel.html</anchorfile>
      <anchor>aaf2e50152d91fa2bd5167b1df358468fa86d23c33f6945848066094d158b39a41</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SCRIPTED</name>
      <anchorfile>namespacechannel.html</anchorfile>
      <anchor>aaf2e50152d91fa2bd5167b1df358468fad632772b6e465e1d09aa4adeae03773d</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>AIStatus_t</name>
      <anchorfile>namespacechannel.html</anchorfile>
      <anchor>a4a9fbe80b5390309b933949e4db1da48</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>IDLE</name>
      <anchorfile>namespacechannel.html</anchorfile>
      <anchor>a4a9fbe80b5390309b933949e4db1da48a44d90ba02e1b0b1214d3e834149db70e</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>WANDERING</name>
      <anchorfile>namespacechannel.html</anchorfile>
      <anchor>a4a9fbe80b5390309b933949e4db1da48aee1e8c3c6c353d111d46e0fd98152994</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>AGGRO</name>
      <anchorfile>namespacechannel.html</anchorfile>
      <anchor>a4a9fbe80b5390309b933949e4db1da48aa45df7b2a577d15d8622433de2361e03</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>COMBAT</name>
      <anchorfile>namespacechannel.html</anchorfile>
      <anchor>a4a9fbe80b5390309b933949e4db1da48a0b012e49498d31e33191354e1020e034</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>ChatType_t</name>
      <anchorfile>namespacechannel.html</anchorfile>
      <anchor>ab585df32ef6d9dac69fb84f8918dcca7</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>CHAT_PARTY</name>
      <anchorfile>namespacechannel.html</anchorfile>
      <anchor>ab585df32ef6d9dac69fb84f8918dcca7aabc483a46f7e8c2c6465d55bb1c47ab1</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>CHAT_SHOUT</name>
      <anchorfile>namespacechannel.html</anchorfile>
      <anchor>ab585df32ef6d9dac69fb84f8918dcca7a4f0d1b4f1e893948234a38d4c4f07c15</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>CHAT_SAY</name>
      <anchorfile>namespacechannel.html</anchorfile>
      <anchor>ab585df32ef6d9dac69fb84f8918dcca7af2066ae1b9873fba3e8cfc46b5523dec</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>CHAT_TELL</name>
      <anchorfile>namespacechannel.html</anchorfile>
      <anchor>ab585df32ef6d9dac69fb84f8918dcca7a7d4675d40aba1c3e22cea4d5151eb266</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>CHAT_SELF</name>
      <anchorfile>namespacechannel.html</anchorfile>
      <anchor>ab585df32ef6d9dac69fb84f8918dcca7a8c3084a385c113f0400e3a018d556ef3</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>CHAT_CLAN</name>
      <anchorfile>namespacechannel.html</anchorfile>
      <anchor>ab585df32ef6d9dac69fb84f8918dcca7a1aa29a8b9681a75558585fea165de4f2</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>CHAT_TEAM</name>
      <anchorfile>namespacechannel.html</anchorfile>
      <anchor>ab585df32ef6d9dac69fb84f8918dcca7abf54b99490933a41fdb1ed10efaa44de</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>ChatVis_t</name>
      <anchorfile>namespacechannel.html</anchorfile>
      <anchor>a9de073bb847525edca0e9977a12da07c</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>CHAT_VIS_SELF</name>
      <anchorfile>namespacechannel.html</anchorfile>
      <anchor>a9de073bb847525edca0e9977a12da07caf75a0a2e246d071f72e7c8c23c7c4534</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>CHAT_VIS_PARTY</name>
      <anchorfile>namespacechannel.html</anchorfile>
      <anchor>a9de073bb847525edca0e9977a12da07cae84bb27897e6bbbc4678e4fe178b361c</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>CHAT_VIS_ZONE</name>
      <anchorfile>namespacechannel.html</anchorfile>
      <anchor>a9de073bb847525edca0e9977a12da07ca311137d932ffb116ae40e05015daf1c6</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>CHAT_VIS_RANGE</name>
      <anchorfile>namespacechannel.html</anchorfile>
      <anchor>a9de073bb847525edca0e9977a12da07cacf7fc04483bb3eee8459b28699d439a9</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>CHAT_VIS_CLAN</name>
      <anchorfile>namespacechannel.html</anchorfile>
      <anchor>a9de073bb847525edca0e9977a12da07ca8355e6beb612304df2d1e194146b3619</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>CHAT_VIS_TEAM</name>
      <anchorfile>namespacechannel.html</anchorfile>
      <anchor>a9de073bb847525edca0e9977a12da07ca8a78a82766d988523d12552f86886851</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>LogoutCode_t</name>
      <anchorfile>namespacechannel.html</anchorfile>
      <anchor>ade16ce877e5df692030e3543d76b1e75</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>LOGOUT_CODE_UNKNOWN_MIN</name>
      <anchorfile>namespacechannel.html</anchorfile>
      <anchor>ade16ce877e5df692030e3543d76b1e75a7055f4b2966e4f6dcbc57779e90378a1</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>LOGOUT_CODE_QUIT</name>
      <anchorfile>namespacechannel.html</anchorfile>
      <anchor>ade16ce877e5df692030e3543d76b1e75a84cfc137ccb674488bbd8ccf3b28406c</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>LOGOUT_CODE_CANCEL</name>
      <anchorfile>namespacechannel.html</anchorfile>
      <anchor>ade16ce877e5df692030e3543d76b1e75af898e5700a13e40bbfb99f168a7ff76b</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>LOGOUT_CODE_SWITCH</name>
      <anchorfile>namespacechannel.html</anchorfile>
      <anchor>ade16ce877e5df692030e3543d76b1e75a9116879a6c9cf80094a48e39cb27d965</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>LOGOUT_CODE_UNKNOWN_MAX</name>
      <anchorfile>namespacechannel.html</anchorfile>
      <anchor>ade16ce877e5df692030e3543d76b1e75a1c949a28a2766bd9f780ae3f48f02b9a</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type>int8_t</type>
      <name>ChannelSyncManager::Update&lt; objects::SearchEntry &gt;</name>
      <anchorfile>namespacechannel.html</anchorfile>
      <anchor>a8c43c37ab7136499fbb877011f2ee5db</anchor>
      <arglist>(const libcomp::String &amp;type, const std::shared_ptr&lt; libcomp::Object &gt; &amp;obj, bool isRemove, const libcomp::String &amp;source)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static ClientState *</type>
      <name>state</name>
      <anchorfile>namespacechannel.html</anchorfile>
      <anchor>a42a66bec35cf06d954702b2d0e1ecca3</anchor>
      <arglist>(const std::shared_ptr&lt; libcomp::TcpConnection &gt; &amp;connection)</arglist>
    </member>
    <member kind="variable">
      <type>const uint16_t</type>
      <name>AI_SKILL_TYPE_CLSR</name>
      <anchorfile>namespacechannel.html</anchorfile>
      <anchor>a005fd53a19ebdfe9647c6ccb62c9dcf5</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const uint16_t</type>
      <name>AI_SKILL_TYPE_DEF</name>
      <anchorfile>namespacechannel.html</anchorfile>
      <anchor>a9fe2a79932e028999c53e3721c21d9e5</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const uint16_t</type>
      <name>AI_SKILL_TYPE_HEAL</name>
      <anchorfile>namespacechannel.html</anchorfile>
      <anchor>aee6a4d7340f3831b51324b4c71d46f2d</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const uint16_t</type>
      <name>AI_SKILL_TYPE_LNGR</name>
      <anchorfile>namespacechannel.html</anchorfile>
      <anchor>abebe3753457294da24c83239351a90e9</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const uint16_t</type>
      <name>AI_SKILL_TYPE_SUPPORT</name>
      <anchorfile>namespacechannel.html</anchorfile>
      <anchor>a31b0f61262412a3c18b17a9033033d23</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const uint16_t</type>
      <name>AI_SKILL_TYPES_ALL</name>
      <anchorfile>namespacechannel.html</anchorfile>
      <anchor>a7f9a8919790b4152a424ad64cefc2c8d</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const uint16_t</type>
      <name>AI_SKILL_TYPES_ALLY</name>
      <anchorfile>namespacechannel.html</anchorfile>
      <anchor>aeb94b90bc217b70b7aafe63080c8da98</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const uint16_t</type>
      <name>AI_SKILL_TYPES_ENEMY</name>
      <anchorfile>namespacechannel.html</anchorfile>
      <anchor>ab142235686532c75b9b5c0a6c343a2cc</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="namespace">
    <name>channel::Parsers</name>
    <filename>namespacechannel_1_1Parsers.html</filename>
    <member kind="function">
      <type></type>
      <name>PACKET_PARSER_DECL</name>
      <anchorfile>namespacechannel_1_1Parsers.html</anchorfile>
      <anchor>a890cb5f2277a251d95ef6954311b4bf3</anchor>
      <arglist>(Unsupported)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>PACKET_PARSER_DECL</name>
      <anchorfile>namespacechannel_1_1Parsers.html</anchorfile>
      <anchor>ae94a1dc1778fc40d032d5dd119c08a8f</anchor>
      <arglist>(Login)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>PACKET_PARSER_DECL</name>
      <anchorfile>namespacechannel_1_1Parsers.html</anchorfile>
      <anchor>af9974f3648ff70d38d27b96e2fe6a3ee</anchor>
      <arglist>(Auth)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>PACKET_PARSER_DECL</name>
      <anchorfile>namespacechannel_1_1Parsers.html</anchorfile>
      <anchor>afd838f6be6ea508f41e185d861fa433a</anchor>
      <arglist>(SendData)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>PACKET_PARSER_DECL</name>
      <anchorfile>namespacechannel_1_1Parsers.html</anchorfile>
      <anchor>ad5aa3573786b0bc4ca0bba6c4c7e7c6e</anchor>
      <arglist>(Logout)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>PACKET_PARSER_DECL</name>
      <anchorfile>namespacechannel_1_1Parsers.html</anchorfile>
      <anchor>a58ecd86f14c648837ee0fd1d849b72fe</anchor>
      <arglist>(PopulateZone)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>PACKET_PARSER_DECL</name>
      <anchorfile>namespacechannel_1_1Parsers.html</anchorfile>
      <anchor>adc7a0d6dd889731cd5302c60e171b166</anchor>
      <arglist>(Move)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>PACKET_PARSER_DECL</name>
      <anchorfile>namespacechannel_1_1Parsers.html</anchorfile>
      <anchor>aff977610c5726e6a7421e05c83690b09</anchor>
      <arglist>(Pivot)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>PACKET_PARSER_DECL</name>
      <anchorfile>namespacechannel_1_1Parsers.html</anchorfile>
      <anchor>aceba0f771ce9f6213f53fc60566c531b</anchor>
      <arglist>(Chat)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>PACKET_PARSER_DECL</name>
      <anchorfile>namespacechannel_1_1Parsers.html</anchorfile>
      <anchor>a54551b53ee443919b8c6800a9ae6938f</anchor>
      <arglist>(Tell)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>PACKET_PARSER_DECL</name>
      <anchorfile>namespacechannel_1_1Parsers.html</anchorfile>
      <anchor>ad6556b57169a6dc20d3597460011e63f</anchor>
      <arglist>(SkillActivate)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>PACKET_PARSER_DECL</name>
      <anchorfile>namespacechannel_1_1Parsers.html</anchorfile>
      <anchor>a375ed59ce216032df0ffc96b9e89fd1e</anchor>
      <arglist>(SkillExecute)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>PACKET_PARSER_DECL</name>
      <anchorfile>namespacechannel_1_1Parsers.html</anchorfile>
      <anchor>a4cc2cdd166b983162e48bc3337f6ece5</anchor>
      <arglist>(SkillCancel)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>PACKET_PARSER_DECL</name>
      <anchorfile>namespacechannel_1_1Parsers.html</anchorfile>
      <anchor>a5d0261a6ac5128422a47a2f203ecb142</anchor>
      <arglist>(ExpertiseDown)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>PACKET_PARSER_DECL</name>
      <anchorfile>namespacechannel_1_1Parsers.html</anchorfile>
      <anchor>af84b1b79a40145ec23b7ce492daa5126</anchor>
      <arglist>(AllocateSkillPoint)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>PACKET_PARSER_DECL</name>
      <anchorfile>namespacechannel_1_1Parsers.html</anchorfile>
      <anchor>a47a80476c8e9f1f4a1179841d87acd15</anchor>
      <arglist>(ToggleExpertise)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>PACKET_PARSER_DECL</name>
      <anchorfile>namespacechannel_1_1Parsers.html</anchorfile>
      <anchor>adec0c81a045a2e38cf309cc0a288b41b</anchor>
      <arglist>(LearnSkill)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>PACKET_PARSER_DECL</name>
      <anchorfile>namespacechannel_1_1Parsers.html</anchorfile>
      <anchor>a4a997fc73fc8435871bb8d6a0cb6e8d4</anchor>
      <arglist>(UpdateDemonSkill)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>PACKET_PARSER_DECL</name>
      <anchorfile>namespacechannel_1_1Parsers.html</anchorfile>
      <anchor>a8eb6d527ef3143c8f816d0c2d7afa7a7</anchor>
      <arglist>(KeepAlive)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>PACKET_PARSER_DECL</name>
      <anchorfile>namespacechannel_1_1Parsers.html</anchorfile>
      <anchor>ae2c2e144c58ec936f1b19004b3ec68d5</anchor>
      <arglist>(FixObjectPosition)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>PACKET_PARSER_DECL</name>
      <anchorfile>namespacechannel_1_1Parsers.html</anchorfile>
      <anchor>a8996afeb3cf3f0ddf20f39bdef391fee</anchor>
      <arglist>(State)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>PACKET_PARSER_DECL</name>
      <anchorfile>namespacechannel_1_1Parsers.html</anchorfile>
      <anchor>a9eaa762ce937bc7ba61eb37892ef2466</anchor>
      <arglist>(PartnerDemonData)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>PACKET_PARSER_DECL</name>
      <anchorfile>namespacechannel_1_1Parsers.html</anchorfile>
      <anchor>a68cc5203ee302a6f63481e8040a6b66c</anchor>
      <arglist>(DemonBox)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>PACKET_PARSER_DECL</name>
      <anchorfile>namespacechannel_1_1Parsers.html</anchorfile>
      <anchor>a2bbf1990d06af02f7a7962b484bf39d7</anchor>
      <arglist>(DemonBoxData)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>PACKET_PARSER_DECL</name>
      <anchorfile>namespacechannel_1_1Parsers.html</anchorfile>
      <anchor>a70659754fc952f5999ba5c99ff32277e</anchor>
      <arglist>(ChannelList)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>PACKET_PARSER_DECL</name>
      <anchorfile>namespacechannel_1_1Parsers.html</anchorfile>
      <anchor>ad1c93f70c8ee86897b0a76d2b4fbf515</anchor>
      <arglist>(ReviveCharacter)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>PACKET_PARSER_DECL</name>
      <anchorfile>namespacechannel_1_1Parsers.html</anchorfile>
      <anchor>ab052a097caf91220604c2c536a4c62f0</anchor>
      <arglist>(StopMovement)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>PACKET_PARSER_DECL</name>
      <anchorfile>namespacechannel_1_1Parsers.html</anchorfile>
      <anchor>af29db7b8a5606f6cfdddfe31634fa694</anchor>
      <arglist>(SpotTriggered)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>PACKET_PARSER_DECL</name>
      <anchorfile>namespacechannel_1_1Parsers.html</anchorfile>
      <anchor>a5aa4d371b2ccc6a0674a2a41fc1c345c</anchor>
      <arglist>(WorldTime)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>PACKET_PARSER_DECL</name>
      <anchorfile>namespacechannel_1_1Parsers.html</anchorfile>
      <anchor>a39a8dbe8207e0e7f93cab1cab42a690f</anchor>
      <arglist>(ItemBox)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>PACKET_PARSER_DECL</name>
      <anchorfile>namespacechannel_1_1Parsers.html</anchorfile>
      <anchor>ac9210c5b0335d4a1d155197d692f5af6</anchor>
      <arglist>(ItemMove)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>PACKET_PARSER_DECL</name>
      <anchorfile>namespacechannel_1_1Parsers.html</anchorfile>
      <anchor>ac5a9817254b3343089b1afc0829d9ed3</anchor>
      <arglist>(ItemDrop)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>PACKET_PARSER_DECL</name>
      <anchorfile>namespacechannel_1_1Parsers.html</anchorfile>
      <anchor>aeb4e547a8d94bc840bf110e06427be3c</anchor>
      <arglist>(ItemStack)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>PACKET_PARSER_DECL</name>
      <anchorfile>namespacechannel_1_1Parsers.html</anchorfile>
      <anchor>a23dad0722bee33158d469a7cd11420eb</anchor>
      <arglist>(EquipmentList)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>PACKET_PARSER_DECL</name>
      <anchorfile>namespacechannel_1_1Parsers.html</anchorfile>
      <anchor>adc3b526a69c9bbe05358cc2fe201c5af</anchor>
      <arglist>(TradeRequest)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>PACKET_PARSER_DECL</name>
      <anchorfile>namespacechannel_1_1Parsers.html</anchorfile>
      <anchor>a4f0239b72b70a66e2472647a65d621e9</anchor>
      <arglist>(TradeAccept)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>PACKET_PARSER_DECL</name>
      <anchorfile>namespacechannel_1_1Parsers.html</anchorfile>
      <anchor>aad13e4e73e4928472fd8ef7abaae5673</anchor>
      <arglist>(TradeAddItem)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>PACKET_PARSER_DECL</name>
      <anchorfile>namespacechannel_1_1Parsers.html</anchorfile>
      <anchor>a7dcd32056226457879e1c5e14a07d81d</anchor>
      <arglist>(TradeLock)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>PACKET_PARSER_DECL</name>
      <anchorfile>namespacechannel_1_1Parsers.html</anchorfile>
      <anchor>a3620d29f3692e7d82d4e446ca4971142</anchor>
      <arglist>(TradeFinish)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>PACKET_PARSER_DECL</name>
      <anchorfile>namespacechannel_1_1Parsers.html</anchorfile>
      <anchor>a020ce1a7780283eaf1564a3c6d227ad3</anchor>
      <arglist>(TradeCancel)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>PACKET_PARSER_DECL</name>
      <anchorfile>namespacechannel_1_1Parsers.html</anchorfile>
      <anchor>a630bb6dc909e41948dd6a75cd167710f</anchor>
      <arglist>(LootItem)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>PACKET_PARSER_DECL</name>
      <anchorfile>namespacechannel_1_1Parsers.html</anchorfile>
      <anchor>af3fdc1abd66185ffb49aed8f5696f6cc</anchor>
      <arglist>(CashBalance)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>PACKET_PARSER_DECL</name>
      <anchorfile>namespacechannel_1_1Parsers.html</anchorfile>
      <anchor>addd49b6b7bbb441be8eee90fb30f86de</anchor>
      <arglist>(ShopData)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>PACKET_PARSER_DECL</name>
      <anchorfile>namespacechannel_1_1Parsers.html</anchorfile>
      <anchor>a88e6228ca3bc38a1a5b529bba42e2ca1</anchor>
      <arglist>(ShopBuy)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>PACKET_PARSER_DECL</name>
      <anchorfile>namespacechannel_1_1Parsers.html</anchorfile>
      <anchor>a6672cf56f2e2e47a2e726dc00f448bb6</anchor>
      <arglist>(ShopSell)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>PACKET_PARSER_DECL</name>
      <anchorfile>namespacechannel_1_1Parsers.html</anchorfile>
      <anchor>ad0fd6146a2dd576b81b10eeb0dfd1ae6</anchor>
      <arglist>(DemonBoxMove)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>PACKET_PARSER_DECL</name>
      <anchorfile>namespacechannel_1_1Parsers.html</anchorfile>
      <anchor>a5371bec1f165232373bc3b245e39453c</anchor>
      <arglist>(DismissDemon)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>PACKET_PARSER_DECL</name>
      <anchorfile>namespacechannel_1_1Parsers.html</anchorfile>
      <anchor>aa6b227c67e36a5aa330ab9d214b61cf1</anchor>
      <arglist>(PostList)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>PACKET_PARSER_DECL</name>
      <anchorfile>namespacechannel_1_1Parsers.html</anchorfile>
      <anchor>af4f0982929387c63c515a875ac8d6ed2</anchor>
      <arglist>(PostItem)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>PACKET_PARSER_DECL</name>
      <anchorfile>namespacechannel_1_1Parsers.html</anchorfile>
      <anchor>a7ac9ebc9c94884f21b7241cbbf494f94</anchor>
      <arglist>(HotbarData)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>PACKET_PARSER_DECL</name>
      <anchorfile>namespacechannel_1_1Parsers.html</anchorfile>
      <anchor>a96353b26d8bafd3689afb50d8a4dbdf5</anchor>
      <arglist>(HotbarSave)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>PACKET_PARSER_DECL</name>
      <anchorfile>namespacechannel_1_1Parsers.html</anchorfile>
      <anchor>a4e0ed38608743f97b5b25b9bcefef23e</anchor>
      <arglist>(EventResponse)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>PACKET_PARSER_DECL</name>
      <anchorfile>namespacechannel_1_1Parsers.html</anchorfile>
      <anchor>abada04544198be08513edea636d47632</anchor>
      <arglist>(ValuableList)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>PACKET_PARSER_DECL</name>
      <anchorfile>namespacechannel_1_1Parsers.html</anchorfile>
      <anchor>acf07fca8bfe83921f13f920d79eca256</anchor>
      <arglist>(ObjectInteraction)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>PACKET_PARSER_DECL</name>
      <anchorfile>namespacechannel_1_1Parsers.html</anchorfile>
      <anchor>a165f2f252fac0eacd650a78627da2dcf</anchor>
      <arglist>(FriendInfo)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>PACKET_PARSER_DECL</name>
      <anchorfile>namespacechannel_1_1Parsers.html</anchorfile>
      <anchor>aba6a952289fcb1db2e1d19e2ee0483bc</anchor>
      <arglist>(FriendRequest)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>PACKET_PARSER_DECL</name>
      <anchorfile>namespacechannel_1_1Parsers.html</anchorfile>
      <anchor>ae4afb5e25f299297020c97db69bc1a51</anchor>
      <arglist>(FriendAddRemove)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>PACKET_PARSER_DECL</name>
      <anchorfile>namespacechannel_1_1Parsers.html</anchorfile>
      <anchor>a5a33715e1106d4f486ac66fecfb75e56</anchor>
      <arglist>(FriendData)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>PACKET_PARSER_DECL</name>
      <anchorfile>namespacechannel_1_1Parsers.html</anchorfile>
      <anchor>a668efb852fa09ad1961865864707caa6</anchor>
      <arglist>(PartyInvite)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>PACKET_PARSER_DECL</name>
      <anchorfile>namespacechannel_1_1Parsers.html</anchorfile>
      <anchor>adb5404562f34f462c66a473f583f7cff</anchor>
      <arglist>(PartyJoin)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>PACKET_PARSER_DECL</name>
      <anchorfile>namespacechannel_1_1Parsers.html</anchorfile>
      <anchor>abe70f0098f72fb301288919dbf9cc0a6</anchor>
      <arglist>(PartyCancel)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>PACKET_PARSER_DECL</name>
      <anchorfile>namespacechannel_1_1Parsers.html</anchorfile>
      <anchor>a3cf2e226f58f7c426f85597da5911d85</anchor>
      <arglist>(PartyLeave)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>PACKET_PARSER_DECL</name>
      <anchorfile>namespacechannel_1_1Parsers.html</anchorfile>
      <anchor>a50fe89e494f843bf3fc53039a4f1925f</anchor>
      <arglist>(PartyDisband)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>PACKET_PARSER_DECL</name>
      <anchorfile>namespacechannel_1_1Parsers.html</anchorfile>
      <anchor>a5c16d2fc87a2626f20fd682c1acbbb59</anchor>
      <arglist>(PartyLeaderUpdate)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>PACKET_PARSER_DECL</name>
      <anchorfile>namespacechannel_1_1Parsers.html</anchorfile>
      <anchor>aa6afe83f3cb369583ecef80c49a6f18a</anchor>
      <arglist>(PartyDropRule)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>PACKET_PARSER_DECL</name>
      <anchorfile>namespacechannel_1_1Parsers.html</anchorfile>
      <anchor>ab2414a25a48f13c8152826229aaf7d0a</anchor>
      <arglist>(PartyKick)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>PACKET_PARSER_DECL</name>
      <anchorfile>namespacechannel_1_1Parsers.html</anchorfile>
      <anchor>aac17be68d2368b9ac66f35aaaaa0ad2a</anchor>
      <arglist>(DemonFusion)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>PACKET_PARSER_DECL</name>
      <anchorfile>namespacechannel_1_1Parsers.html</anchorfile>
      <anchor>a77e6a64ef82b8fc367f216b3a606ee5f</anchor>
      <arglist>(LootDemonEggData)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>PACKET_PARSER_DECL</name>
      <anchorfile>namespacechannel_1_1Parsers.html</anchorfile>
      <anchor>af99c7851e6c8d53ff9194a27d7dcf866</anchor>
      <arglist>(Sync)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>PACKET_PARSER_DECL</name>
      <anchorfile>namespacechannel_1_1Parsers.html</anchorfile>
      <anchor>a9d1514f2fecb97acbfcfd4f9a523cb46</anchor>
      <arglist>(ShopRepair)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>PACKET_PARSER_DECL</name>
      <anchorfile>namespacechannel_1_1Parsers.html</anchorfile>
      <anchor>a867a4b406be96f53413c93b23feb3a06</anchor>
      <arglist>(Rotate)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>PACKET_PARSER_DECL</name>
      <anchorfile>namespacechannel_1_1Parsers.html</anchorfile>
      <anchor>a9461ec8b9b72d92fb658c01ac0760a2e</anchor>
      <arglist>(LootBossBox)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>PACKET_PARSER_DECL</name>
      <anchorfile>namespacechannel_1_1Parsers.html</anchorfile>
      <anchor>a7d8a187c85f630de3b7249942f974d4a</anchor>
      <arglist>(UnionFlag)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>PACKET_PARSER_DECL</name>
      <anchorfile>namespacechannel_1_1Parsers.html</anchorfile>
      <anchor>a2b531d86fb619b9c48e38c75a3c6206a</anchor>
      <arglist>(ItemDepoList)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>PACKET_PARSER_DECL</name>
      <anchorfile>namespacechannel_1_1Parsers.html</anchorfile>
      <anchor>a292547e979fd1fb803c236a210e5b2e7</anchor>
      <arglist>(DepoRent)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>PACKET_PARSER_DECL</name>
      <anchorfile>namespacechannel_1_1Parsers.html</anchorfile>
      <anchor>a18dd1ca93e8aa4d6cda0a9e03e36b91f</anchor>
      <arglist>(LootTreasureBox)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>PACKET_PARSER_DECL</name>
      <anchorfile>namespacechannel_1_1Parsers.html</anchorfile>
      <anchor>aac89e347abf54ed06bee16065e3eea48</anchor>
      <arglist>(QuestActiveList)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>PACKET_PARSER_DECL</name>
      <anchorfile>namespacechannel_1_1Parsers.html</anchorfile>
      <anchor>afdcdf45c216caf7b203049be8ed34b60</anchor>
      <arglist>(QuestCompletedList)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>PACKET_PARSER_DECL</name>
      <anchorfile>namespacechannel_1_1Parsers.html</anchorfile>
      <anchor>ae9dceae2d1fd4ef2358feda7206651e2</anchor>
      <arglist>(BazaarMarketOpen)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>PACKET_PARSER_DECL</name>
      <anchorfile>namespacechannel_1_1Parsers.html</anchorfile>
      <anchor>a7c7e38743d3a55f2a74c747f62dc5cee</anchor>
      <arglist>(BazaarMarketClose)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>PACKET_PARSER_DECL</name>
      <anchorfile>namespacechannel_1_1Parsers.html</anchorfile>
      <anchor>a0eaecdfbe68ff767c2dd186ea4fbd553</anchor>
      <arglist>(BazaarMarketInfo)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>PACKET_PARSER_DECL</name>
      <anchorfile>namespacechannel_1_1Parsers.html</anchorfile>
      <anchor>a530bc1f9739c74972633953452da30d2</anchor>
      <arglist>(BazaarItemAdd)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>PACKET_PARSER_DECL</name>
      <anchorfile>namespacechannel_1_1Parsers.html</anchorfile>
      <anchor>abd95198da7f89f9d15ae3015afcc4301</anchor>
      <arglist>(BazaarItemDrop)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>PACKET_PARSER_DECL</name>
      <anchorfile>namespacechannel_1_1Parsers.html</anchorfile>
      <anchor>a931bf1e0efedb09a2d429ececbbc027b</anchor>
      <arglist>(BazaarItemUpdate)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>PACKET_PARSER_DECL</name>
      <anchorfile>namespacechannel_1_1Parsers.html</anchorfile>
      <anchor>ae767a701adbf9b3e62bc9e333a10e3bf</anchor>
      <arglist>(BazaarItemBuy)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>PACKET_PARSER_DECL</name>
      <anchorfile>namespacechannel_1_1Parsers.html</anchorfile>
      <anchor>a187bf77fa9ab9a59fd480c908c34d5bb</anchor>
      <arglist>(BazaarMarketSales)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>PACKET_PARSER_DECL</name>
      <anchorfile>namespacechannel_1_1Parsers.html</anchorfile>
      <anchor>acb71c41375dd2e181d78233d6d1895b8</anchor>
      <arglist>(SearchEntrySelf)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>PACKET_PARSER_DECL</name>
      <anchorfile>namespacechannel_1_1Parsers.html</anchorfile>
      <anchor>ab484457df75d7d4a08e65ec3693706d8</anchor>
      <arglist>(SearchList)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>PACKET_PARSER_DECL</name>
      <anchorfile>namespacechannel_1_1Parsers.html</anchorfile>
      <anchor>aac50422a605d1e88453d5cd4ee3372d9</anchor>
      <arglist>(SearchEntryData)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>PACKET_PARSER_DECL</name>
      <anchorfile>namespacechannel_1_1Parsers.html</anchorfile>
      <anchor>a2698c51dc68d6698135f1dec412cfb46</anchor>
      <arglist>(SearchEntryRegister)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>PACKET_PARSER_DECL</name>
      <anchorfile>namespacechannel_1_1Parsers.html</anchorfile>
      <anchor>aa56673b5c6e896559795d431751d9b35</anchor>
      <arglist>(SearchEntryUpdate)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>PACKET_PARSER_DECL</name>
      <anchorfile>namespacechannel_1_1Parsers.html</anchorfile>
      <anchor>a2b40857ea2dc9096113747711b5982b3</anchor>
      <arglist>(SearchEntryRemove)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>PACKET_PARSER_DECL</name>
      <anchorfile>namespacechannel_1_1Parsers.html</anchorfile>
      <anchor>a1599782b2d3c9aede9689c0e076f7345</anchor>
      <arglist>(SearchAppReply)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>PACKET_PARSER_DECL</name>
      <anchorfile>namespacechannel_1_1Parsers.html</anchorfile>
      <anchor>a884c43ffd0b0cef85576339b1a8284ae</anchor>
      <arglist>(ClanDisband)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>PACKET_PARSER_DECL</name>
      <anchorfile>namespacechannel_1_1Parsers.html</anchorfile>
      <anchor>ab86edaa3a09f40c6deb035544ca4b168</anchor>
      <arglist>(ClanInvite)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>PACKET_PARSER_DECL</name>
      <anchorfile>namespacechannel_1_1Parsers.html</anchorfile>
      <anchor>ae55e907d160291adc39969c4f872b4b1</anchor>
      <arglist>(ClanJoin)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>PACKET_PARSER_DECL</name>
      <anchorfile>namespacechannel_1_1Parsers.html</anchorfile>
      <anchor>a0c31154f1d887d45ec79ad4ddc977699</anchor>
      <arglist>(ClanCancel)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>PACKET_PARSER_DECL</name>
      <anchorfile>namespacechannel_1_1Parsers.html</anchorfile>
      <anchor>acac5725342a37cb451fa2204e0aa1846</anchor>
      <arglist>(ClanKick)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>PACKET_PARSER_DECL</name>
      <anchorfile>namespacechannel_1_1Parsers.html</anchorfile>
      <anchor>a0f6b13564e2cc661cc1846363f7fc2c5</anchor>
      <arglist>(ClanMasterUpdate)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>PACKET_PARSER_DECL</name>
      <anchorfile>namespacechannel_1_1Parsers.html</anchorfile>
      <anchor>a382c9b486646a06009748617ea224dde</anchor>
      <arglist>(ClanSubMasterUpdate)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>PACKET_PARSER_DECL</name>
      <anchorfile>namespacechannel_1_1Parsers.html</anchorfile>
      <anchor>ac83fb8eacb404d58764ba3a45dbdfbb0</anchor>
      <arglist>(ClanLeave)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>PACKET_PARSER_DECL</name>
      <anchorfile>namespacechannel_1_1Parsers.html</anchorfile>
      <anchor>a4a8195d041badf945c2b2165f1bc7e15</anchor>
      <arglist>(ClanChat)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>PACKET_PARSER_DECL</name>
      <anchorfile>namespacechannel_1_1Parsers.html</anchorfile>
      <anchor>a0de2bd9544ee5b06d65517726d50939c</anchor>
      <arglist>(ClanInfo)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>PACKET_PARSER_DECL</name>
      <anchorfile>namespacechannel_1_1Parsers.html</anchorfile>
      <anchor>af6f96ea981f0a6544ec6746c4b227635</anchor>
      <arglist>(ClanList)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>PACKET_PARSER_DECL</name>
      <anchorfile>namespacechannel_1_1Parsers.html</anchorfile>
      <anchor>a203da5ded88fda102e36d1d3f29290b4</anchor>
      <arglist>(ClanData)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>PACKET_PARSER_DECL</name>
      <anchorfile>namespacechannel_1_1Parsers.html</anchorfile>
      <anchor>a959ed8eb0dc8a5d461c0510181a3cfde</anchor>
      <arglist>(ClanForm)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>PACKET_PARSER_DECL</name>
      <anchorfile>namespacechannel_1_1Parsers.html</anchorfile>
      <anchor>aabc2e2ed2be0aeb349347aab51e491a3</anchor>
      <arglist>(ItemPrice)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>PACKET_PARSER_DECL</name>
      <anchorfile>namespacechannel_1_1Parsers.html</anchorfile>
      <anchor>af5079ffbae1b6bfcc7ebcead985e5b2e</anchor>
      <arglist>(BazaarState)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>PACKET_PARSER_DECL</name>
      <anchorfile>namespacechannel_1_1Parsers.html</anchorfile>
      <anchor>a05232a28bee7851371c0b66e94ed59cd</anchor>
      <arglist>(BazaarClerkSet)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>PACKET_PARSER_DECL</name>
      <anchorfile>namespacechannel_1_1Parsers.html</anchorfile>
      <anchor>ac67841b30f5cc4d5da12feba93bcc655</anchor>
      <arglist>(BazaarPrice)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>PACKET_PARSER_DECL</name>
      <anchorfile>namespacechannel_1_1Parsers.html</anchorfile>
      <anchor>afa8b37592e160f8bbb5069fae0afd968</anchor>
      <arglist>(BazaarMarketInfoSelf)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>PACKET_PARSER_DECL</name>
      <anchorfile>namespacechannel_1_1Parsers.html</anchorfile>
      <anchor>ab234db94abbe5c786cfaaf7bfb690707</anchor>
      <arglist>(Warp)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>PACKET_PARSER_DECL</name>
      <anchorfile>namespacechannel_1_1Parsers.html</anchorfile>
      <anchor>aca62027849d85227c9d01dc7f52c0cb6</anchor>
      <arglist>(SkillExecuteInstant)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>PACKET_PARSER_DECL</name>
      <anchorfile>namespacechannel_1_1Parsers.html</anchorfile>
      <anchor>aeb24c5e444d103d9f47f37d868818e70</anchor>
      <arglist>(SyncCharacter)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>PACKET_PARSER_DECL</name>
      <anchorfile>namespacechannel_1_1Parsers.html</anchorfile>
      <anchor>a734995a7edcc63882a722310e0f95302</anchor>
      <arglist>(BazaarInteract)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>PACKET_PARSER_DECL</name>
      <anchorfile>namespacechannel_1_1Parsers.html</anchorfile>
      <anchor>abd645ff6755419293ffe5deecb1a8afa</anchor>
      <arglist>(SkillForget)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>PACKET_PARSER_DECL</name>
      <anchorfile>namespacechannel_1_1Parsers.html</anchorfile>
      <anchor>a7bbde53ef90979ff5fc256ae3d7fb715</anchor>
      <arglist>(BazaarMarketEnd)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>PACKET_PARSER_DECL</name>
      <anchorfile>namespacechannel_1_1Parsers.html</anchorfile>
      <anchor>a10f5427cf4aa57446a65ddcd4e0f34bc</anchor>
      <arglist>(BazaarMarketComment)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>PACKET_PARSER_DECL</name>
      <anchorfile>namespacechannel_1_1Parsers.html</anchorfile>
      <anchor>ad251ad755c8c960f8e7aba6e6d369772</anchor>
      <arglist>(PartnerDemonAISet)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>PACKET_PARSER_DECL</name>
      <anchorfile>namespacechannel_1_1Parsers.html</anchorfile>
      <anchor>a2e0d6e653c325c0263da372e036444b0</anchor>
      <arglist>(MapFlag)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>PACKET_PARSER_DECL</name>
      <anchorfile>namespacechannel_1_1Parsers.html</anchorfile>
      <anchor>a73e4bcf1dda9f74760164783eb4468dd</anchor>
      <arglist>(DemonCompendium)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>PACKET_PARSER_DECL</name>
      <anchorfile>namespacechannel_1_1Parsers.html</anchorfile>
      <anchor>a4b126f2c4ce892402719ebdb72e7f404</anchor>
      <arglist>(ItemRepairMax)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>PACKET_PARSER_DECL</name>
      <anchorfile>namespacechannel_1_1Parsers.html</anchorfile>
      <anchor>ad11f0b238d2d4daa6189d6af9a263598</anchor>
      <arglist>(AppearanceAlter)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>PACKET_PARSER_DECL</name>
      <anchorfile>namespacechannel_1_1Parsers.html</anchorfile>
      <anchor>a8db68369da4d114e6cf2cc43fb207408</anchor>
      <arglist>(EntrustRequest)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>PACKET_PARSER_DECL</name>
      <anchorfile>namespacechannel_1_1Parsers.html</anchorfile>
      <anchor>af7b0d06a55b901b0ce627422273567e2</anchor>
      <arglist>(EntrustAccept)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>PACKET_PARSER_DECL</name>
      <anchorfile>namespacechannel_1_1Parsers.html</anchorfile>
      <anchor>a4909813087e538b2ba9fc6c828c43e7f</anchor>
      <arglist>(EntrustRewardUpdate)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>PACKET_PARSER_DECL</name>
      <anchorfile>namespacechannel_1_1Parsers.html</anchorfile>
      <anchor>a9e8724766222c0ba19e9f6cebdd5f25b</anchor>
      <arglist>(EntrustRewardFinish)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>PACKET_PARSER_DECL</name>
      <anchorfile>namespacechannel_1_1Parsers.html</anchorfile>
      <anchor>ab5972eaef6e8c8a76d0197dfd95e56f2</anchor>
      <arglist>(EntrustRewardAccept)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>PACKET_PARSER_DECL</name>
      <anchorfile>namespacechannel_1_1Parsers.html</anchorfile>
      <anchor>a79cd737c326ba357695726826200c5ce</anchor>
      <arglist>(EntrustFinish)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>PACKET_PARSER_DECL</name>
      <anchorfile>namespacechannel_1_1Parsers.html</anchorfile>
      <anchor>a40b2fd880de3f2fc55ba341e298d3092</anchor>
      <arglist>(DemonCrystallizeItem)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>PACKET_PARSER_DECL</name>
      <anchorfile>namespacechannel_1_1Parsers.html</anchorfile>
      <anchor>a43c1730851b18f1fddd83b318e3af59b</anchor>
      <arglist>(DemonCrystallize)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>PACKET_PARSER_DECL</name>
      <anchorfile>namespacechannel_1_1Parsers.html</anchorfile>
      <anchor>afda3e648745534650637acc40bd0ee78</anchor>
      <arglist>(EnchantItem)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>PACKET_PARSER_DECL</name>
      <anchorfile>namespacechannel_1_1Parsers.html</anchorfile>
      <anchor>a7b6e69c2180ceebc6764b46ea1bfea80</anchor>
      <arglist>(Enchant)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>PACKET_PARSER_DECL</name>
      <anchorfile>namespacechannel_1_1Parsers.html</anchorfile>
      <anchor>aa220aab3e270a2e175aece2654032b33</anchor>
      <arglist>(DungeonRecords)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>PACKET_PARSER_DECL</name>
      <anchorfile>namespacechannel_1_1Parsers.html</anchorfile>
      <anchor>a6526cf831ca743a5c29661a3abf87f62</anchor>
      <arglist>(TriFusionJoin)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>PACKET_PARSER_DECL</name>
      <anchorfile>namespacechannel_1_1Parsers.html</anchorfile>
      <anchor>a9f83948781aea4c3483098a366c88104</anchor>
      <arglist>(TriFusionDemonUpdate)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>PACKET_PARSER_DECL</name>
      <anchorfile>namespacechannel_1_1Parsers.html</anchorfile>
      <anchor>ad408ee5e634e77fe90f3f99a5f08eff7</anchor>
      <arglist>(TriFusionRewardUpdate)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>PACKET_PARSER_DECL</name>
      <anchorfile>namespacechannel_1_1Parsers.html</anchorfile>
      <anchor>a25da2351e7fd3d590dfd49a340d68cf1</anchor>
      <arglist>(TriFusionRewardAccept)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>PACKET_PARSER_DECL</name>
      <anchorfile>namespacechannel_1_1Parsers.html</anchorfile>
      <anchor>a38db8651011259bb469354a840323508</anchor>
      <arglist>(TriFusionAccept)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>PACKET_PARSER_DECL</name>
      <anchorfile>namespacechannel_1_1Parsers.html</anchorfile>
      <anchor>a3e49d2050f446b58cc1566a7d0368dd8</anchor>
      <arglist>(TriFusionLeave)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>PACKET_PARSER_DECL</name>
      <anchorfile>namespacechannel_1_1Parsers.html</anchorfile>
      <anchor>a24383339d474dd57cb6abe1fe9b3aa6d</anchor>
      <arglist>(ClanEmblemUpdate)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>PACKET_PARSER_DECL</name>
      <anchorfile>namespacechannel_1_1Parsers.html</anchorfile>
      <anchor>a1dbe06d2e2279a75fb5089fd0c8d7710</anchor>
      <arglist>(DemonFamiliarity)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>PACKET_PARSER_DECL</name>
      <anchorfile>namespacechannel_1_1Parsers.html</anchorfile>
      <anchor>a6a9e8571d066ce5d17c93f0a201a323b</anchor>
      <arglist>(PlasmaStart)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>PACKET_PARSER_DECL</name>
      <anchorfile>namespacechannel_1_1Parsers.html</anchorfile>
      <anchor>a1068fefcd88b74de54dd8df769c65e02</anchor>
      <arglist>(PlasmaResult)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>PACKET_PARSER_DECL</name>
      <anchorfile>namespacechannel_1_1Parsers.html</anchorfile>
      <anchor>a49682ea2c49dff80bd949c4f387e1692</anchor>
      <arglist>(PlasmaEnd)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>PACKET_PARSER_DECL</name>
      <anchorfile>namespacechannel_1_1Parsers.html</anchorfile>
      <anchor>a55be10e0201d4ba3b68299f2ed615f4a</anchor>
      <arglist>(PlasmaItemData)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>PACKET_PARSER_DECL</name>
      <anchorfile>namespacechannel_1_1Parsers.html</anchorfile>
      <anchor>a6f9269fc10e9aae943b175b1ff8969e5</anchor>
      <arglist>(PlasmaItem)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>PACKET_PARSER_DECL</name>
      <anchorfile>namespacechannel_1_1Parsers.html</anchorfile>
      <anchor>acbca02b07b81a0ed71fc6674678a9c09</anchor>
      <arglist>(ItemDisassemble)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>PACKET_PARSER_DECL</name>
      <anchorfile>namespacechannel_1_1Parsers.html</anchorfile>
      <anchor>a02765599fb09d4dc3333638b79b3b882</anchor>
      <arglist>(EquipmentMod)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>PACKET_PARSER_DECL</name>
      <anchorfile>namespacechannel_1_1Parsers.html</anchorfile>
      <anchor>af6a1e6a663f51eb441734a3be4d22e8d</anchor>
      <arglist>(MaterialBox)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>PACKET_PARSER_DECL</name>
      <anchorfile>namespacechannel_1_1Parsers.html</anchorfile>
      <anchor>aba0dc452cb4aaf91d4aca6e6f09fefcd</anchor>
      <arglist>(Analyze)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>PACKET_PARSER_DECL</name>
      <anchorfile>namespacechannel_1_1Parsers.html</anchorfile>
      <anchor>a4d6a27a5d8087868b42bd73c2e2cec3e</anchor>
      <arglist>(MaterialExtract)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>PACKET_PARSER_DECL</name>
      <anchorfile>namespacechannel_1_1Parsers.html</anchorfile>
      <anchor>a9034798fa159038dbe2b9f73973a0ceb</anchor>
      <arglist>(MaterialInsert)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>PACKET_PARSER_DECL</name>
      <anchorfile>namespacechannel_1_1Parsers.html</anchorfile>
      <anchor>ae57f37fdd9e5af08553d2333a4c0dde7</anchor>
      <arglist>(ItemExchange)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>PACKET_PARSER_DECL</name>
      <anchorfile>namespacechannel_1_1Parsers.html</anchorfile>
      <anchor>a547c55cdb397b7e024480ef4d568592b</anchor>
      <arglist>(CompShopOpen)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>PACKET_PARSER_DECL</name>
      <anchorfile>namespacechannel_1_1Parsers.html</anchorfile>
      <anchor>adb17529b0debaff37daf4e8f55d9c082</anchor>
      <arglist>(CompShopList)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>PACKET_PARSER_DECL</name>
      <anchorfile>namespacechannel_1_1Parsers.html</anchorfile>
      <anchor>a6ac189bb2a6d768f11f61172070c2222</anchor>
      <arglist>(FusionGauge)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>PACKET_PARSER_DECL</name>
      <anchorfile>namespacechannel_1_1Parsers.html</anchorfile>
      <anchor>ae1e1d33b474e6345e8392a367c3204f1</anchor>
      <arglist>(TitleList)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>PACKET_PARSER_DECL</name>
      <anchorfile>namespacechannel_1_1Parsers.html</anchorfile>
      <anchor>abade11aa90903463b17d1158b2e6ca87</anchor>
      <arglist>(PartnerDemonQuestList)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>PACKET_PARSER_DECL</name>
      <anchorfile>namespacechannel_1_1Parsers.html</anchorfile>
      <anchor>a9d17550ca2585c4da2a53b6f8ecbfbb8</anchor>
      <arglist>(LockDemon)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>PACKET_PARSER_DECL</name>
      <anchorfile>namespacechannel_1_1Parsers.html</anchorfile>
      <anchor>a7a341b2d2864483e4423e4c4b923ab26</anchor>
      <arglist>(PvPCharacterInfo)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>PACKET_PARSER_DECL</name>
      <anchorfile>namespacechannel_1_1Parsers.html</anchorfile>
      <anchor>a0b5184340abd7797b474161c07baa3a7</anchor>
      <arglist>(TeamInfo)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>PACKET_PARSER_DECL</name>
      <anchorfile>namespacechannel_1_1Parsers.html</anchorfile>
      <anchor>a71db5e43b67b47af2fac8f627127d37d</anchor>
      <arglist>(PartnerDemonQuestTemp)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>PACKET_PARSER_DECL</name>
      <anchorfile>namespacechannel_1_1Parsers.html</anchorfile>
      <anchor>ace33066e7a6955923b936aa8be6c479c</anchor>
      <arglist>(ItemDepoRemote)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>PACKET_PARSER_DECL</name>
      <anchorfile>namespacechannel_1_1Parsers.html</anchorfile>
      <anchor>abd4046837d69578ebca45c277ae58678</anchor>
      <arglist>(DemonDepoRemote)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>PACKET_PARSER_DECL</name>
      <anchorfile>namespacechannel_1_1Parsers.html</anchorfile>
      <anchor>a314e5f0981b4af6e8abe9460217f3cfd</anchor>
      <arglist>(CommonSwitchInfo)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>PACKET_PARSER_DECL</name>
      <anchorfile>namespacechannel_1_1Parsers.html</anchorfile>
      <anchor>a0f8f963f709dbd90cd1834fbd922917f</anchor>
      <arglist>(CasinoCoinTotal)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>PACKET_PARSER_DECL</name>
      <anchorfile>namespacechannel_1_1Parsers.html</anchorfile>
      <anchor>a978602aaa3db2e8e4a14fa3cd070492d</anchor>
      <arglist>(TriFusionSolo)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>PACKET_PARSER_DECL</name>
      <anchorfile>namespacechannel_1_1Parsers.html</anchorfile>
      <anchor>ae8efcd8ee307dc56260ebc9d9e2159e3</anchor>
      <arglist>(SearchEntryInfo)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>PACKET_PARSER_DECL</name>
      <anchorfile>namespacechannel_1_1Parsers.html</anchorfile>
      <anchor>abdd57568069d3f832b8c42ff73b3f242</anchor>
      <arglist>(HouraiData)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>PACKET_PARSER_DECL</name>
      <anchorfile>namespacechannel_1_1Parsers.html</anchorfile>
      <anchor>a1c216aba3483af2f16e66611d72cdfc0</anchor>
      <arglist>(CultureData)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>PACKET_PARSER_DECL</name>
      <anchorfile>namespacechannel_1_1Parsers.html</anchorfile>
      <anchor>a81ce58fc3c9e06f093a4c53ea8bfd239</anchor>
      <arglist>(EquipmentModEdit)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>PACKET_PARSER_DECL</name>
      <anchorfile>namespacechannel_1_1Parsers.html</anchorfile>
      <anchor>a9978dcef5bb2724884d188f8b994a53d</anchor>
      <arglist>(PAttributeDeadline)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>PACKET_PARSER_DECL</name>
      <anchorfile>namespacechannel_1_1Parsers.html</anchorfile>
      <anchor>acdf733023072ce6d00cff3fe5178d296</anchor>
      <arglist>(DemonDepoList)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>PACKET_PARSER_DECL</name>
      <anchorfile>namespacechannel_1_1Parsers.html</anchorfile>
      <anchor>af500e1c32db991db11d618ca7ccc87e5</anchor>
      <arglist>(Barter)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>PACKET_PARSER_DECL</name>
      <anchorfile>namespacechannel_1_1Parsers.html</anchorfile>
      <anchor>a59d3b4e968d8d50b9cbf4fec9f3c44ab</anchor>
      <arglist>(Blacklist)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>PACKET_PARSER_DECL</name>
      <anchorfile>namespacechannel_1_1Parsers.html</anchorfile>
      <anchor>a056234a0f2190082a4ae38cecb06f227</anchor>
      <arglist>(DigitalizePoints)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>PACKET_PARSER_DECL</name>
      <anchorfile>namespacechannel_1_1Parsers.html</anchorfile>
      <anchor>a7d5682be8975e571b5b5cfe15aba374c</anchor>
      <arglist>(DigitalizeAssist)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>PACKET_PARSER_DECL</name>
      <anchorfile>namespacechannel_1_1Parsers.html</anchorfile>
      <anchor>a88d597b70a6fa94b6a250b945f1174d8</anchor>
      <arglist>(VABox)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>PACKET_PARSER_DECL</name>
      <anchorfile>namespacechannel_1_1Parsers.html</anchorfile>
      <anchor>a008a560eb55e4913d7ed68dc820d62cc</anchor>
      <arglist>(VABoxAdd)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>PACKET_PARSER_DECL</name>
      <anchorfile>namespacechannel_1_1Parsers.html</anchorfile>
      <anchor>ac0a06eff23759d840aa828e9a04c2383</anchor>
      <arglist>(VABoxRemove)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>PACKET_PARSER_DECL</name>
      <anchorfile>namespacechannel_1_1Parsers.html</anchorfile>
      <anchor>a5b82e3a988919d9accf0d458df8108d3</anchor>
      <arglist>(VAChange)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>PACKET_PARSER_DECL</name>
      <anchorfile>namespacechannel_1_1Parsers.html</anchorfile>
      <anchor>ac1e6ed48b3b71ffb5647d7a28c4bb43f</anchor>
      <arglist>(VABoxMove)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>PACKET_PARSER_DECL</name>
      <anchorfile>namespacechannel_1_1Parsers.html</anchorfile>
      <anchor>acd23504aa3bff98882c9cf7831eec6ad</anchor>
      <arglist>(SetWorldInfo)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>PACKET_PARSER_DECL</name>
      <anchorfile>namespacechannel_1_1Parsers.html</anchorfile>
      <anchor>ab78a16424de5a60aa2ef897c08e89a26</anchor>
      <arglist>(SetOtherChannelInfo)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>PACKET_PARSER_DECL</name>
      <anchorfile>namespacechannel_1_1Parsers.html</anchorfile>
      <anchor>ac38153f129a57a21a81a664e89dc80b2</anchor>
      <arglist>(AccountLogin)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>PACKET_PARSER_DECL</name>
      <anchorfile>namespacechannel_1_1Parsers.html</anchorfile>
      <anchor>a461171d09726151f3fe4be69c22c57a1</anchor>
      <arglist>(AccountLogout)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>PACKET_PARSER_DECL</name>
      <anchorfile>namespacechannel_1_1Parsers.html</anchorfile>
      <anchor>a08bc985f943875c19c658b9127b45d3a</anchor>
      <arglist>(Relay)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>PACKET_PARSER_DECL</name>
      <anchorfile>namespacechannel_1_1Parsers.html</anchorfile>
      <anchor>aac63594b1a5d0d8ee9ae1e6b8cca79d3</anchor>
      <arglist>(DataSync)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>PACKET_PARSER_DECL</name>
      <anchorfile>namespacechannel_1_1Parsers.html</anchorfile>
      <anchor>a0d617e7007f87615239e7d3815bbc92c</anchor>
      <arglist>(CharacterLogin)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>PACKET_PARSER_DECL</name>
      <anchorfile>namespacechannel_1_1Parsers.html</anchorfile>
      <anchor>aa3a2b79e975884c97a11d63c2efa7c4c</anchor>
      <arglist>(FriendsUpdate)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>PACKET_PARSER_DECL</name>
      <anchorfile>namespacechannel_1_1Parsers.html</anchorfile>
      <anchor>afc88c91591e8baba78200df88677b777</anchor>
      <arglist>(PartyUpdate)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>PACKET_PARSER_DECL</name>
      <anchorfile>namespacechannel_1_1Parsers.html</anchorfile>
      <anchor>acaf6d73b0dcb020c321c846747e4c37e</anchor>
      <arglist>(ClanUpdate)</arglist>
    </member>
  </compound>
  <compound kind="namespace">
    <name>libcomp</name>
    <filename>namespacelibcomp.html</filename>
    <member kind="typedef">
      <type>uint16_t</type>
      <name>CommandCode_t</name>
      <anchorfile>namespacelibcomp.html</anchorfile>
      <anchor>a79ff02590a8d72c2abb8537458a72e9c</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>std::unordered_map&lt; Key, T, HashType&lt; Key &gt;&gt;</type>
      <name>EnumMap</name>
      <anchorfile>namespacelibcomp.html</anchorfile>
      <anchor>a1442fc2425910540ae92c53a56c03cc6</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>typename std::conditional&lt; std::is_enum&lt; Key &gt;::value, EnumClassHash, std::hash&lt; Key &gt;&gt;::type</type>
      <name>HashType</name>
      <anchorfile>namespacelibcomp.html</anchorfile>
      <anchor>ae51bc9f0bbe012f4ee4a81e96cf0f74f</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>DBExplicitUpdate::Set&lt; libcomp::String &gt;</name>
      <anchorfile>namespacelibcomp.html</anchorfile>
      <anchor>a79cce8c37467b57fa0878c88f17ade16</anchor>
      <arglist>(const libcomp::String &amp;column, libcomp::String value)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>DBExplicitUpdate::Set&lt; libobjgen::UUID &gt;</name>
      <anchorfile>namespacelibcomp.html</anchorfile>
      <anchor>ac186379bcff09a602a7c25063a2481fa</anchor>
      <arglist>(const libcomp::String &amp;column, libobjgen::UUID value)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>DBExplicitUpdate::SetFrom&lt; libcomp::String &gt;</name>
      <anchorfile>namespacelibcomp.html</anchorfile>
      <anchor>a970878719e0106f0e67b47ff49ec41f2</anchor>
      <arglist>(const libcomp::String &amp;column, libcomp::String value, libcomp::String expected)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>DBExplicitUpdate::SetFrom&lt; libobjgen::UUID &gt;</name>
      <anchorfile>namespacelibcomp.html</anchorfile>
      <anchor>a6083d3788dcaecb3851340467658d783</anchor>
      <arglist>(const libcomp::String &amp;column, libobjgen::UUID value, libobjgen::UUID expected)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>DefinitionManager::RegisterServerSideDefinition&lt; objects::EnchantSetData &gt;</name>
      <anchorfile>namespacelibcomp.html</anchorfile>
      <anchor>a990cd36a67fda02cfc87a982221dab63</anchor>
      <arglist>(const std::shared_ptr&lt; objects::EnchantSetData &gt; &amp;record)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>DefinitionManager::RegisterServerSideDefinition&lt; objects::EnchantSpecialData &gt;</name>
      <anchorfile>namespacelibcomp.html</anchorfile>
      <anchor>a2f227b7da737bb3aeccabafffbfdf4f0</anchor>
      <arglist>(const std::shared_ptr&lt; objects::EnchantSpecialData &gt; &amp;record)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>DefinitionManager::RegisterServerSideDefinition&lt; objects::MiSStatusData &gt;</name>
      <anchorfile>namespacelibcomp.html</anchorfile>
      <anchor>ae04e775813a7befb59c35f5056b3f0a5</anchor>
      <arglist>(const std::shared_ptr&lt; objects::MiSStatusData &gt; &amp;record)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>DefinitionManager::RegisterServerSideDefinition&lt; objects::Tokusei &gt;</name>
      <anchorfile>namespacelibcomp.html</anchorfile>
      <anchor>ac53e99b39ffba66973e3f947dfce572d</anchor>
      <arglist>(const std::shared_ptr&lt; objects::Tokusei &gt; &amp;record)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>ServerDataManager::LoadObject&lt; objects::DemonPresent &gt;</name>
      <anchorfile>namespacelibcomp.html</anchorfile>
      <anchor>a4f0280c8f124bea313f8fa5209945ef6</anchor>
      <arglist>(const tinyxml2::XMLDocument &amp;doc, const tinyxml2::XMLElement *objNode, DefinitionManager *definitionManager)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>ServerDataManager::LoadObject&lt; objects::DropSet &gt;</name>
      <anchorfile>namespacelibcomp.html</anchorfile>
      <anchor>a677dc85ea0d544d99c17ebc220ec096b</anchor>
      <arglist>(const tinyxml2::XMLDocument &amp;doc, const tinyxml2::XMLElement *objNode, DefinitionManager *definitionManager)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>ServerDataManager::LoadObject&lt; objects::EnchantSetData &gt;</name>
      <anchorfile>namespacelibcomp.html</anchorfile>
      <anchor>a876428ea15c5f8323e4d82e2f514f68e</anchor>
      <arglist>(const tinyxml2::XMLDocument &amp;doc, const tinyxml2::XMLElement *objNode, DefinitionManager *definitionManager)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>ServerDataManager::LoadObject&lt; objects::EnchantSpecialData &gt;</name>
      <anchorfile>namespacelibcomp.html</anchorfile>
      <anchor>a282fd6a2a357f1c5f6a226d7ad31e6b7</anchor>
      <arglist>(const tinyxml2::XMLDocument &amp;doc, const tinyxml2::XMLElement *objNode, DefinitionManager *definitionManager)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>ServerDataManager::LoadObject&lt; objects::Event &gt;</name>
      <anchorfile>namespacelibcomp.html</anchorfile>
      <anchor>a98741e6a5355d756cabe22bfc05af7a3</anchor>
      <arglist>(const tinyxml2::XMLDocument &amp;doc, const tinyxml2::XMLElement *objNode, DefinitionManager *definitionManager)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>ServerDataManager::LoadObject&lt; objects::MiSStatusData &gt;</name>
      <anchorfile>namespacelibcomp.html</anchorfile>
      <anchor>ae0ead762950f4e24f426c3858997d991</anchor>
      <arglist>(const tinyxml2::XMLDocument &amp;doc, const tinyxml2::XMLElement *objNode, DefinitionManager *definitionManager)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>ServerDataManager::LoadObject&lt; objects::ServerShop &gt;</name>
      <anchorfile>namespacelibcomp.html</anchorfile>
      <anchor>a0142ab03575b635a88c9b691e990cb23</anchor>
      <arglist>(const tinyxml2::XMLDocument &amp;doc, const tinyxml2::XMLElement *objNode, DefinitionManager *definitionManager)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>ServerDataManager::LoadObject&lt; objects::ServerZone &gt;</name>
      <anchorfile>namespacelibcomp.html</anchorfile>
      <anchor>a0d366da10417b39e657ff922f5be1812</anchor>
      <arglist>(const tinyxml2::XMLDocument &amp;doc, const tinyxml2::XMLElement *objNode, DefinitionManager *definitionManager)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>ServerDataManager::LoadObject&lt; objects::ServerZoneInstance &gt;</name>
      <anchorfile>namespacelibcomp.html</anchorfile>
      <anchor>a4e572cf2ab83dc86193b64d5bf40f817</anchor>
      <arglist>(const tinyxml2::XMLDocument &amp;doc, const tinyxml2::XMLElement *objNode, DefinitionManager *definitionManager)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>ServerDataManager::LoadObject&lt; objects::Tokusei &gt;</name>
      <anchorfile>namespacelibcomp.html</anchorfile>
      <anchor>ad85d85ace4ceb7ee4b4d51594dd5bf73</anchor>
      <arglist>(const tinyxml2::XMLDocument &amp;doc, const tinyxml2::XMLElement *objNode, DefinitionManager *definitionManager)</arglist>
    </member>
    <member kind="variable">
      <type>const std::size_t</type>
      <name>BLOWFISH_BLOCK_SIZE</name>
      <anchorfile>namespacelibcomp.html</anchorfile>
      <anchor>a2765e02af07d8f628f6e5e93d4c95b74</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const unsigned long long</type>
      <name>LEVEL_XP_REQUIREMENTS</name>
      <anchorfile>namespacelibcomp.html</anchorfile>
      <anchor>a350e3aff57d5978e7732dc852bc07b63</anchor>
      <arglist>[]</arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static std::set&lt; libobjgen::MetaVariable::MetaVariableType_t &gt;</type>
      <name>validInt32Types</name>
      <anchorfile>namespacelibcomp.html</anchorfile>
      <anchor>a3cc8ff7334c57b39376e2f9c7a7a5271</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static std::set&lt; libobjgen::MetaVariable::MetaVariableType_t &gt;</type>
      <name>validInt64Types</name>
      <anchorfile>namespacelibcomp.html</anchorfile>
      <anchor>ad23f032a5d4228b97b4787845267f33d</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="namespace">
    <name>objects</name>
    <filename>namespaceobjects.html</filename>
  </compound>
  <compound kind="page">
    <name>index</name>
    <title>server/channel - A world&apos;s channel server</title>
    <filename>index</filename>
    <docanchor file="index" title="Starting the server">setup</docanchor>
    <docanchor file="index" title="Encryption and Decryption">enc_and_dec</docanchor>
  </compound>
</tagfile>
